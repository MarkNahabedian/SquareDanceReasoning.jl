# Generate an HTML file from the as_text examples.

using SquareDanceReasoning
using SquareDanceReasoning: elt
using Serialization
using XML

export generate_html_as_text_examples

let
    examples = deserialize(CALL_TEXT_EXAMPLES_FILE)
    example_rows = []
    for key in sort(collect(keys(examples)); by=nameof)
        group = examples[key]
        for example in group
            push!(example_rows,
                  elt("tr",
                      elt("td",
                          repr(example.call;
                               context=(:module => SquareDanceReasoning))),
                      elt("td",
                          example.text)))
        end
    end    
    open(joinpath(@__DIR__, "src", "as_text_examples.md"), "w") do io
        println(io, "```@raw html")
        println(io, "<!-- This file was automatically generated by code in $(@__FILE__). -->")
        println(io, "```\n")
        println(io, " # Examples of [`as_text`](@ref) output for Square Dane Calls\n")
        println(io, """
        These are examples of how square dance calls are represented and the
        textual output of the [`as_text`](@ref) function for each example.\n\n
        """)
        println(io, "```@raw html")
        XML.write(io, elt("div", elt("table", example_rows...)))
        println(io, "\n```\n")
    end
end

