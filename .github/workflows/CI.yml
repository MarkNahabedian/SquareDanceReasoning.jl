name: CI
on:
  push:
    branches:
      - main
    tags: ['*']
  pull_request:
  workflow_dispatch:
concurrency:
  # Skip intermediate builds: always.
  # Cancel intermediate builds: only if it is a pull request build.
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ startsWith(github.ref, 'refs/pull/') }}
jobs:
  test:
    name: Julia ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.arch }} - ${{ github.event_name }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 60
    permissions: # needed to allow julia-actions/cache to proactively delete old caches that it has created
      actions: write
      contents: read
    strategy:
      fail-fast: false
      matrix:
        version:
          - '1.11'
#         - '1.10'
#         - 'nightly'
        os:
          - ubuntu-latest
        arch:
          - x64
    steps:
      - uses: actions/checkout@v4
      - uses: julia-actions/setup-julia@v2
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}
      - uses: julia-actions/cache@v2
      - uses: julia-actions/julia-buildpkg@v1
      - uses: julia-actions/julia-runtest@v1
      - uses: julia-actions/julia-processcoverage@v1
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: MarkNahabedian/SquareDanceReasoning.jl
          files: lcov.info
      - name: Upload call unit test animations
        uses: actions/upload-artifact@v4
        with:
          name: call_animations
          path: test/test_calls/Animations
      - name: Upload as_text examples
        uses: actions/upload-artifact@v4
        with:
          name: as_text_examples
          path: test/test_calls/CALL_TEXT_EXAMPLES.serialized
  docs:
    name: Documentation
    runs-on: ubuntu-latest
    needs: test
    permissions:
      actions: write # needed to allow julia-actions/cache to proactively delete old caches that it has created
      contents: write
      statuses: write
    steps:
      - uses: actions/checkout@v4
      - uses: julia-actions/setup-julia@v2
        with:
          version: '1'
      - uses: julia-actions/cache@v2
      - name: Retrieve call unit test animations
        uses: actions/download-artifact@v4
        with:
          name: call_animations
          path: test/test_calls/Animations
      - name: Retrieve as_text examples
        uses: actions/download-artifact@v4
        with:
          name: as_text_examples
          path: test/test_calls/CALL_TEXT_EXAMPLES.serialized
#     - name: Configure doc environment
#       shell: julia --project=docs --color=yes {0}
#       run: |
#         using Pkg
#         Pkg.develop(PackageSpec(path=pwd()))
#         Pkg.instantiate(verbose=true)
      - uses: julia-actions/julia-buildpkg@v1
      - uses: julia-actions/julia-docdeploy@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      # - name: Run doctests
      #   shell: julia --project=docs --color=yes {0}
      #   run: |
      #     using Documenter: DocMeta, doctest
      #     using SquareDanceReasoning
      #     DocMeta.setdocmeta!(SquareDanceReasoning, :DocTestSetup, :(using SquareDanceReasoning); recursive=true)
      #     doctest(SquareDanceReasoning)
      - run: julia --project=docs docs/make.jl
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DOCUMENTER_KEY: ${{ secrets.DOCUMENTER_KEY }}
