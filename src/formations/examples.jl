# We can collect examples for formations from the unit tests.

# We can then jiggle the positions and directions a bit and run them
# through the formation recognitioon engine to test our sensitivity to
# position noise.

# We can then generate HTML files for the documentation.

using JSON

export COLLECTED_FORMATIONS, collect_formation_examples,
    save_formation_examples, load_formation_examples,
    generate_example_formation_diagrams

COLLECTED_FORMATIONS = Vector{SquareDanceFormation}()

function collect_formation_examples(kb::ReteRootNode)
    askc(kb, SquareDanceFormation) do f
        if (!any(COLLECTED_FORMATIONS) do example
                isa(example, typeof(f))
            end)
            push!(COLLECTED_FORMATIONS, f)
        end
    end
end


struct FormationExamplesSerialization <: JSON.CommonSerialization
end

function JSON.show_json(io::JSON.StructuralContext,
                        s::FormationExamplesSerialization,
                        f::SquareDanceFormation)
    JSON.Writer.begin_object(io)
    JSON.show_pair(io, s, "name", string(typeof(f)))
    JSON.show_pair(io, s, "dancer_states", dancer_states(f))
    JSON.Writer.end_object(io)
end

function JSON.show_json(io::JSON.StructuralContext,
                        s::FormationExamplesSerialization,
                        ds::DancerState) 
    JSON.Writer.begin_object(io)
    JSON.show_pair(io, s, "couple_number", ds.dancer.couple_number)
    JSON.show_pair(io, s, "gender", string(typeof(ds.dancer.gender)))
    JSON.show_pair(io, s, "direction", ds.direction)
    JSON.show_pair(io, s, "down", ds.down)
    JSON.show_pair(io, s, "left", ds.left)
    JSON.Writer.end_object(io)
end

FORMATIONS_EXAMPLE_FILE = joinpath(@__DIR__, "example_formations.json")

function save_formation_examples()
    open(FORMATIONS_EXAMPLE_FILE, "w") do io
        JSON.show_json(
            JSON.Writer.PrettyContext(io, 2),
            FormationExamplesSerialization(),
            [ "This file is automatically generated by the function save_formation_examples",
              sort(COLLECTED_FORMATIONS;
                   by=(f -> string(typeof(f))))...
                       ])
    end
end

function load_formation_examples()
    parsed = JSON.parsefile(FORMATIONS_EXAMPLE_FILE)
    formation_examples = Dict{String, Vector{DancerState}}()
    for formation in parsed[2:end]
        formation_examples[formation["name"]] =
            map(formation["dancer_states"]) do pds
                DancerState(Dancer(pds["couple_number"],
                                   GENDER_FROM_STRING[pds["gender"]]),
                            -1,
                            pds["direction"],
                            pds["down"],
                            pds["left"])
            end
    end
    formation_examples
end

function generate_example_formation_diagrams(dir)
    for (name, dancer_states) in load_formation_examples()
        kb = make_kb()
        receive(kb, SquareDanceReasoning.SDSquare(
            map(ds -> ds.dancer, dancer_states)))
        for ds in dancer_states
            receive(kb, ds)
        end
        write_formation_html_file(name,
                                  joinpath(dir, "$name.html"),
                                  kb)
    end
end

