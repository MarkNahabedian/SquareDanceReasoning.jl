```@raw html
<!-- This file was automatically generated by code in /Users/MarkNahabedian/.julia/dev/SquareDanceReasoning.jl/docs/as_text_examples.jl. -->
```

 # Examples of `as_text` output for Square Dane Calls

These are examples of how square dance calls are represented and the
textual output of the [`as_text`](@ref) function for each example.



```@raw html
<div>
  <table>
    <tr>
      <td>_BackToAWave(Everyone(), RightHanded())</td>
      <td>SquareDanceReasoning.Everyone() Backup to a Wave</td>
    </tr>
    <tr>
      <td>QuarterIn(CurrentHeads())</td>
      <td>CurrentHeads </td>
    </tr>
    <tr>
      <td>QuarterIn(Centers())</td>
      <td>Centers </td>
    </tr>
    <tr>
      <td>QuarterIn(Everyone())</td>
      <td>Everyone </td>
    </tr>
    <tr>
      <td>FaceLeft(Everyone(), 1)</td>
      <td>Everyone quarter left, 1 ticks.</td>
    </tr>
    <tr>
      <td>FaceLeft(CurrentSides(), 1)</td>
      <td>CurrentSides quarter left, 1 ticks.</td>
    </tr>
    <tr>
      <td>FaceLeft(Everyone(), 1)</td>
      <td>Everyone quarter left, 1 ticks.</td>
    </tr>
    <tr>
      <td>AndRoll(Everyone())</td>
      <td>Everyone roll.</td>
    </tr>
    <tr>
      <td>AndRoll(Leaders())</td>
      <td>Leaders roll.</td>
    </tr>
    <tr>
      <td>AndRoll(Everyone())</td>
      <td>Everyone roll.</td>
    </tr>
    <tr>
      <td>AndRoll(Everyone())</td>
      <td>Everyone roll.</td>
    </tr>
    <tr>
      <td>_FaceOriginalPartner(Everyone(), 1)</td>
      <td>Everyone face your original partner.</td>
    </tr>
    <tr>
      <td>_FaceOriginalPartner(Guys(), 1)</td>
      <td>Guys face your original partner.</td>
    </tr>
    <tr>
      <td>_FaceOriginalPartner(Everyone(), 1)</td>
      <td>Everyone face your original partner.</td>
    </tr>
    <tr>
      <td>_FaceOriginalPartner(Everyone(), 1)</td>
      <td>Everyone face your original partner.</td>
    </tr>
    <tr>
      <td>BoxCirculate(Everyone(), 2)</td>
      <td>Everyone box circulate</td>
    </tr>
    <tr>
      <td>BoxCirculate(Centers(), 2)</td>
      <td>Centers box circulate</td>
    </tr>
    <tr>
      <td>StepToAWave(Everyone(), RightHanded(), 2)</td>
      <td>SquareDanceReasoning.Everyone() Step To a Wave</td>
    </tr>
    <tr>
      <td>StepToAWave(OriginalSides(), RightHanded(), 2)</td>
      <td>SquareDanceReasoning.OriginalSides() Step To a Wave</td>
    </tr>
    <tr>
      <td>_Meet(CurrentSides(), 1)</td>
      <td>SquareDanceReasoning.CurrentSides() _Meet</td>
    </tr>
    <tr>
      <td>_Meet(OriginalHeads(), 1)</td>
      <td>OriginalHeads() _Meet</td>
    </tr>
    <tr>
      <td>Balance(OriginalSides(), 2)</td>
      <td>OriginalSides Balance</td>
    </tr>
    <tr>
      <td>Balance(Guys(), 2)</td>
      <td>Guys Balance</td>
    </tr>
    <tr>
      <td>Balance(Gals(), 2)</td>
      <td>Gals Balance</td>
    </tr>
    <tr>
      <td>StepThru(Everyone())</td>
      <td>Everyone StepThru</td>
    </tr>
    <tr>
      <td>StepThru(CurrentHeads())</td>
      <td>CurrentHeads StepThru</td>
    </tr>
    <tr>
      <td>StepThru(Leaders())</td>
      <td>Leaders StepThru</td>
    </tr>
    <tr>
      <td>_Rest(Ends(), 2)</td>
      <td>Ends rest for 2 ticks.</td>
    </tr>
    <tr>
      <td>_Rest(Belles(), 1)</td>
      <td>Belles rest for 1 ticks.</td>
    </tr>
    <tr>
      <td>_UnStepToAWave(Everyone())</td>
      <td>SquareDanceReasoning.Everyone() Un Step To a Wave</td>
    </tr>
    <tr>
      <td>Hinge(Everyone(), 2)</td>
      <td>Everyone hinge</td>
    </tr>
    <tr>
      <td>Hinge(Everyone(), 2)</td>
      <td>Everyone hinge</td>
    </tr>
    <tr>
      <td>_FaceOriginalCorner(Gals(), 1)</td>
      <td>Gals face your original corner.</td>
    </tr>
    <tr>
      <td>_FaceOriginalCorner(Everyone(), 1)</td>
      <td>Everyone face your original corner.</td>
    </tr>
    <tr>
      <td>FaceRight(Everyone(), 1)</td>
      <td>Everyone quarter right, 1 ticks.</td>
    </tr>
    <tr>
      <td>FaceRight(Centers(), 1)</td>
      <td>Centers quarter right, 1 ticks.</td>
    </tr>
    <tr>
      <td>FaceRight(Everyone(), 1)</td>
      <td>Everyone quarter right, 1 ticks.</td>
    </tr>
    <tr>
      <td>QuarterOut(Beaus())</td>
      <td>Beaus quarter out</td>
    </tr>
    <tr>
      <td>QuarterOut(Guys())</td>
      <td>Guys quarter out</td>
    </tr>
    <tr>
      <td>QuarterOut(Ends())</td>
      <td>Ends quarter out</td>
    </tr>
    <tr>
      <td>QuarterOut(Everyone())</td>
      <td>Everyone quarter out</td>
    </tr>
    <tr>
      <td>Dosado(Everyone(), RightHanded())</td>
      <td>Everyone dosado</td>
    </tr>
    <tr>
      <td>Dosado(Leaders(), RightHanded())</td>
      <td>Leaders dosado</td>
    </tr>
    <tr>
      <td>Dosado(Everyone(), RightHanded())</td>
      <td>Everyone dosado</td>
    </tr>
    <tr>
      <td>PassThru(Everyone())</td>
      <td>Everyone pass thru</td>
    </tr>
    <tr>
      <td>PassThru(OriginalSides())</td>
      <td>OriginalSides pass thru</td>
    </tr>
    <tr>
      <td>PassThru(Leaders())</td>
      <td>Leaders pass thru</td>
    </tr>
    <tr>
      <td>PassThru(Everyone())</td>
      <td>Everyone pass thru</td>
    </tr>
    <tr>
      <td>SlideThru(Everyone())</td>
      <td>Everyone slide thru</td>
    </tr>
    <tr>
      <td>SlideThru(Ends())</td>
      <td>Ends slide thru</td>
    </tr>
    <tr>
      <td>SlideThru(Everyone())</td>
      <td>Everyone slide thru</td>
    </tr>
    <tr>
      <td>StarThru(Everyone())</td>
      <td>Everyone star thru</td>
    </tr>
    <tr>
      <td>StarThru(OriginalSides())</td>
      <td>OriginalSides star thru</td>
    </tr>
    <tr>
      <td>StarThru(Everyone())</td>
      <td>Everyone star thru</td>
    </tr>
    <tr>
      <td>UTurnBack(Everyone())</td>
      <td>Everyone U Turn Back</td>
    </tr>
    <tr>
      <td>UTurnBack(Ends())</td>
      <td>Ends U Turn Back</td>
    </tr>
    <tr>
      <td>UTurnBack(Points())</td>
      <td>Points U Turn Back</td>
    </tr>
    <tr>
      <td>UTurnBack(DiamondCenters())</td>
      <td>Centers of your diamonds U Turn Back</td>
    </tr>
    <tr>
      <td>UTurnBack(Everyone())</td>
      <td>Everyone U Turn Back</td>
    </tr>
    <tr>
      <td>UTurnBack(Everyone())</td>
      <td>Everyone U Turn Back</td>
    </tr>
    <tr>
      <td>UTurnBack(DesignatedDancers(Dancer[Dancer(2, Guy())]))</td>
      <td>Dancers Guy#2 U Turn Back</td>
    </tr>
    <tr>
      <td>SquareThru(Everyone(), RightHanded(), 4)</td>
      <td>Everyonesquare thru 4</td>
    </tr>
    <tr>
      <td>SquareThru(OriginalHeads(), RightHanded(), 3)</td>
      <td>OriginalHeadssquare thru 3</td>
    </tr>
    <tr>
      <td>SquareThru(OriginalHeads(), LeftHanded(), 2)</td>
      <td>OriginalHeadsleft square thru 2</td>
    </tr>
    <tr>
      <td>SquareThru(Everyone(), RightHanded(), 4)</td>
      <td>Everyonesquare thru 4</td>
    </tr>
    <tr>
      <td>PartnerHinge(Everyone(), 2)</td>
      <td>Everyone partner hinge</td>
    </tr>
    <tr>
      <td>PartnerHinge(Centers(), 2)</td>
      <td>Centers partner hinge</td>
    </tr>
    <tr>
      <td>PartnerHinge(Trailers(), 2)</td>
      <td>Trailers partner hinge</td>
    </tr>
    <tr>
      <td>PartnerHinge(Everyone(), 2)</td>
      <td>Everyone partner hinge</td>
    </tr>
    <tr>
      <td>Trade(Everyone())</td>
      <td>Everyone trade</td>
    </tr>
    <tr>
      <td>Trade(Trailers())</td>
      <td>Trailers trade</td>
    </tr>
    <tr>
      <td>Trade(Everyone())</td>
      <td>Everyone trade</td>
    </tr>
    <tr>
      <td>Trade(Centers())</td>
      <td>Centers trade</td>
    </tr>
    <tr>
      <td>PullBy(Everyone(), RightHanded())</td>
      <td>Everyone pull by</td>
    </tr>
    <tr>
      <td>PullBy(Centers(), RightHanded())</td>
      <td>Centers pull by</td>
    </tr>
    <tr>
      <td>PullBy(Everyone(), RightHanded())</td>
      <td>Everyone pull by</td>
    </tr>
    <tr>
      <td>CourtesyTurn(Everyone(), nothing)</td>
      <td>Everyone courtesy turn</td>
    </tr>
    <tr>
      <td>CourtesyTurn(Everyone(), nothing)</td>
      <td>Everyone courtesy turn</td>
    </tr>
    <tr>
      <td>_GenderedRoll(Everyone(), 2)</td>
      <td>Everyone Guy quarter right, Gal quarter left.</td>
    </tr>
    <tr>
      <td>_GenderedRoll(Ends(), 2)</td>
      <td>Ends Guy quarter right, Gal quarter left.</td>
    </tr>
  </table>
</div>
```

