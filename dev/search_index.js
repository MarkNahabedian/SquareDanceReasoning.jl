var documenterSearchIndex = {"docs":
[{"location":"supported_square_dance_calls.html#Supported-Square-Dance-Calls","page":"Supported Square Dance Calls","title":"Supported Square Dance Calls","text":"","category":"section"},{"location":"supported_square_dance_calls.html","page":"Supported Square Dance Calls","title":"Supported Square Dance Calls","text":"These are the calls that are currently implemented. They might not be implemented from all formations or all CallerLab programs.","category":"page"},{"location":"supported_square_dance_calls.html","page":"Supported Square Dance Calls","title":"Supported Square Dance Calls","text":"AndRoll: role\nDancerState\nBalance: role, time\nDancerState\nDosado: role, handedness\nFaceToFace\nMiniWave\nFaceLeft: role, time\nDancerState\nFaceRight: role, time\nDancerState\nHinge: role, time\nCouple\nMiniWave\nPassThru: role\nFaceToFace\nRHMiniWave\nPullBy: role, handedness\nFaceToFace\nMiniWave\nQuarterIn: role\nCouple\nMiniWave\nQuarterOut: role\nCouple\nMiniWave\nSquareThru: role, handedness, count\nFacingCouples\nWaveOfFour\nStepThru: role\nMiniWave\nStepToAWave: role, handedness\nFaceToFace\nUTurnBack: role\nCouple\nDancerState\nMiniWave\n_BackToAWave: role, handedness\nBackToBack\n_GenderedRoll: role, time\nDancerState\n_Rest: role, time\nDancerState\n_UnStepToAWave: role\nMiniWave","category":"page"},{"location":"formations.html#Formations","page":"Overview","title":"Formations","text":"","category":"section"},{"location":"formations.html","page":"Overview","title":"Overview","text":"Much of the reasoning in this package is to identify formations given the locations and facing directions of dancers.","category":"page"},{"location":"formations.html","page":"Overview","title":"Overview","text":"A formation might consist of 1, 2, 4, 6, or 8 dancers.","category":"page"},{"location":"formations.html","page":"Overview","title":"Overview","text":"For each kind of formation an immutable struct is defined which can be asserted in and by the knowledge base.","category":"page"},{"location":"formations.html","page":"Overview","title":"Overview","text":"Each formation haas a way to iterate over its dancers.  A formation might also divide its dancers into roles, for example, beaus and belles or centers and ends.","category":"page"},{"location":"formations.html","page":"Overview","title":"Overview","text":"A formation might have a direction if all of its dancers are facing the same way.","category":"page"},{"location":"formations.html","page":"Overview","title":"Overview","text":"Some formations might also have a Handedness.","category":"page"},{"location":"formations.html#Recognizing-Formations","page":"Overview","title":"Recognizing Formations","text":"","category":"section"},{"location":"formations.html","page":"Overview","title":"Overview","text":"The Rete package is used to implement a rules based system for recognizing formations.  As all of the rules relating to recognizing formations are grouped together as SquareDanceFormationRules.","category":"page"},{"location":"formations.html","page":"Overview","title":"Overview","text":"Most formations have a single dedicated rule for recognizing them, but there is a single rule for recognizing two dancer formations.","category":"page"},{"location":"formations.html","page":"Overview","title":"Overview","text":"For Couple and Tandem the two dancers can be clearly distinguished by beau/belle or leader/trailer.","category":"page"},{"location":"formations.html","page":"Overview","title":"Overview","text":"For MiniWave , FaceToFace or BackToBack though, the dancers are symmetric.  We don't want the rule to assert two different instances of the same formation type for the same pair of dancers, so we break symmetry by putting the dancer with the lowest value for facing direction first in the formation.","category":"page"},{"location":"formations.html","page":"Overview","title":"Overview","text":"The rules for all larger formations take some combination of TwoDancerFormations as their inputs.  This reduces both coding and combinatorial explosion of rule inputs.","category":"page"},{"location":"formation_drawings/BeforeEightChain.html","page":"-","title":"-","text":"<html>\n  <head>\n    <meta charset=\"utf-8\"/>\n    <title>BeforeEightChain</title>\n    <script type=\"text/javascript\" src=\"../dancer_selection.js\"></script>\n    <style>\n      \n\n      svg {\n    background-color: \"gray\";\n}\ntable {\n    empty-cells: show;\n}\n.DancerState-table th {\n    text-align: center;\n    margin-left: 8em;\n    margin-right: 8em;\n}\n.DancerState-table td {\n    text-align: center;\n    margin-left: 8em;\n    margin-right: 8em;\n}\n.DirectionDot {\n    stroke: black;\n    fill: black;\n}\n\n      \n.couple1swatch {\n    color: rgb(255 0 0);\n}\n.couple1 {\n    stroke: black;\n    fill: rgb(255 0 0)\n}\n\n.couple2swatch {\n    color: rgb(255 255 0);\n}\n.couple2 {\n    stroke: black;\n    fill: rgb(255 255 0)\n}\n\n.couple3swatch {\n    color: rgb(0 255 255);\n}\n.couple3 {\n    stroke: black;\n    fill: rgb(0 255 255)\n}\n\n.couple4swatch {\n    color: rgb(255 0 255);\n}\n.couple4 {\n    stroke: black;\n    fill: rgb(255 0 255)\n}\n      \n\n    </style>\n  </head>\n  <body>\n    <h1>BeforeEightChain</h1>\n    <div>\n      <h2>Dancer Location and Facing Direction</h2>\n      <div class=\"DancerState-table\">\n        <table>\n          <thead>\n            <tr>\n              <th>id</th>\n              <th>dancer</th>\n              <th>time</th>\n              <th>direction</th>\n              <th>down</th>\n              <th>left</th>\n              <th>symbol</th>\n            </tr>\n            <tbody>\n              <tr>\n                <td onclick=\"select_dancers([&quot;1m&quot;])\">1m</td>\n                <td onclick=\"formation_onclick\">Dancer(1, Guy())</td>\n                <td>0</td>\n                <td>1//4</td>\n                <td>1.0</td>\n                <td>1.0</td>\n                <td>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"10.000 10.000 20.000 20.000\" width=\"20.0\" height=\"20.0\">\n                    <g>\n                      <use href=\"../dancer_symbols.svg#Guy\" transform=\"rotate(  0 20.00 20.00)\" x=\"20.0\" y=\"20.0\" width=\"20\" height=\"20\" class=\"dancer couple1\"/>\n                    </g>\n                  </svg>\n                </td>\n              </tr>\n              <tr>\n                <td onclick=\"select_dancers([&quot;1f&quot;])\">1f</td>\n                <td onclick=\"formation_onclick\">Dancer(1, Gal())</td>\n                <td>0</td>\n                <td>1//4</td>\n                <td>2.0</td>\n                <td>1.0</td>\n                <td>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"10.000 30.000 20.000 20.000\" width=\"20.0\" height=\"20.0\">\n                    <g>\n                      <use href=\"../dancer_symbols.svg#Gal\" transform=\"rotate(  0 20.00 40.00)\" x=\"20.0\" y=\"40.0\" width=\"20\" height=\"20\" class=\"dancer couple1\"/>\n                    </g>\n                  </svg>\n                </td>\n              </tr>\n              <tr>\n                <td onclick=\"select_dancers([&quot;2m&quot;])\">2m</td>\n                <td onclick=\"formation_onclick\">Dancer(2, Guy())</td>\n                <td>0</td>\n                <td>3//4</td>\n                <td>2.0</td>\n                <td>2.0</td>\n                <td>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"30.000 30.000 20.000 20.000\" width=\"20.0\" height=\"20.0\">\n                    <g>\n                      <use href=\"../dancer_symbols.svg#Guy\" transform=\"rotate(-180 40.00 40.00)\" x=\"40.0\" y=\"40.0\" width=\"20\" height=\"20\" class=\"dancer couple2\"/>\n                    </g>\n                  </svg>\n                </td>\n              </tr>\n              <tr>\n                <td onclick=\"select_dancers([&quot;2f&quot;])\">2f</td>\n                <td onclick=\"formation_onclick\">Dancer(2, Gal())</td>\n                <td>0</td>\n                <td>3//4</td>\n                <td>1.0</td>\n                <td>2.0</td>\n                <td>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"30.000 10.000 20.000 20.000\" width=\"20.0\" height=\"20.0\">\n                    <g>\n                      <use href=\"../dancer_symbols.svg#Gal\" transform=\"rotate(-180 40.00 20.00)\" x=\"40.0\" y=\"20.0\" width=\"20\" height=\"20\" class=\"dancer couple2\"/>\n                    </g>\n                  </svg>\n                </td>\n              </tr>\n              <tr>\n                <td onclick=\"select_dancers([&quot;3m&quot;])\">3m</td>\n                <td onclick=\"formation_onclick\">Dancer(3, Guy())</td>\n                <td>0</td>\n                <td>1//4</td>\n                <td>1.0</td>\n                <td>3.0</td>\n                <td>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"50.000 10.000 20.000 20.000\" width=\"20.0\" height=\"20.0\">\n                    <g>\n                      <use href=\"../dancer_symbols.svg#Guy\" transform=\"rotate(  0 60.00 20.00)\" x=\"60.0\" y=\"20.0\" width=\"20\" height=\"20\" class=\"dancer couple3\"/>\n                    </g>\n                  </svg>\n                </td>\n              </tr>\n              <tr>\n                <td onclick=\"select_dancers([&quot;3f&quot;])\">3f</td>\n                <td onclick=\"formation_onclick\">Dancer(3, Gal())</td>\n                <td>0</td>\n                <td>1//4</td>\n                <td>2.0</td>\n                <td>3.0</td>\n                <td>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"50.000 30.000 20.000 20.000\" width=\"20.0\" height=\"20.0\">\n                    <g>\n                      <use href=\"../dancer_symbols.svg#Gal\" transform=\"rotate(  0 60.00 40.00)\" x=\"60.0\" y=\"40.0\" width=\"20\" height=\"20\" class=\"dancer couple3\"/>\n                    </g>\n                  </svg>\n                </td>\n              </tr>\n              <tr>\n                <td onclick=\"select_dancers([&quot;4m&quot;])\">4m</td>\n                <td onclick=\"formation_onclick\">Dancer(4, Guy())</td>\n                <td>0</td>\n                <td>3//4</td>\n                <td>2.0</td>\n                <td>4.0</td>\n                <td>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"70.000 30.000 20.000 20.000\" width=\"20.0\" height=\"20.0\">\n                    <g>\n                      <use href=\"../dancer_symbols.svg#Guy\" transform=\"rotate(-180 80.00 40.00)\" x=\"80.0\" y=\"40.0\" width=\"20\" height=\"20\" class=\"dancer couple4\"/>\n                    </g>\n                  </svg>\n                </td>\n              </tr>\n              <tr>\n                <td onclick=\"select_dancers([&quot;4f&quot;])\">4f</td>\n                <td onclick=\"formation_onclick\">Dancer(4, Gal())</td>\n                <td>0</td>\n                <td>3//4</td>\n                <td>1.0</td>\n                <td>4.0</td>\n                <td>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"70.000 10.000 20.000 20.000\" width=\"20.0\" height=\"20.0\">\n                    <g>\n                      <use href=\"../dancer_symbols.svg#Gal\" transform=\"rotate(-180 80.00 20.00)\" x=\"80.0\" y=\"20.0\" width=\"20\" height=\"20\" class=\"dancer couple4\"/>\n                    </g>\n                  </svg>\n                </td>\n              </tr>\n            </tbody>\n          </thead>\n        </table>\n      </div>\n    </div>\n    <div>\n      <svg id=\"floor\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"10.000 10.000 80.000 40.000\" width=\"80.0\" height=\"40.0\">\n        <g>\n          <use id=\"1m\" href=\"../dancer_symbols.svg#Guy\" transform=\"rotate(  0 20.00 20.00)\" x=\"20.0\" y=\"20.0\" width=\"20\" height=\"20\" class=\"dancer couple1\"/>\n          <use id=\"1f\" href=\"../dancer_symbols.svg#Gal\" transform=\"rotate(  0 20.00 40.00)\" x=\"20.0\" y=\"40.0\" width=\"20\" height=\"20\" class=\"dancer couple1\"/>\n          <use id=\"2m\" href=\"../dancer_symbols.svg#Guy\" transform=\"rotate(-180 40.00 40.00)\" x=\"40.0\" y=\"40.0\" width=\"20\" height=\"20\" class=\"dancer couple2\"/>\n          <use id=\"2f\" href=\"../dancer_symbols.svg#Gal\" transform=\"rotate(-180 40.00 20.00)\" x=\"40.0\" y=\"20.0\" width=\"20\" height=\"20\" class=\"dancer couple2\"/>\n          <use id=\"3m\" href=\"../dancer_symbols.svg#Guy\" transform=\"rotate(  0 60.00 20.00)\" x=\"60.0\" y=\"20.0\" width=\"20\" height=\"20\" class=\"dancer couple3\"/>\n          <use id=\"3f\" href=\"../dancer_symbols.svg#Gal\" transform=\"rotate(  0 60.00 40.00)\" x=\"60.0\" y=\"40.0\" width=\"20\" height=\"20\" class=\"dancer couple3\"/>\n          <use id=\"4m\" href=\"../dancer_symbols.svg#Guy\" transform=\"rotate(-180 80.00 40.00)\" x=\"80.0\" y=\"40.0\" width=\"20\" height=\"20\" class=\"dancer couple4\"/>\n          <use id=\"4f\" href=\"../dancer_symbols.svg#Gal\" transform=\"rotate(-180 80.00 20.00)\" x=\"80.0\" y=\"20.0\" width=\"20\" height=\"20\" class=\"dancer couple4\"/>\n        </g>\n      </svg>\n    </div>\n    <div>\n      <h2>Inferred Formations</h2>\n      <ul>\n        <li>\n          BackToBack\n          <ul>\n            <li onclick=\"select_dancers([&quot;3f&quot;, &quot;2m&quot;])\">BackToBack-3f-2m</li>\n            <li onclick=\"select_dancers([&quot;3m&quot;, &quot;2f&quot;])\">BackToBack-3m-2f</li>\n          </ul>\n        </li>\n        <li>\n          BackToBackCouples\n          <ul>\n            <li onclick=\"select_dancers([&quot;3m&quot;, &quot;3f&quot;, &quot;2m&quot;, &quot;2f&quot;])\">BackToBackCouples-3m-3f-2m-2f</li>\n          </ul>\n        </li>\n        <li>\n          BeforeEightChain\n          <ul>\n            <li onclick=\"select_dancers([&quot;1m&quot;, &quot;1f&quot;, &quot;2m&quot;, &quot;2f&quot;, &quot;3m&quot;, &quot;3f&quot;, &quot;4m&quot;, &quot;4f&quot;])\">BeforeEightChain-1m-1f-2m-2f-3m-3f-4m-4f</li>\n          </ul>\n        </li>\n        <li>\n          Couple\n          <ul>\n            <li onclick=\"select_dancers([&quot;1m&quot;, &quot;1f&quot;])\">Couple-1m-1f</li>\n            <li onclick=\"select_dancers([&quot;2m&quot;, &quot;2f&quot;])\">Couple-2m-2f</li>\n            <li onclick=\"select_dancers([&quot;3m&quot;, &quot;3f&quot;])\">Couple-3m-3f</li>\n            <li onclick=\"select_dancers([&quot;4m&quot;, &quot;4f&quot;])\">Couple-4m-4f</li>\n          </ul>\n        </li>\n        <li>\n          DancerState\n          <ul>\n            <li onclick=\"select_dancers([&quot;1f&quot;])\">1f</li>\n            <li onclick=\"select_dancers([&quot;1m&quot;])\">1m</li>\n            <li onclick=\"select_dancers([&quot;2f&quot;])\">2f</li>\n            <li onclick=\"select_dancers([&quot;2m&quot;])\">2m</li>\n            <li onclick=\"select_dancers([&quot;3f&quot;])\">3f</li>\n            <li onclick=\"select_dancers([&quot;3m&quot;])\">3m</li>\n            <li onclick=\"select_dancers([&quot;4f&quot;])\">4f</li>\n            <li onclick=\"select_dancers([&quot;4m&quot;])\">4m</li>\n          </ul>\n        </li>\n        <li>\n          FaceToFace\n          <ul>\n            <li onclick=\"select_dancers([&quot;1f&quot;, &quot;2m&quot;])\">FaceToFace-1f-2m</li>\n            <li onclick=\"select_dancers([&quot;1m&quot;, &quot;2f&quot;])\">FaceToFace-1m-2f</li>\n            <li onclick=\"select_dancers([&quot;3f&quot;, &quot;4m&quot;])\">FaceToFace-3f-4m</li>\n            <li onclick=\"select_dancers([&quot;3m&quot;, &quot;4f&quot;])\">FaceToFace-3m-4f</li>\n          </ul>\n        </li>\n        <li>\n          FacingCouples\n          <ul>\n            <li onclick=\"select_dancers([&quot;1m&quot;, &quot;1f&quot;, &quot;2m&quot;, &quot;2f&quot;])\">FacingCouples-1m-1f-2m-2f</li>\n            <li onclick=\"select_dancers([&quot;3m&quot;, &quot;3f&quot;, &quot;4m&quot;, &quot;4f&quot;])\">FacingCouples-3m-3f-4m-4f</li>\n          </ul>\n        </li>\n      </ul>\n    </div>\n  </body>\n</html>","category":"page"},{"location":"formation_drawings/TandemCouples.html","page":"-","title":"-","text":"<html>\n  <head>\n    <meta charset=\"utf-8\"/>\n    <title>TandemCouples</title>\n    <script type=\"text/javascript\" src=\"../dancer_selection.js\"></script>\n    <style>\n      \n\n      svg {\n    background-color: \"gray\";\n}\ntable {\n    empty-cells: show;\n}\n.DancerState-table th {\n    text-align: center;\n    margin-left: 8em;\n    margin-right: 8em;\n}\n.DancerState-table td {\n    text-align: center;\n    margin-left: 8em;\n    margin-right: 8em;\n}\n.DirectionDot {\n    stroke: black;\n    fill: black;\n}\n\n      \n.couple1swatch {\n    color: rgb(255 0 0);\n}\n.couple1 {\n    stroke: black;\n    fill: rgb(255 0 0)\n}\n\n.couple2swatch {\n    color: rgb(0 255 255);\n}\n.couple2 {\n    stroke: black;\n    fill: rgb(0 255 255)\n}\n      \n\n    </style>\n  </head>\n  <body>\n    <h1>TandemCouples</h1>\n    <div>\n      <h2>Dancer Location and Facing Direction</h2>\n      <div class=\"DancerState-table\">\n        <table>\n          <thead>\n            <tr>\n              <th>id</th>\n              <th>dancer</th>\n              <th>time</th>\n              <th>direction</th>\n              <th>down</th>\n              <th>left</th>\n              <th>symbol</th>\n            </tr>\n            <tbody>\n              <tr>\n                <td onclick=\"select_dancers([&quot;1m&quot;])\">1m</td>\n                <td onclick=\"formation_onclick\">Dancer(1, Guy())</td>\n                <td>0</td>\n                <td>1//4</td>\n                <td>1.0</td>\n                <td>2.0</td>\n                <td>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"30.000 10.000 20.000 20.000\" width=\"20.0\" height=\"20.0\">\n                    <g>\n                      <use href=\"../dancer_symbols.svg#Guy\" transform=\"rotate(  0 40.00 20.00)\" x=\"40.0\" y=\"20.0\" width=\"20\" height=\"20\" class=\"dancer couple1\"/>\n                    </g>\n                  </svg>\n                </td>\n              </tr>\n              <tr>\n                <td onclick=\"select_dancers([&quot;1f&quot;])\">1f</td>\n                <td onclick=\"formation_onclick\">Dancer(1, Gal())</td>\n                <td>0</td>\n                <td>1//4</td>\n                <td>2.0</td>\n                <td>2.0</td>\n                <td>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"30.000 30.000 20.000 20.000\" width=\"20.0\" height=\"20.0\">\n                    <g>\n                      <use href=\"../dancer_symbols.svg#Gal\" transform=\"rotate(  0 40.00 40.00)\" x=\"40.0\" y=\"40.0\" width=\"20\" height=\"20\" class=\"dancer couple1\"/>\n                    </g>\n                  </svg>\n                </td>\n              </tr>\n              <tr>\n                <td onclick=\"select_dancers([&quot;2m&quot;])\">2m</td>\n                <td onclick=\"formation_onclick\">Dancer(2, Guy())</td>\n                <td>0</td>\n                <td>1//4</td>\n                <td>1.0</td>\n                <td>1.0</td>\n                <td>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"10.000 10.000 20.000 20.000\" width=\"20.0\" height=\"20.0\">\n                    <g>\n                      <use href=\"../dancer_symbols.svg#Guy\" transform=\"rotate(  0 20.00 20.00)\" x=\"20.0\" y=\"20.0\" width=\"20\" height=\"20\" class=\"dancer couple2\"/>\n                    </g>\n                  </svg>\n                </td>\n              </tr>\n              <tr>\n                <td onclick=\"select_dancers([&quot;2f&quot;])\">2f</td>\n                <td onclick=\"formation_onclick\">Dancer(2, Gal())</td>\n                <td>0</td>\n                <td>1//4</td>\n                <td>2.0</td>\n                <td>1.0</td>\n                <td>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"10.000 30.000 20.000 20.000\" width=\"20.0\" height=\"20.0\">\n                    <g>\n                      <use href=\"../dancer_symbols.svg#Gal\" transform=\"rotate(  0 20.00 40.00)\" x=\"20.0\" y=\"40.0\" width=\"20\" height=\"20\" class=\"dancer couple2\"/>\n                    </g>\n                  </svg>\n                </td>\n              </tr>\n            </tbody>\n          </thead>\n        </table>\n      </div>\n    </div>\n    <div>\n      <svg id=\"floor\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"10.000 10.000 40.000 40.000\" width=\"40.0\" height=\"40.0\">\n        <g>\n          <use id=\"1m\" href=\"../dancer_symbols.svg#Guy\" transform=\"rotate(  0 40.00 20.00)\" x=\"40.0\" y=\"20.0\" width=\"20\" height=\"20\" class=\"dancer couple1\"/>\n          <use id=\"1f\" href=\"../dancer_symbols.svg#Gal\" transform=\"rotate(  0 40.00 40.00)\" x=\"40.0\" y=\"40.0\" width=\"20\" height=\"20\" class=\"dancer couple1\"/>\n          <use id=\"2m\" href=\"../dancer_symbols.svg#Guy\" transform=\"rotate(  0 20.00 20.00)\" x=\"20.0\" y=\"20.0\" width=\"20\" height=\"20\" class=\"dancer couple2\"/>\n          <use id=\"2f\" href=\"../dancer_symbols.svg#Gal\" transform=\"rotate(  0 20.00 40.00)\" x=\"20.0\" y=\"40.0\" width=\"20\" height=\"20\" class=\"dancer couple2\"/>\n        </g>\n      </svg>\n    </div>\n    <div>\n      <h2>Inferred Formations</h2>\n      <ul>\n        <li>\n          Couple\n          <ul>\n            <li onclick=\"select_dancers([&quot;1m&quot;, &quot;1f&quot;])\">Couple-1m-1f</li>\n            <li onclick=\"select_dancers([&quot;2m&quot;, &quot;2f&quot;])\">Couple-2m-2f</li>\n          </ul>\n        </li>\n        <li>\n          DancerState\n          <ul>\n            <li onclick=\"select_dancers([&quot;1f&quot;])\">1f</li>\n            <li onclick=\"select_dancers([&quot;1m&quot;])\">1m</li>\n            <li onclick=\"select_dancers([&quot;2f&quot;])\">2f</li>\n            <li onclick=\"select_dancers([&quot;2m&quot;])\">2m</li>\n          </ul>\n        </li>\n        <li>\n          Tandem\n          <ul>\n            <li onclick=\"select_dancers([&quot;1f&quot;, &quot;2f&quot;])\">Tandem-1f-2f</li>\n            <li onclick=\"select_dancers([&quot;1m&quot;, &quot;2m&quot;])\">Tandem-1m-2m</li>\n          </ul>\n        </li>\n        <li>\n          TandemCouples\n          <ul>\n            <li onclick=\"select_dancers([&quot;1m&quot;, &quot;1f&quot;, &quot;2m&quot;, &quot;2f&quot;])\">TandemCouples-1m-1f-2m-2f</li>\n          </ul>\n        </li>\n      </ul>\n    </div>\n  </body>\n</html>","category":"page"},{"location":"doc_index.html#Index","page":"Index","title":"Index","text":"","category":"section"},{"location":"doc_index.html","page":"Index","title":"Index","text":"","category":"page"},{"location":"formation_drawings/LHBoxOfFour.html","page":"-","title":"-","text":"<html>\n  <head>\n    <meta charset=\"utf-8\"/>\n    <title>LHBoxOfFour</title>\n    <script type=\"text/javascript\" src=\"../dancer_selection.js\"></script>\n    <style>\n      \n\n      svg {\n    background-color: \"gray\";\n}\ntable {\n    empty-cells: show;\n}\n.DancerState-table th {\n    text-align: center;\n    margin-left: 8em;\n    margin-right: 8em;\n}\n.DancerState-table td {\n    text-align: center;\n    margin-left: 8em;\n    margin-right: 8em;\n}\n.DirectionDot {\n    stroke: black;\n    fill: black;\n}\n\n      \n.couple1swatch {\n    color: rgb(255 0 0);\n}\n.couple1 {\n    stroke: black;\n    fill: rgb(255 0 0)\n}\n\n.couple2swatch {\n    color: rgb(0 255 255);\n}\n.couple2 {\n    stroke: black;\n    fill: rgb(0 255 255)\n}\n      \n\n    </style>\n  </head>\n  <body>\n    <h1>LHBoxOfFour</h1>\n    <div>\n      <h2>Dancer Location and Facing Direction</h2>\n      <div class=\"DancerState-table\">\n        <table>\n          <thead>\n            <tr>\n              <th>id</th>\n              <th>dancer</th>\n              <th>time</th>\n              <th>direction</th>\n              <th>down</th>\n              <th>left</th>\n              <th>symbol</th>\n            </tr>\n            <tbody>\n              <tr>\n                <td onclick=\"select_dancers([&quot;1m&quot;])\">1m</td>\n                <td onclick=\"formation_onclick\">Dancer(1, Guy())</td>\n                <td>0</td>\n                <td>0//1</td>\n                <td>1.0</td>\n                <td>1.0</td>\n                <td>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"10.000 10.000 20.000 20.000\" width=\"20.0\" height=\"20.0\">\n                    <g>\n                      <use href=\"../dancer_symbols.svg#Guy\" transform=\"rotate( 90 20.00 20.00)\" x=\"20.0\" y=\"20.0\" width=\"20\" height=\"20\" class=\"dancer couple1\"/>\n                    </g>\n                  </svg>\n                </td>\n              </tr>\n              <tr>\n                <td onclick=\"select_dancers([&quot;1f&quot;])\">1f</td>\n                <td onclick=\"formation_onclick\">Dancer(1, Gal())</td>\n                <td>0</td>\n                <td>0//1</td>\n                <td>2.0</td>\n                <td>1.0</td>\n                <td>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"10.000 30.000 20.000 20.000\" width=\"20.0\" height=\"20.0\">\n                    <g>\n                      <use href=\"../dancer_symbols.svg#Gal\" transform=\"rotate( 90 20.00 40.00)\" x=\"20.0\" y=\"40.0\" width=\"20\" height=\"20\" class=\"dancer couple1\"/>\n                    </g>\n                  </svg>\n                </td>\n              </tr>\n              <tr>\n                <td onclick=\"select_dancers([&quot;2m&quot;])\">2m</td>\n                <td onclick=\"formation_onclick\">Dancer(2, Guy())</td>\n                <td>0</td>\n                <td>1//2</td>\n                <td>2.0</td>\n                <td>2.0</td>\n                <td>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"30.000 30.000 20.000 20.000\" width=\"20.0\" height=\"20.0\">\n                    <g>\n                      <use href=\"../dancer_symbols.svg#Guy\" transform=\"rotate(-90 40.00 40.00)\" x=\"40.0\" y=\"40.0\" width=\"20\" height=\"20\" class=\"dancer couple2\"/>\n                    </g>\n                  </svg>\n                </td>\n              </tr>\n              <tr>\n                <td onclick=\"select_dancers([&quot;2f&quot;])\">2f</td>\n                <td onclick=\"formation_onclick\">Dancer(2, Gal())</td>\n                <td>0</td>\n                <td>1//2</td>\n                <td>1.0</td>\n                <td>2.0</td>\n                <td>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"30.000 10.000 20.000 20.000\" width=\"20.0\" height=\"20.0\">\n                    <g>\n                      <use href=\"../dancer_symbols.svg#Gal\" transform=\"rotate(-90 40.00 20.00)\" x=\"40.0\" y=\"20.0\" width=\"20\" height=\"20\" class=\"dancer couple2\"/>\n                    </g>\n                  </svg>\n                </td>\n              </tr>\n            </tbody>\n          </thead>\n        </table>\n      </div>\n    </div>\n    <div>\n      <svg id=\"floor\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"10.000 10.000 40.000 40.000\" width=\"40.0\" height=\"40.0\">\n        <g>\n          <use id=\"1f\" href=\"../dancer_symbols.svg#Gal\" transform=\"rotate( 90 20.00 40.00)\" x=\"20.0\" y=\"40.0\" width=\"20\" height=\"20\" class=\"dancer couple1\"/>\n          <use id=\"2m\" href=\"../dancer_symbols.svg#Guy\" transform=\"rotate(-90 40.00 40.00)\" x=\"40.0\" y=\"40.0\" width=\"20\" height=\"20\" class=\"dancer couple2\"/>\n          <use id=\"1m\" href=\"../dancer_symbols.svg#Guy\" transform=\"rotate( 90 20.00 20.00)\" x=\"20.0\" y=\"20.0\" width=\"20\" height=\"20\" class=\"dancer couple1\"/>\n          <use id=\"2f\" href=\"../dancer_symbols.svg#Gal\" transform=\"rotate(-90 40.00 20.00)\" x=\"40.0\" y=\"20.0\" width=\"20\" height=\"20\" class=\"dancer couple2\"/>\n        </g>\n      </svg>\n    </div>\n    <div>\n      <h2>Inferred Formations</h2>\n      <ul>\n        <li>\n          DancerState\n          <ul>\n            <li onclick=\"select_dancers([&quot;1f&quot;])\">1f</li>\n            <li onclick=\"select_dancers([&quot;1m&quot;])\">1m</li>\n            <li onclick=\"select_dancers([&quot;2f&quot;])\">2f</li>\n            <li onclick=\"select_dancers([&quot;2m&quot;])\">2m</li>\n          </ul>\n        </li>\n        <li>\n          LHBoxOfFour\n          <ul>\n            <li onclick=\"select_dancers([&quot;1f&quot;, &quot;2m&quot;, &quot;1m&quot;, &quot;2f&quot;])\">LHBoxOfFour-1f-2m-1m-2f</li>\n          </ul>\n        </li>\n        <li>\n          LHMiniWave\n          <ul>\n            <li onclick=\"select_dancers([&quot;1f&quot;, &quot;2m&quot;])\">LHMiniWave-1f-2m</li>\n            <li onclick=\"select_dancers([&quot;1m&quot;, &quot;2f&quot;])\">LHMiniWave-1m-2f</li>\n          </ul>\n        </li>\n        <li>\n          Tandem\n          <ul>\n            <li onclick=\"select_dancers([&quot;1f&quot;, &quot;1m&quot;])\">Tandem-1f-1m</li>\n            <li onclick=\"select_dancers([&quot;2f&quot;, &quot;2m&quot;])\">Tandem-2f-2m</li>\n          </ul>\n        </li>\n      </ul>\n    </div>\n  </body>\n</html>","category":"page"},{"location":"formation_drawings/TwoFacedLine.html","page":"-","title":"-","text":"<html>\n  <head>\n    <meta charset=\"utf-8\"/>\n    <title>TwoFacedLine</title>\n    <script type=\"text/javascript\" src=\"../dancer_selection.js\"></script>\n    <style>\n      \n\n      svg {\n    background-color: \"gray\";\n}\ntable {\n    empty-cells: show;\n}\n.DancerState-table th {\n    text-align: center;\n    margin-left: 8em;\n    margin-right: 8em;\n}\n.DancerState-table td {\n    text-align: center;\n    margin-left: 8em;\n    margin-right: 8em;\n}\n.DirectionDot {\n    stroke: black;\n    fill: black;\n}\n\n      \n.couple1swatch {\n    color: rgb(255 0 0);\n}\n.couple1 {\n    stroke: black;\n    fill: rgb(255 0 0)\n}\n\n.couple2swatch {\n    color: rgb(0 255 255);\n}\n.couple2 {\n    stroke: black;\n    fill: rgb(0 255 255)\n}\n      \n\n    </style>\n  </head>\n  <body>\n    <h1>TwoFacedLine</h1>\n    <div>\n      <h2>Dancer Location and Facing Direction</h2>\n      <div class=\"DancerState-table\">\n        <table>\n          <thead>\n            <tr>\n              <th>id</th>\n              <th>dancer</th>\n              <th>time</th>\n              <th>direction</th>\n              <th>down</th>\n              <th>left</th>\n              <th>symbol</th>\n            </tr>\n            <tbody>\n              <tr>\n                <td onclick=\"select_dancers([&quot;1m&quot;])\">1m</td>\n                <td onclick=\"formation_onclick\">Dancer(1, Guy())</td>\n                <td>0</td>\n                <td>1//2</td>\n                <td>0.0</td>\n                <td>1.0</td>\n                <td>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"10.000 -10.000 20.000 20.000\" width=\"20.0\" height=\"20.0\">\n                    <g>\n                      <use href=\"../dancer_symbols.svg#Guy\" transform=\"rotate(-90 20.00 0.00)\" x=\"20.0\" y=\"0.0\" width=\"20\" height=\"20\" class=\"dancer couple1\"/>\n                    </g>\n                  </svg>\n                </td>\n              </tr>\n              <tr>\n                <td onclick=\"select_dancers([&quot;1f&quot;])\">1f</td>\n                <td onclick=\"formation_onclick\">Dancer(1, Gal())</td>\n                <td>0</td>\n                <td>1//2</td>\n                <td>0.0</td>\n                <td>2.0</td>\n                <td>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"30.000 -10.000 20.000 20.000\" width=\"20.0\" height=\"20.0\">\n                    <g>\n                      <use href=\"../dancer_symbols.svg#Gal\" transform=\"rotate(-90 40.00 0.00)\" x=\"40.0\" y=\"0.0\" width=\"20\" height=\"20\" class=\"dancer couple1\"/>\n                    </g>\n                  </svg>\n                </td>\n              </tr>\n              <tr>\n                <td onclick=\"select_dancers([&quot;2m&quot;])\">2m</td>\n                <td onclick=\"formation_onclick\">Dancer(2, Guy())</td>\n                <td>0</td>\n                <td>0//1</td>\n                <td>0.0</td>\n                <td>3.0</td>\n                <td>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"50.000 -10.000 20.000 20.000\" width=\"20.0\" height=\"20.0\">\n                    <g>\n                      <use href=\"../dancer_symbols.svg#Guy\" transform=\"rotate( 90 60.00 0.00)\" x=\"60.0\" y=\"0.0\" width=\"20\" height=\"20\" class=\"dancer couple2\"/>\n                    </g>\n                  </svg>\n                </td>\n              </tr>\n              <tr>\n                <td onclick=\"select_dancers([&quot;2f&quot;])\">2f</td>\n                <td onclick=\"formation_onclick\">Dancer(2, Gal())</td>\n                <td>0</td>\n                <td>0//1</td>\n                <td>0.0</td>\n                <td>4.0</td>\n                <td>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"70.000 -10.000 20.000 20.000\" width=\"20.0\" height=\"20.0\">\n                    <g>\n                      <use href=\"../dancer_symbols.svg#Gal\" transform=\"rotate( 90 80.00 0.00)\" x=\"80.0\" y=\"0.0\" width=\"20\" height=\"20\" class=\"dancer couple2\"/>\n                    </g>\n                  </svg>\n                </td>\n              </tr>\n            </tbody>\n          </thead>\n        </table>\n      </div>\n    </div>\n    <div>\n      <svg id=\"floor\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"10.000 -10.000 80.000 20.000\" width=\"80.0\" height=\"20.0\">\n        <g>\n          <use id=\"2f\" href=\"../dancer_symbols.svg#Gal\" transform=\"rotate( 90 80.00 0.00)\" x=\"80.0\" y=\"0.0\" width=\"20\" height=\"20\" class=\"dancer couple2\"/>\n          <use id=\"2m\" href=\"../dancer_symbols.svg#Guy\" transform=\"rotate( 90 60.00 0.00)\" x=\"60.0\" y=\"0.0\" width=\"20\" height=\"20\" class=\"dancer couple2\"/>\n          <use id=\"1m\" href=\"../dancer_symbols.svg#Guy\" transform=\"rotate(-90 20.00 0.00)\" x=\"20.0\" y=\"0.0\" width=\"20\" height=\"20\" class=\"dancer couple1\"/>\n          <use id=\"1f\" href=\"../dancer_symbols.svg#Gal\" transform=\"rotate(-90 40.00 0.00)\" x=\"40.0\" y=\"0.0\" width=\"20\" height=\"20\" class=\"dancer couple1\"/>\n        </g>\n      </svg>\n    </div>\n    <div>\n      <h2>Inferred Formations</h2>\n      <ul>\n        <li>\n          Couple\n          <ul>\n            <li onclick=\"select_dancers([&quot;1m&quot;, &quot;1f&quot;])\">Couple-1m-1f</li>\n            <li onclick=\"select_dancers([&quot;2f&quot;, &quot;2m&quot;])\">Couple-2f-2m</li>\n          </ul>\n        </li>\n        <li>\n          DancerState\n          <ul>\n            <li onclick=\"select_dancers([&quot;1f&quot;])\">1f</li>\n            <li onclick=\"select_dancers([&quot;1m&quot;])\">1m</li>\n            <li onclick=\"select_dancers([&quot;2f&quot;])\">2f</li>\n            <li onclick=\"select_dancers([&quot;2m&quot;])\">2m</li>\n          </ul>\n        </li>\n        <li>\n          RHMiniWave\n          <ul>\n            <li onclick=\"select_dancers([&quot;2m&quot;, &quot;1f&quot;])\">RHMiniWave-2m-1f</li>\n          </ul>\n        </li>\n        <li>\n          TwoFacedLine\n          <ul>\n            <li onclick=\"select_dancers([&quot;2f&quot;, &quot;2m&quot;, &quot;1m&quot;, &quot;1f&quot;])\">TwoFacedLine-2f-2m-1m-1f</li>\n          </ul>\n        </li>\n      </ul>\n    </div>\n  </body>\n</html>","category":"page"},{"location":"formation_drawings/QuarterTag.html","page":"-","title":"-","text":"<html>\n  <head>\n    <meta charset=\"utf-8\"/>\n    <title>QuarterTag</title>\n    <script type=\"text/javascript\" src=\"../dancer_selection.js\"></script>\n    <style>\n      \n\n      svg {\n    background-color: \"gray\";\n}\ntable {\n    empty-cells: show;\n}\n.DancerState-table th {\n    text-align: center;\n    margin-left: 8em;\n    margin-right: 8em;\n}\n.DancerState-table td {\n    text-align: center;\n    margin-left: 8em;\n    margin-right: 8em;\n}\n.DirectionDot {\n    stroke: black;\n    fill: black;\n}\n\n      \n.couple1swatch {\n    color: rgb(255 0 0);\n}\n.couple1 {\n    stroke: black;\n    fill: rgb(255 0 0)\n}\n\n.couple2swatch {\n    color: rgb(255 255 0);\n}\n.couple2 {\n    stroke: black;\n    fill: rgb(255 255 0)\n}\n\n.couple3swatch {\n    color: rgb(0 255 255);\n}\n.couple3 {\n    stroke: black;\n    fill: rgb(0 255 255)\n}\n\n.couple4swatch {\n    color: rgb(255 0 255);\n}\n.couple4 {\n    stroke: black;\n    fill: rgb(255 0 255)\n}\n      \n\n    </style>\n  </head>\n  <body>\n    <h1>QuarterTag</h1>\n    <div>\n      <h2>Dancer Location and Facing Direction</h2>\n      <div class=\"DancerState-table\">\n        <table>\n          <thead>\n            <tr>\n              <th>id</th>\n              <th>dancer</th>\n              <th>time</th>\n              <th>direction</th>\n              <th>down</th>\n              <th>left</th>\n              <th>symbol</th>\n            </tr>\n            <tbody>\n              <tr>\n                <td onclick=\"select_dancers([&quot;1m&quot;])\">1m</td>\n                <td onclick=\"formation_onclick\">Dancer(1, Guy())</td>\n                <td>0</td>\n                <td>0//1</td>\n                <td>2.0</td>\n                <td>4.0</td>\n                <td>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"70.000 30.000 20.000 20.000\" width=\"20.0\" height=\"20.0\">\n                    <g>\n                      <use href=\"../dancer_symbols.svg#Guy\" transform=\"rotate( 90 80.00 40.00)\" x=\"80.0\" y=\"40.0\" width=\"20\" height=\"20\" class=\"dancer couple1\"/>\n                    </g>\n                  </svg>\n                </td>\n              </tr>\n              <tr>\n                <td onclick=\"select_dancers([&quot;1f&quot;])\">1f</td>\n                <td onclick=\"formation_onclick\">Dancer(1, Gal())</td>\n                <td>0</td>\n                <td>0//1</td>\n                <td>2.0</td>\n                <td>2.0</td>\n                <td>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"30.000 30.000 20.000 20.000\" width=\"20.0\" height=\"20.0\">\n                    <g>\n                      <use href=\"../dancer_symbols.svg#Gal\" transform=\"rotate( 90 40.00 40.00)\" x=\"40.0\" y=\"40.0\" width=\"20\" height=\"20\" class=\"dancer couple1\"/>\n                    </g>\n                  </svg>\n                </td>\n              </tr>\n              <tr>\n                <td onclick=\"select_dancers([&quot;2m&quot;])\">2m</td>\n                <td onclick=\"formation_onclick\">Dancer(2, Guy())</td>\n                <td>0</td>\n                <td>0//1</td>\n                <td>1.0</td>\n                <td>3.0</td>\n                <td>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"50.000 10.000 20.000 20.000\" width=\"20.0\" height=\"20.0\">\n                    <g>\n                      <use href=\"../dancer_symbols.svg#Guy\" transform=\"rotate( 90 60.00 20.00)\" x=\"60.0\" y=\"20.0\" width=\"20\" height=\"20\" class=\"dancer couple2\"/>\n                    </g>\n                  </svg>\n                </td>\n              </tr>\n              <tr>\n                <td onclick=\"select_dancers([&quot;2f&quot;])\">2f</td>\n                <td onclick=\"formation_onclick\">Dancer(2, Gal())</td>\n                <td>0</td>\n                <td>0//1</td>\n                <td>1.0</td>\n                <td>2.0</td>\n                <td>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"30.000 10.000 20.000 20.000\" width=\"20.0\" height=\"20.0\">\n                    <g>\n                      <use href=\"../dancer_symbols.svg#Gal\" transform=\"rotate( 90 40.00 20.00)\" x=\"40.0\" y=\"20.0\" width=\"20\" height=\"20\" class=\"dancer couple2\"/>\n                    </g>\n                  </svg>\n                </td>\n              </tr>\n              <tr>\n                <td onclick=\"select_dancers([&quot;3m&quot;])\">3m</td>\n                <td onclick=\"formation_onclick\">Dancer(3, Guy())</td>\n                <td>0</td>\n                <td>1//2</td>\n                <td>2.0</td>\n                <td>1.0</td>\n                <td>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"10.000 30.000 20.000 20.000\" width=\"20.0\" height=\"20.0\">\n                    <g>\n                      <use href=\"../dancer_symbols.svg#Guy\" transform=\"rotate(-90 20.00 40.00)\" x=\"20.0\" y=\"40.0\" width=\"20\" height=\"20\" class=\"dancer couple3\"/>\n                    </g>\n                  </svg>\n                </td>\n              </tr>\n              <tr>\n                <td onclick=\"select_dancers([&quot;3f&quot;])\">3f</td>\n                <td onclick=\"formation_onclick\">Dancer(3, Gal())</td>\n                <td>0</td>\n                <td>1//2</td>\n                <td>2.0</td>\n                <td>3.0</td>\n                <td>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"50.000 30.000 20.000 20.000\" width=\"20.0\" height=\"20.0\">\n                    <g>\n                      <use href=\"../dancer_symbols.svg#Gal\" transform=\"rotate(-90 60.00 40.00)\" x=\"60.0\" y=\"40.0\" width=\"20\" height=\"20\" class=\"dancer couple3\"/>\n                    </g>\n                  </svg>\n                </td>\n              </tr>\n              <tr>\n                <td onclick=\"select_dancers([&quot;4m&quot;])\">4m</td>\n                <td onclick=\"formation_onclick\">Dancer(4, Guy())</td>\n                <td>0</td>\n                <td>1//2</td>\n                <td>3.0</td>\n                <td>2.0</td>\n                <td>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"30.000 50.000 20.000 20.000\" width=\"20.0\" height=\"20.0\">\n                    <g>\n                      <use href=\"../dancer_symbols.svg#Guy\" transform=\"rotate(-90 40.00 60.00)\" x=\"40.0\" y=\"60.0\" width=\"20\" height=\"20\" class=\"dancer couple4\"/>\n                    </g>\n                  </svg>\n                </td>\n              </tr>\n              <tr>\n                <td onclick=\"select_dancers([&quot;4f&quot;])\">4f</td>\n                <td onclick=\"formation_onclick\">Dancer(4, Gal())</td>\n                <td>0</td>\n                <td>1//2</td>\n                <td>3.0</td>\n                <td>3.0</td>\n                <td>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"50.000 50.000 20.000 20.000\" width=\"20.0\" height=\"20.0\">\n                    <g>\n                      <use href=\"../dancer_symbols.svg#Gal\" transform=\"rotate(-90 60.00 60.00)\" x=\"60.0\" y=\"60.0\" width=\"20\" height=\"20\" class=\"dancer couple4\"/>\n                    </g>\n                  </svg>\n                </td>\n              </tr>\n            </tbody>\n          </thead>\n        </table>\n      </div>\n    </div>\n    <div>\n      <svg id=\"floor\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"10.000 10.000 80.000 60.000\" width=\"80.0\" height=\"60.0\">\n        <g>\n          <use id=\"2m\" href=\"../dancer_symbols.svg#Guy\" transform=\"rotate( 90 60.00 20.00)\" x=\"60.0\" y=\"20.0\" width=\"20\" height=\"20\" class=\"dancer couple2\"/>\n          <use id=\"2f\" href=\"../dancer_symbols.svg#Gal\" transform=\"rotate( 90 40.00 20.00)\" x=\"40.0\" y=\"20.0\" width=\"20\" height=\"20\" class=\"dancer couple2\"/>\n          <use id=\"1f\" href=\"../dancer_symbols.svg#Gal\" transform=\"rotate( 90 40.00 40.00)\" x=\"40.0\" y=\"40.0\" width=\"20\" height=\"20\" class=\"dancer couple1\"/>\n          <use id=\"3m\" href=\"../dancer_symbols.svg#Guy\" transform=\"rotate(-90 20.00 40.00)\" x=\"20.0\" y=\"40.0\" width=\"20\" height=\"20\" class=\"dancer couple3\"/>\n          <use id=\"1m\" href=\"../dancer_symbols.svg#Guy\" transform=\"rotate( 90 80.00 40.00)\" x=\"80.0\" y=\"40.0\" width=\"20\" height=\"20\" class=\"dancer couple1\"/>\n          <use id=\"3f\" href=\"../dancer_symbols.svg#Gal\" transform=\"rotate(-90 60.00 40.00)\" x=\"60.0\" y=\"40.0\" width=\"20\" height=\"20\" class=\"dancer couple3\"/>\n          <use id=\"4m\" href=\"../dancer_symbols.svg#Guy\" transform=\"rotate(-90 40.00 60.00)\" x=\"40.0\" y=\"60.0\" width=\"20\" height=\"20\" class=\"dancer couple4\"/>\n          <use id=\"4f\" href=\"../dancer_symbols.svg#Gal\" transform=\"rotate(-90 60.00 60.00)\" x=\"60.0\" y=\"60.0\" width=\"20\" height=\"20\" class=\"dancer couple4\"/>\n        </g>\n      </svg>\n    </div>\n    <div>\n      <h2>Inferred Formations</h2>\n      <ul>\n        <li>\n          Couple\n          <ul>\n            <li onclick=\"select_dancers([&quot;2m&quot;, &quot;2f&quot;])\">Couple-2m-2f</li>\n            <li onclick=\"select_dancers([&quot;4m&quot;, &quot;4f&quot;])\">Couple-4m-4f</li>\n          </ul>\n        </li>\n        <li>\n          DancerState\n          <ul>\n            <li onclick=\"select_dancers([&quot;1f&quot;])\">1f</li>\n            <li onclick=\"select_dancers([&quot;1m&quot;])\">1m</li>\n            <li onclick=\"select_dancers([&quot;2f&quot;])\">2f</li>\n            <li onclick=\"select_dancers([&quot;2m&quot;])\">2m</li>\n            <li onclick=\"select_dancers([&quot;3f&quot;])\">3f</li>\n            <li onclick=\"select_dancers([&quot;3m&quot;])\">3m</li>\n            <li onclick=\"select_dancers([&quot;4f&quot;])\">4f</li>\n            <li onclick=\"select_dancers([&quot;4m&quot;])\">4m</li>\n          </ul>\n        </li>\n        <li>\n          FaceToFace\n          <ul>\n            <li onclick=\"select_dancers([&quot;1f&quot;, &quot;4m&quot;])\">FaceToFace-1f-4m</li>\n            <li onclick=\"select_dancers([&quot;2m&quot;, &quot;3f&quot;])\">FaceToFace-2m-3f</li>\n          </ul>\n        </li>\n        <li>\n          LHMiniWave\n          <ul>\n            <li onclick=\"select_dancers([&quot;1f&quot;, &quot;3f&quot;])\">LHMiniWave-1f-3f</li>\n          </ul>\n        </li>\n        <li>\n          QuarterTag\n          <ul>\n            <li onclick=\"select_dancers([&quot;2m&quot;, &quot;2f&quot;, &quot;1f&quot;, &quot;3m&quot;, &quot;1m&quot;, &quot;3f&quot;, &quot;4m&quot;, &quot;4f&quot;])\">QuarterTag-2m-2f-1f-3m-1m-3f-4m-4f</li>\n          </ul>\n        </li>\n        <li>\n          RHMiniWave\n          <ul>\n            <li onclick=\"select_dancers([&quot;1f&quot;, &quot;3m&quot;])\">RHMiniWave-1f-3m</li>\n            <li onclick=\"select_dancers([&quot;1m&quot;, &quot;3f&quot;])\">RHMiniWave-1m-3f</li>\n          </ul>\n        </li>\n        <li>\n          RHWaveOfFour\n          <ul>\n            <li onclick=\"select_dancers([&quot;1f&quot;, &quot;3m&quot;, &quot;1m&quot;, &quot;3f&quot;])\">RHWaveOfFour-1f-3m-1m-3f</li>\n          </ul>\n        </li>\n        <li>\n          Tandem\n          <ul>\n            <li onclick=\"select_dancers([&quot;1f&quot;, &quot;2f&quot;])\">Tandem-1f-2f</li>\n            <li onclick=\"select_dancers([&quot;3f&quot;, &quot;4f&quot;])\">Tandem-3f-4f</li>\n          </ul>\n        </li>\n      </ul>\n    </div>\n  </body>\n</html>","category":"page"},{"location":"formation_drawings/index.html#Formation-Drawings","page":"Formation Drawings","title":"Formation Drawings","text":"","category":"section"},{"location":"formation_drawings/index.html","page":"Formation Drawings","title":"Formation Drawings","text":"AfterEightChainOne\nBackToBack\nBackToBackCouples\nBeforeEightChain\nCircleOfEight\nColumnOfFour\nCompletedDoublePassThru\nCouple\nFaceToFace\nFacingCouples\nFacingTandemCouples\nLHBoxOfFour\nLHMiniWave\nLHWaveOfFour\nLineOfFour\nQuarterTag\nRHBoxOfFour\nRHMiniWave\nRHWaveOfEight\nRHWaveOfFour\nSquaredSet\nTandem\nTandemCouples\nThreeQuarterTag\nTwoFacedLine","category":"page"},{"location":"Showcase/showcase.html#Showcase-of-Animated-Choreography","page":"Choreograpy Showcase","title":"Showcase of Animated Choreography","text":"","category":"section"},{"location":"Showcase/showcase.html","page":"Choreograpy Showcase","title":"Choreograpy Showcase","text":"The goal of the SquareDanceReasoning package is to simulate Modern Westrern Square Dance choreography and generate animations.  Here we have example animations along with the Julia code that describes the choregraphy.","category":"page"},{"location":"Showcase/showcase.html","page":"Choreograpy Showcase","title":"Choreograpy Showcase","text":"Square Thru","category":"page"},{"location":"formation_drawings/FacingCouples.html","page":"-","title":"-","text":"<html>\n  <head>\n    <meta charset=\"utf-8\"/>\n    <title>FacingCouples</title>\n    <script type=\"text/javascript\" src=\"../dancer_selection.js\"></script>\n    <style>\n      \n\n      svg {\n    background-color: \"gray\";\n}\ntable {\n    empty-cells: show;\n}\n.DancerState-table th {\n    text-align: center;\n    margin-left: 8em;\n    margin-right: 8em;\n}\n.DancerState-table td {\n    text-align: center;\n    margin-left: 8em;\n    margin-right: 8em;\n}\n.DirectionDot {\n    stroke: black;\n    fill: black;\n}\n\n      \n.couple1swatch {\n    color: rgb(255 0 0);\n}\n.couple1 {\n    stroke: black;\n    fill: rgb(255 0 0)\n}\n\n.couple2swatch {\n    color: rgb(0 255 255);\n}\n.couple2 {\n    stroke: black;\n    fill: rgb(0 255 255)\n}\n      \n\n    </style>\n  </head>\n  <body>\n    <h1>FacingCouples</h1>\n    <div>\n      <h2>Dancer Location and Facing Direction</h2>\n      <div class=\"DancerState-table\">\n        <table>\n          <thead>\n            <tr>\n              <th>id</th>\n              <th>dancer</th>\n              <th>time</th>\n              <th>direction</th>\n              <th>down</th>\n              <th>left</th>\n              <th>symbol</th>\n            </tr>\n            <tbody>\n              <tr>\n                <td onclick=\"select_dancers([&quot;1m&quot;])\">1m</td>\n                <td onclick=\"formation_onclick\">Dancer(1, Guy())</td>\n                <td>0</td>\n                <td>1//4</td>\n                <td>1.0</td>\n                <td>1.0</td>\n                <td>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"10.000 10.000 20.000 20.000\" width=\"20.0\" height=\"20.0\">\n                    <g>\n                      <use href=\"../dancer_symbols.svg#Guy\" transform=\"rotate(  0 20.00 20.00)\" x=\"20.0\" y=\"20.0\" width=\"20\" height=\"20\" class=\"dancer couple1\"/>\n                    </g>\n                  </svg>\n                </td>\n              </tr>\n              <tr>\n                <td onclick=\"select_dancers([&quot;1f&quot;])\">1f</td>\n                <td onclick=\"formation_onclick\">Dancer(1, Gal())</td>\n                <td>0</td>\n                <td>1//4</td>\n                <td>2.0</td>\n                <td>1.0</td>\n                <td>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"10.000 30.000 20.000 20.000\" width=\"20.0\" height=\"20.0\">\n                    <g>\n                      <use href=\"../dancer_symbols.svg#Gal\" transform=\"rotate(  0 20.00 40.00)\" x=\"20.0\" y=\"40.0\" width=\"20\" height=\"20\" class=\"dancer couple1\"/>\n                    </g>\n                  </svg>\n                </td>\n              </tr>\n              <tr>\n                <td onclick=\"select_dancers([&quot;2m&quot;])\">2m</td>\n                <td onclick=\"formation_onclick\">Dancer(2, Guy())</td>\n                <td>0</td>\n                <td>3//4</td>\n                <td>2.0</td>\n                <td>2.0</td>\n                <td>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"30.000 30.000 20.000 20.000\" width=\"20.0\" height=\"20.0\">\n                    <g>\n                      <use href=\"../dancer_symbols.svg#Guy\" transform=\"rotate(-180 40.00 40.00)\" x=\"40.0\" y=\"40.0\" width=\"20\" height=\"20\" class=\"dancer couple2\"/>\n                    </g>\n                  </svg>\n                </td>\n              </tr>\n              <tr>\n                <td onclick=\"select_dancers([&quot;2f&quot;])\">2f</td>\n                <td onclick=\"formation_onclick\">Dancer(2, Gal())</td>\n                <td>0</td>\n                <td>3//4</td>\n                <td>1.0</td>\n                <td>2.0</td>\n                <td>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"30.000 10.000 20.000 20.000\" width=\"20.0\" height=\"20.0\">\n                    <g>\n                      <use href=\"../dancer_symbols.svg#Gal\" transform=\"rotate(-180 40.00 20.00)\" x=\"40.0\" y=\"20.0\" width=\"20\" height=\"20\" class=\"dancer couple2\"/>\n                    </g>\n                  </svg>\n                </td>\n              </tr>\n            </tbody>\n          </thead>\n        </table>\n      </div>\n    </div>\n    <div>\n      <svg id=\"floor\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"10.000 10.000 40.000 40.000\" width=\"40.0\" height=\"40.0\">\n        <g>\n          <use id=\"1m\" href=\"../dancer_symbols.svg#Guy\" transform=\"rotate(  0 20.00 20.00)\" x=\"20.0\" y=\"20.0\" width=\"20\" height=\"20\" class=\"dancer couple1\"/>\n          <use id=\"1f\" href=\"../dancer_symbols.svg#Gal\" transform=\"rotate(  0 20.00 40.00)\" x=\"20.0\" y=\"40.0\" width=\"20\" height=\"20\" class=\"dancer couple1\"/>\n          <use id=\"2m\" href=\"../dancer_symbols.svg#Guy\" transform=\"rotate(-180 40.00 40.00)\" x=\"40.0\" y=\"40.0\" width=\"20\" height=\"20\" class=\"dancer couple2\"/>\n          <use id=\"2f\" href=\"../dancer_symbols.svg#Gal\" transform=\"rotate(-180 40.00 20.00)\" x=\"40.0\" y=\"20.0\" width=\"20\" height=\"20\" class=\"dancer couple2\"/>\n        </g>\n      </svg>\n    </div>\n    <div>\n      <h2>Inferred Formations</h2>\n      <ul>\n        <li>\n          Couple\n          <ul>\n            <li onclick=\"select_dancers([&quot;1m&quot;, &quot;1f&quot;])\">Couple-1m-1f</li>\n            <li onclick=\"select_dancers([&quot;2m&quot;, &quot;2f&quot;])\">Couple-2m-2f</li>\n          </ul>\n        </li>\n        <li>\n          DancerState\n          <ul>\n            <li onclick=\"select_dancers([&quot;1f&quot;])\">1f</li>\n            <li onclick=\"select_dancers([&quot;1m&quot;])\">1m</li>\n            <li onclick=\"select_dancers([&quot;2f&quot;])\">2f</li>\n            <li onclick=\"select_dancers([&quot;2m&quot;])\">2m</li>\n          </ul>\n        </li>\n        <li>\n          FaceToFace\n          <ul>\n            <li onclick=\"select_dancers([&quot;1f&quot;, &quot;2m&quot;])\">FaceToFace-1f-2m</li>\n            <li onclick=\"select_dancers([&quot;1m&quot;, &quot;2f&quot;])\">FaceToFace-1m-2f</li>\n          </ul>\n        </li>\n        <li>\n          FacingCouples\n          <ul>\n            <li onclick=\"select_dancers([&quot;1m&quot;, &quot;1f&quot;, &quot;2m&quot;, &quot;2f&quot;])\">FacingCouples-1m-1f-2m-2f</li>\n          </ul>\n        </li>\n      </ul>\n    </div>\n  </body>\n</html>","category":"page"},{"location":"formation_drawings/BackToBackCouples.html","page":"-","title":"-","text":"<html>\n  <head>\n    <meta charset=\"utf-8\"/>\n    <title>BackToBackCouples</title>\n    <script type=\"text/javascript\" src=\"../dancer_selection.js\"></script>\n    <style>\n      \n\n      svg {\n    background-color: \"gray\";\n}\ntable {\n    empty-cells: show;\n}\n.DancerState-table th {\n    text-align: center;\n    margin-left: 8em;\n    margin-right: 8em;\n}\n.DancerState-table td {\n    text-align: center;\n    margin-left: 8em;\n    margin-right: 8em;\n}\n.DirectionDot {\n    stroke: black;\n    fill: black;\n}\n\n      \n.couple1swatch {\n    color: rgb(255 0 0);\n}\n.couple1 {\n    stroke: black;\n    fill: rgb(255 0 0)\n}\n\n.couple2swatch {\n    color: rgb(0 255 255);\n}\n.couple2 {\n    stroke: black;\n    fill: rgb(0 255 255)\n}\n      \n\n    </style>\n  </head>\n  <body>\n    <h1>BackToBackCouples</h1>\n    <div>\n      <h2>Dancer Location and Facing Direction</h2>\n      <div class=\"DancerState-table\">\n        <table>\n          <thead>\n            <tr>\n              <th>id</th>\n              <th>dancer</th>\n              <th>time</th>\n              <th>direction</th>\n              <th>down</th>\n              <th>left</th>\n              <th>symbol</th>\n            </tr>\n            <tbody>\n              <tr>\n                <td onclick=\"select_dancers([&quot;1m&quot;])\">1m</td>\n                <td onclick=\"formation_onclick\">Dancer(1, Guy())</td>\n                <td>0</td>\n                <td>1//4</td>\n                <td>1.0</td>\n                <td>2.0</td>\n                <td>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"30.000 10.000 20.000 20.000\" width=\"20.0\" height=\"20.0\">\n                    <g>\n                      <use href=\"../dancer_symbols.svg#Guy\" transform=\"rotate(  0 40.00 20.00)\" x=\"40.0\" y=\"20.0\" width=\"20\" height=\"20\" class=\"dancer couple1\"/>\n                    </g>\n                  </svg>\n                </td>\n              </tr>\n              <tr>\n                <td onclick=\"select_dancers([&quot;1f&quot;])\">1f</td>\n                <td onclick=\"formation_onclick\">Dancer(1, Gal())</td>\n                <td>0</td>\n                <td>1//4</td>\n                <td>2.0</td>\n                <td>2.0</td>\n                <td>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"30.000 30.000 20.000 20.000\" width=\"20.0\" height=\"20.0\">\n                    <g>\n                      <use href=\"../dancer_symbols.svg#Gal\" transform=\"rotate(  0 40.00 40.00)\" x=\"40.0\" y=\"40.0\" width=\"20\" height=\"20\" class=\"dancer couple1\"/>\n                    </g>\n                  </svg>\n                </td>\n              </tr>\n              <tr>\n                <td onclick=\"select_dancers([&quot;2m&quot;])\">2m</td>\n                <td onclick=\"formation_onclick\">Dancer(2, Guy())</td>\n                <td>0</td>\n                <td>3//4</td>\n                <td>2.0</td>\n                <td>1.0</td>\n                <td>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"10.000 30.000 20.000 20.000\" width=\"20.0\" height=\"20.0\">\n                    <g>\n                      <use href=\"../dancer_symbols.svg#Guy\" transform=\"rotate(-180 20.00 40.00)\" x=\"20.0\" y=\"40.0\" width=\"20\" height=\"20\" class=\"dancer couple2\"/>\n                    </g>\n                  </svg>\n                </td>\n              </tr>\n              <tr>\n                <td onclick=\"select_dancers([&quot;2f&quot;])\">2f</td>\n                <td onclick=\"formation_onclick\">Dancer(2, Gal())</td>\n                <td>0</td>\n                <td>3//4</td>\n                <td>1.0</td>\n                <td>1.0</td>\n                <td>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"10.000 10.000 20.000 20.000\" width=\"20.0\" height=\"20.0\">\n                    <g>\n                      <use href=\"../dancer_symbols.svg#Gal\" transform=\"rotate(-180 20.00 20.00)\" x=\"20.0\" y=\"20.0\" width=\"20\" height=\"20\" class=\"dancer couple2\"/>\n                    </g>\n                  </svg>\n                </td>\n              </tr>\n            </tbody>\n          </thead>\n        </table>\n      </div>\n    </div>\n    <div>\n      <svg id=\"floor\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"10.000 10.000 40.000 40.000\" width=\"40.0\" height=\"40.0\">\n        <g>\n          <use id=\"1m\" href=\"../dancer_symbols.svg#Guy\" transform=\"rotate(  0 40.00 20.00)\" x=\"40.0\" y=\"20.0\" width=\"20\" height=\"20\" class=\"dancer couple1\"/>\n          <use id=\"1f\" href=\"../dancer_symbols.svg#Gal\" transform=\"rotate(  0 40.00 40.00)\" x=\"40.0\" y=\"40.0\" width=\"20\" height=\"20\" class=\"dancer couple1\"/>\n          <use id=\"2m\" href=\"../dancer_symbols.svg#Guy\" transform=\"rotate(-180 20.00 40.00)\" x=\"20.0\" y=\"40.0\" width=\"20\" height=\"20\" class=\"dancer couple2\"/>\n          <use id=\"2f\" href=\"../dancer_symbols.svg#Gal\" transform=\"rotate(-180 20.00 20.00)\" x=\"20.0\" y=\"20.0\" width=\"20\" height=\"20\" class=\"dancer couple2\"/>\n        </g>\n      </svg>\n    </div>\n    <div>\n      <h2>Inferred Formations</h2>\n      <ul>\n        <li>\n          BackToBack\n          <ul>\n            <li onclick=\"select_dancers([&quot;1f&quot;, &quot;2m&quot;])\">BackToBack-1f-2m</li>\n            <li onclick=\"select_dancers([&quot;1m&quot;, &quot;2f&quot;])\">BackToBack-1m-2f</li>\n          </ul>\n        </li>\n        <li>\n          BackToBackCouples\n          <ul>\n            <li onclick=\"select_dancers([&quot;1m&quot;, &quot;1f&quot;, &quot;2m&quot;, &quot;2f&quot;])\">BackToBackCouples-1m-1f-2m-2f</li>\n          </ul>\n        </li>\n        <li>\n          Couple\n          <ul>\n            <li onclick=\"select_dancers([&quot;1m&quot;, &quot;1f&quot;])\">Couple-1m-1f</li>\n            <li onclick=\"select_dancers([&quot;2m&quot;, &quot;2f&quot;])\">Couple-2m-2f</li>\n          </ul>\n        </li>\n        <li>\n          DancerState\n          <ul>\n            <li onclick=\"select_dancers([&quot;1f&quot;])\">1f</li>\n            <li onclick=\"select_dancers([&quot;1m&quot;])\">1m</li>\n            <li onclick=\"select_dancers([&quot;2f&quot;])\">2f</li>\n            <li onclick=\"select_dancers([&quot;2m&quot;])\">2m</li>\n          </ul>\n        </li>\n      </ul>\n    </div>\n  </body>\n</html>","category":"page"},{"location":"formation_drawings/RHWaveOfEight.html","page":"-","title":"-","text":"<html>\n  <head>\n    <meta charset=\"utf-8\"/>\n    <title>RHWaveOfEight</title>\n    <script type=\"text/javascript\" src=\"../dancer_selection.js\"></script>\n    <style>\n      \n\n      svg {\n    background-color: \"gray\";\n}\ntable {\n    empty-cells: show;\n}\n.DancerState-table th {\n    text-align: center;\n    margin-left: 8em;\n    margin-right: 8em;\n}\n.DancerState-table td {\n    text-align: center;\n    margin-left: 8em;\n    margin-right: 8em;\n}\n.DirectionDot {\n    stroke: black;\n    fill: black;\n}\n\n      \n.couple1swatch {\n    color: rgb(255 0 0);\n}\n.couple1 {\n    stroke: black;\n    fill: rgb(255 0 0)\n}\n\n.couple2swatch {\n    color: rgb(255 255 0);\n}\n.couple2 {\n    stroke: black;\n    fill: rgb(255 255 0)\n}\n\n.couple3swatch {\n    color: rgb(0 255 255);\n}\n.couple3 {\n    stroke: black;\n    fill: rgb(0 255 255)\n}\n\n.couple4swatch {\n    color: rgb(255 0 255);\n}\n.couple4 {\n    stroke: black;\n    fill: rgb(255 0 255)\n}\n      \n\n    </style>\n  </head>\n  <body>\n    <h1>RHWaveOfEight</h1>\n    <div>\n      <h2>Dancer Location and Facing Direction</h2>\n      <div class=\"DancerState-table\">\n        <table>\n          <thead>\n            <tr>\n              <th>id</th>\n              <th>dancer</th>\n              <th>time</th>\n              <th>direction</th>\n              <th>down</th>\n              <th>left</th>\n              <th>symbol</th>\n            </tr>\n            <tbody>\n              <tr>\n                <td onclick=\"select_dancers([&quot;1m&quot;])\">1m</td>\n                <td onclick=\"formation_onclick\">Dancer(1, Guy())</td>\n                <td>0</td>\n                <td>1//2</td>\n                <td>0.0</td>\n                <td>1.0</td>\n                <td>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"10.000 -10.000 20.000 20.000\" width=\"20.0\" height=\"20.0\">\n                    <g>\n                      <use href=\"../dancer_symbols.svg#Guy\" transform=\"rotate(-90 20.00 0.00)\" x=\"20.0\" y=\"0.0\" width=\"20\" height=\"20\" class=\"dancer couple1\"/>\n                    </g>\n                  </svg>\n                </td>\n              </tr>\n              <tr>\n                <td onclick=\"select_dancers([&quot;1f&quot;])\">1f</td>\n                <td onclick=\"formation_onclick\">Dancer(1, Gal())</td>\n                <td>0</td>\n                <td>0//1</td>\n                <td>0.0</td>\n                <td>2.0</td>\n                <td>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"30.000 -10.000 20.000 20.000\" width=\"20.0\" height=\"20.0\">\n                    <g>\n                      <use href=\"../dancer_symbols.svg#Gal\" transform=\"rotate( 90 40.00 0.00)\" x=\"40.0\" y=\"0.0\" width=\"20\" height=\"20\" class=\"dancer couple1\"/>\n                    </g>\n                  </svg>\n                </td>\n              </tr>\n              <tr>\n                <td onclick=\"select_dancers([&quot;2m&quot;])\">2m</td>\n                <td onclick=\"formation_onclick\">Dancer(2, Guy())</td>\n                <td>0</td>\n                <td>1//2</td>\n                <td>0.0</td>\n                <td>3.0</td>\n                <td>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"50.000 -10.000 20.000 20.000\" width=\"20.0\" height=\"20.0\">\n                    <g>\n                      <use href=\"../dancer_symbols.svg#Guy\" transform=\"rotate(-90 60.00 0.00)\" x=\"60.0\" y=\"0.0\" width=\"20\" height=\"20\" class=\"dancer couple2\"/>\n                    </g>\n                  </svg>\n                </td>\n              </tr>\n              <tr>\n                <td onclick=\"select_dancers([&quot;2f&quot;])\">2f</td>\n                <td onclick=\"formation_onclick\">Dancer(2, Gal())</td>\n                <td>0</td>\n                <td>0//1</td>\n                <td>0.0</td>\n                <td>4.0</td>\n                <td>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"70.000 -10.000 20.000 20.000\" width=\"20.0\" height=\"20.0\">\n                    <g>\n                      <use href=\"../dancer_symbols.svg#Gal\" transform=\"rotate( 90 80.00 0.00)\" x=\"80.0\" y=\"0.0\" width=\"20\" height=\"20\" class=\"dancer couple2\"/>\n                    </g>\n                  </svg>\n                </td>\n              </tr>\n              <tr>\n                <td onclick=\"select_dancers([&quot;3m&quot;])\">3m</td>\n                <td onclick=\"formation_onclick\">Dancer(3, Guy())</td>\n                <td>0</td>\n                <td>1//2</td>\n                <td>0.0</td>\n                <td>5.0</td>\n                <td>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"90.000 -10.000 20.000 20.000\" width=\"20.0\" height=\"20.0\">\n                    <g>\n                      <use href=\"../dancer_symbols.svg#Guy\" transform=\"rotate(-90 100.00 0.00)\" x=\"100.0\" y=\"0.0\" width=\"20\" height=\"20\" class=\"dancer couple3\"/>\n                    </g>\n                  </svg>\n                </td>\n              </tr>\n              <tr>\n                <td onclick=\"select_dancers([&quot;3f&quot;])\">3f</td>\n                <td onclick=\"formation_onclick\">Dancer(3, Gal())</td>\n                <td>0</td>\n                <td>0//1</td>\n                <td>0.0</td>\n                <td>6.0</td>\n                <td>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"110.000 -10.000 20.000 20.000\" width=\"20.0\" height=\"20.0\">\n                    <g>\n                      <use href=\"../dancer_symbols.svg#Gal\" transform=\"rotate( 90 120.00 0.00)\" x=\"120.0\" y=\"0.0\" width=\"20\" height=\"20\" class=\"dancer couple3\"/>\n                    </g>\n                  </svg>\n                </td>\n              </tr>\n              <tr>\n                <td onclick=\"select_dancers([&quot;4m&quot;])\">4m</td>\n                <td onclick=\"formation_onclick\">Dancer(4, Guy())</td>\n                <td>0</td>\n                <td>1//2</td>\n                <td>0.0</td>\n                <td>7.0</td>\n                <td>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"130.000 -10.000 20.000 20.000\" width=\"20.0\" height=\"20.0\">\n                    <g>\n                      <use href=\"../dancer_symbols.svg#Guy\" transform=\"rotate(-90 140.00 0.00)\" x=\"140.0\" y=\"0.0\" width=\"20\" height=\"20\" class=\"dancer couple4\"/>\n                    </g>\n                  </svg>\n                </td>\n              </tr>\n              <tr>\n                <td onclick=\"select_dancers([&quot;4f&quot;])\">4f</td>\n                <td onclick=\"formation_onclick\">Dancer(4, Gal())</td>\n                <td>0</td>\n                <td>0//1</td>\n                <td>0.0</td>\n                <td>8.0</td>\n                <td>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"150.000 -10.000 20.000 20.000\" width=\"20.0\" height=\"20.0\">\n                    <g>\n                      <use href=\"../dancer_symbols.svg#Gal\" transform=\"rotate( 90 160.00 0.00)\" x=\"160.0\" y=\"0.0\" width=\"20\" height=\"20\" class=\"dancer couple4\"/>\n                    </g>\n                  </svg>\n                </td>\n              </tr>\n            </tbody>\n          </thead>\n        </table>\n      </div>\n    </div>\n    <div>\n      <svg id=\"floor\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"10.000 -10.000 160.000 20.000\" width=\"160.0\" height=\"20.0\">\n        <g>\n          <use id=\"1f\" href=\"../dancer_symbols.svg#Gal\" transform=\"rotate( 90 40.00 0.00)\" x=\"40.0\" y=\"0.0\" width=\"20\" height=\"20\" class=\"dancer couple1\"/>\n          <use id=\"1m\" href=\"../dancer_symbols.svg#Guy\" transform=\"rotate(-90 20.00 0.00)\" x=\"20.0\" y=\"0.0\" width=\"20\" height=\"20\" class=\"dancer couple1\"/>\n          <use id=\"2f\" href=\"../dancer_symbols.svg#Gal\" transform=\"rotate( 90 80.00 0.00)\" x=\"80.0\" y=\"0.0\" width=\"20\" height=\"20\" class=\"dancer couple2\"/>\n          <use id=\"2m\" href=\"../dancer_symbols.svg#Guy\" transform=\"rotate(-90 60.00 0.00)\" x=\"60.0\" y=\"0.0\" width=\"20\" height=\"20\" class=\"dancer couple2\"/>\n          <use id=\"3f\" href=\"../dancer_symbols.svg#Gal\" transform=\"rotate( 90 120.00 0.00)\" x=\"120.0\" y=\"0.0\" width=\"20\" height=\"20\" class=\"dancer couple3\"/>\n          <use id=\"3m\" href=\"../dancer_symbols.svg#Guy\" transform=\"rotate(-90 100.00 0.00)\" x=\"100.0\" y=\"0.0\" width=\"20\" height=\"20\" class=\"dancer couple3\"/>\n          <use id=\"4f\" href=\"../dancer_symbols.svg#Gal\" transform=\"rotate( 90 160.00 0.00)\" x=\"160.0\" y=\"0.0\" width=\"20\" height=\"20\" class=\"dancer couple4\"/>\n          <use id=\"4m\" href=\"../dancer_symbols.svg#Guy\" transform=\"rotate(-90 140.00 0.00)\" x=\"140.0\" y=\"0.0\" width=\"20\" height=\"20\" class=\"dancer couple4\"/>\n        </g>\n      </svg>\n    </div>\n    <div>\n      <h2>Inferred Formations</h2>\n      <ul>\n        <li>\n          DancerState\n          <ul>\n            <li onclick=\"select_dancers([&quot;1f&quot;])\">1f</li>\n            <li onclick=\"select_dancers([&quot;1m&quot;])\">1m</li>\n            <li onclick=\"select_dancers([&quot;2f&quot;])\">2f</li>\n            <li onclick=\"select_dancers([&quot;2m&quot;])\">2m</li>\n            <li onclick=\"select_dancers([&quot;3f&quot;])\">3f</li>\n            <li onclick=\"select_dancers([&quot;3m&quot;])\">3m</li>\n            <li onclick=\"select_dancers([&quot;4f&quot;])\">4f</li>\n            <li onclick=\"select_dancers([&quot;4m&quot;])\">4m</li>\n          </ul>\n        </li>\n        <li>\n          LHMiniWave\n          <ul>\n            <li onclick=\"select_dancers([&quot;1f&quot;, &quot;2m&quot;])\">LHMiniWave-1f-2m</li>\n            <li onclick=\"select_dancers([&quot;2f&quot;, &quot;3m&quot;])\">LHMiniWave-2f-3m</li>\n            <li onclick=\"select_dancers([&quot;3f&quot;, &quot;4m&quot;])\">LHMiniWave-3f-4m</li>\n          </ul>\n        </li>\n        <li>\n          LHWaveOfFour\n          <ul>\n            <li onclick=\"select_dancers([&quot;2f&quot;, &quot;3m&quot;, &quot;1f&quot;, &quot;2m&quot;])\">LHWaveOfFour-2f-3m-1f-2m</li>\n            <li onclick=\"select_dancers([&quot;3f&quot;, &quot;4m&quot;, &quot;2f&quot;, &quot;3m&quot;])\">LHWaveOfFour-3f-4m-2f-3m</li>\n          </ul>\n        </li>\n        <li>\n          RHMiniWave\n          <ul>\n            <li onclick=\"select_dancers([&quot;1f&quot;, &quot;1m&quot;])\">RHMiniWave-1f-1m</li>\n            <li onclick=\"select_dancers([&quot;2f&quot;, &quot;2m&quot;])\">RHMiniWave-2f-2m</li>\n            <li onclick=\"select_dancers([&quot;3f&quot;, &quot;3m&quot;])\">RHMiniWave-3f-3m</li>\n            <li onclick=\"select_dancers([&quot;4f&quot;, &quot;4m&quot;])\">RHMiniWave-4f-4m</li>\n          </ul>\n        </li>\n        <li>\n          RHWaveOfEight\n          <ul>\n            <li onclick=\"select_dancers([&quot;1f&quot;, &quot;1m&quot;, &quot;2f&quot;, &quot;2m&quot;, &quot;3f&quot;, &quot;3m&quot;, &quot;4f&quot;, &quot;4m&quot;])\">RHWaveOfEight-1f-1m-2f-2m-3f-3m-4f-4m</li>\n          </ul>\n        </li>\n        <li>\n          RHWaveOfFour\n          <ul>\n            <li onclick=\"select_dancers([&quot;1f&quot;, &quot;1m&quot;, &quot;2f&quot;, &quot;2m&quot;])\">RHWaveOfFour-1f-1m-2f-2m</li>\n            <li onclick=\"select_dancers([&quot;2f&quot;, &quot;2m&quot;, &quot;3f&quot;, &quot;3m&quot;])\">RHWaveOfFour-2f-2m-3f-3m</li>\n            <li onclick=\"select_dancers([&quot;3f&quot;, &quot;3m&quot;, &quot;4f&quot;, &quot;4m&quot;])\">RHWaveOfFour-3f-3m-4f-4m</li>\n          </ul>\n        </li>\n      </ul>\n    </div>\n  </body>\n</html>","category":"page"},{"location":"formation_drawings/RHWaveOfFour.html","page":"-","title":"-","text":"<html>\n  <head>\n    <meta charset=\"utf-8\"/>\n    <title>RHWaveOfFour</title>\n    <script type=\"text/javascript\" src=\"../dancer_selection.js\"></script>\n    <style>\n      \n\n      svg {\n    background-color: \"gray\";\n}\ntable {\n    empty-cells: show;\n}\n.DancerState-table th {\n    text-align: center;\n    margin-left: 8em;\n    margin-right: 8em;\n}\n.DancerState-table td {\n    text-align: center;\n    margin-left: 8em;\n    margin-right: 8em;\n}\n.DirectionDot {\n    stroke: black;\n    fill: black;\n}\n\n      \n.couple1swatch {\n    color: rgb(255 0 0);\n}\n.couple1 {\n    stroke: black;\n    fill: rgb(255 0 0)\n}\n\n.couple2swatch {\n    color: rgb(0 255 255);\n}\n.couple2 {\n    stroke: black;\n    fill: rgb(0 255 255)\n}\n      \n\n    </style>\n  </head>\n  <body>\n    <h1>RHWaveOfFour</h1>\n    <div>\n      <h2>Dancer Location and Facing Direction</h2>\n      <div class=\"DancerState-table\">\n        <table>\n          <thead>\n            <tr>\n              <th>id</th>\n              <th>dancer</th>\n              <th>time</th>\n              <th>direction</th>\n              <th>down</th>\n              <th>left</th>\n              <th>symbol</th>\n            </tr>\n            <tbody>\n              <tr>\n                <td onclick=\"select_dancers([&quot;1m&quot;])\">1m</td>\n                <td onclick=\"formation_onclick\">Dancer(1, Guy())</td>\n                <td>0</td>\n                <td>1//2</td>\n                <td>0.0</td>\n                <td>1.0</td>\n                <td>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"10.000 -10.000 20.000 20.000\" width=\"20.0\" height=\"20.0\">\n                    <g>\n                      <use href=\"../dancer_symbols.svg#Guy\" transform=\"rotate(-90 20.00 0.00)\" x=\"20.0\" y=\"0.0\" width=\"20\" height=\"20\" class=\"dancer couple1\"/>\n                    </g>\n                  </svg>\n                </td>\n              </tr>\n              <tr>\n                <td onclick=\"select_dancers([&quot;1f&quot;])\">1f</td>\n                <td onclick=\"formation_onclick\">Dancer(1, Gal())</td>\n                <td>0</td>\n                <td>0//1</td>\n                <td>0.0</td>\n                <td>2.0</td>\n                <td>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"30.000 -10.000 20.000 20.000\" width=\"20.0\" height=\"20.0\">\n                    <g>\n                      <use href=\"../dancer_symbols.svg#Gal\" transform=\"rotate( 90 40.00 0.00)\" x=\"40.0\" y=\"0.0\" width=\"20\" height=\"20\" class=\"dancer couple1\"/>\n                    </g>\n                  </svg>\n                </td>\n              </tr>\n              <tr>\n                <td onclick=\"select_dancers([&quot;2m&quot;])\">2m</td>\n                <td onclick=\"formation_onclick\">Dancer(2, Guy())</td>\n                <td>0</td>\n                <td>1//2</td>\n                <td>0.0</td>\n                <td>3.0</td>\n                <td>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"50.000 -10.000 20.000 20.000\" width=\"20.0\" height=\"20.0\">\n                    <g>\n                      <use href=\"../dancer_symbols.svg#Guy\" transform=\"rotate(-90 60.00 0.00)\" x=\"60.0\" y=\"0.0\" width=\"20\" height=\"20\" class=\"dancer couple2\"/>\n                    </g>\n                  </svg>\n                </td>\n              </tr>\n              <tr>\n                <td onclick=\"select_dancers([&quot;2f&quot;])\">2f</td>\n                <td onclick=\"formation_onclick\">Dancer(2, Gal())</td>\n                <td>0</td>\n                <td>0//1</td>\n                <td>0.0</td>\n                <td>4.0</td>\n                <td>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"70.000 -10.000 20.000 20.000\" width=\"20.0\" height=\"20.0\">\n                    <g>\n                      <use href=\"../dancer_symbols.svg#Gal\" transform=\"rotate( 90 80.00 0.00)\" x=\"80.0\" y=\"0.0\" width=\"20\" height=\"20\" class=\"dancer couple2\"/>\n                    </g>\n                  </svg>\n                </td>\n              </tr>\n            </tbody>\n          </thead>\n        </table>\n      </div>\n    </div>\n    <div>\n      <svg id=\"floor\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"10.000 -10.000 80.000 20.000\" width=\"80.0\" height=\"20.0\">\n        <g>\n          <use id=\"1f\" href=\"../dancer_symbols.svg#Gal\" transform=\"rotate( 90 40.00 0.00)\" x=\"40.0\" y=\"0.0\" width=\"20\" height=\"20\" class=\"dancer couple1\"/>\n          <use id=\"1m\" href=\"../dancer_symbols.svg#Guy\" transform=\"rotate(-90 20.00 0.00)\" x=\"20.0\" y=\"0.0\" width=\"20\" height=\"20\" class=\"dancer couple1\"/>\n          <use id=\"2f\" href=\"../dancer_symbols.svg#Gal\" transform=\"rotate( 90 80.00 0.00)\" x=\"80.0\" y=\"0.0\" width=\"20\" height=\"20\" class=\"dancer couple2\"/>\n          <use id=\"2m\" href=\"../dancer_symbols.svg#Guy\" transform=\"rotate(-90 60.00 0.00)\" x=\"60.0\" y=\"0.0\" width=\"20\" height=\"20\" class=\"dancer couple2\"/>\n        </g>\n      </svg>\n    </div>\n    <div>\n      <h2>Inferred Formations</h2>\n      <ul>\n        <li>\n          DancerState\n          <ul>\n            <li onclick=\"select_dancers([&quot;1f&quot;])\">1f</li>\n            <li onclick=\"select_dancers([&quot;1m&quot;])\">1m</li>\n            <li onclick=\"select_dancers([&quot;2f&quot;])\">2f</li>\n            <li onclick=\"select_dancers([&quot;2m&quot;])\">2m</li>\n          </ul>\n        </li>\n        <li>\n          LHMiniWave\n          <ul>\n            <li onclick=\"select_dancers([&quot;1f&quot;, &quot;2m&quot;])\">LHMiniWave-1f-2m</li>\n          </ul>\n        </li>\n        <li>\n          RHMiniWave\n          <ul>\n            <li onclick=\"select_dancers([&quot;1f&quot;, &quot;1m&quot;])\">RHMiniWave-1f-1m</li>\n            <li onclick=\"select_dancers([&quot;2f&quot;, &quot;2m&quot;])\">RHMiniWave-2f-2m</li>\n          </ul>\n        </li>\n        <li>\n          RHWaveOfFour\n          <ul>\n            <li onclick=\"select_dancers([&quot;1f&quot;, &quot;1m&quot;, &quot;2f&quot;, &quot;2m&quot;])\">RHWaveOfFour-1f-1m-2f-2m</li>\n          </ul>\n        </li>\n      </ul>\n    </div>\n  </body>\n</html>","category":"page"},{"location":"formation_drawings/ThreeQuarterTag.html","page":"-","title":"-","text":"<html>\n  <head>\n    <meta charset=\"utf-8\"/>\n    <title>ThreeQuarterTag</title>\n    <script type=\"text/javascript\" src=\"../dancer_selection.js\"></script>\n    <style>\n      \n\n      svg {\n    background-color: \"gray\";\n}\ntable {\n    empty-cells: show;\n}\n.DancerState-table th {\n    text-align: center;\n    margin-left: 8em;\n    margin-right: 8em;\n}\n.DancerState-table td {\n    text-align: center;\n    margin-left: 8em;\n    margin-right: 8em;\n}\n.DirectionDot {\n    stroke: black;\n    fill: black;\n}\n\n      \n.couple1swatch {\n    color: rgb(255 0 0);\n}\n.couple1 {\n    stroke: black;\n    fill: rgb(255 0 0)\n}\n\n.couple2swatch {\n    color: rgb(255 255 0);\n}\n.couple2 {\n    stroke: black;\n    fill: rgb(255 255 0)\n}\n\n.couple3swatch {\n    color: rgb(0 255 255);\n}\n.couple3 {\n    stroke: black;\n    fill: rgb(0 255 255)\n}\n\n.couple4swatch {\n    color: rgb(255 0 255);\n}\n.couple4 {\n    stroke: black;\n    fill: rgb(255 0 255)\n}\n      \n\n    </style>\n  </head>\n  <body>\n    <h1>ThreeQuarterTag</h1>\n    <div>\n      <h2>Dancer Location and Facing Direction</h2>\n      <div class=\"DancerState-table\">\n        <table>\n          <thead>\n            <tr>\n              <th>id</th>\n              <th>dancer</th>\n              <th>time</th>\n              <th>direction</th>\n              <th>down</th>\n              <th>left</th>\n              <th>symbol</th>\n            </tr>\n            <tbody>\n              <tr>\n                <td onclick=\"select_dancers([&quot;1m&quot;])\">1m</td>\n                <td onclick=\"formation_onclick\">Dancer(1, Guy())</td>\n                <td>0</td>\n                <td>0//1</td>\n                <td>3.0</td>\n                <td>3.0</td>\n                <td>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"50.000 50.000 20.000 20.000\" width=\"20.0\" height=\"20.0\">\n                    <g>\n                      <use href=\"../dancer_symbols.svg#Guy\" transform=\"rotate( 90 60.00 60.00)\" x=\"60.0\" y=\"60.0\" width=\"20\" height=\"20\" class=\"dancer couple1\"/>\n                    </g>\n                  </svg>\n                </td>\n              </tr>\n              <tr>\n                <td onclick=\"select_dancers([&quot;1f&quot;])\">1f</td>\n                <td onclick=\"formation_onclick\">Dancer(1, Gal())</td>\n                <td>0</td>\n                <td>0//1</td>\n                <td>3.0</td>\n                <td>2.0</td>\n                <td>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"30.000 50.000 20.000 20.000\" width=\"20.0\" height=\"20.0\">\n                    <g>\n                      <use href=\"../dancer_symbols.svg#Gal\" transform=\"rotate( 90 40.00 60.00)\" x=\"40.0\" y=\"60.0\" width=\"20\" height=\"20\" class=\"dancer couple1\"/>\n                    </g>\n                  </svg>\n                </td>\n              </tr>\n              <tr>\n                <td onclick=\"select_dancers([&quot;2m&quot;])\">2m</td>\n                <td onclick=\"formation_onclick\">Dancer(2, Guy())</td>\n                <td>0</td>\n                <td>0//1</td>\n                <td>2.0</td>\n                <td>4.0</td>\n                <td>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"70.000 30.000 20.000 20.000\" width=\"20.0\" height=\"20.0\">\n                    <g>\n                      <use href=\"../dancer_symbols.svg#Guy\" transform=\"rotate( 90 80.00 40.00)\" x=\"80.0\" y=\"40.0\" width=\"20\" height=\"20\" class=\"dancer couple2\"/>\n                    </g>\n                  </svg>\n                </td>\n              </tr>\n              <tr>\n                <td onclick=\"select_dancers([&quot;2f&quot;])\">2f</td>\n                <td onclick=\"formation_onclick\">Dancer(2, Gal())</td>\n                <td>0</td>\n                <td>0//1</td>\n                <td>2.0</td>\n                <td>2.0</td>\n                <td>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"30.000 30.000 20.000 20.000\" width=\"20.0\" height=\"20.0\">\n                    <g>\n                      <use href=\"../dancer_symbols.svg#Gal\" transform=\"rotate( 90 40.00 40.00)\" x=\"40.0\" y=\"40.0\" width=\"20\" height=\"20\" class=\"dancer couple2\"/>\n                    </g>\n                  </svg>\n                </td>\n              </tr>\n              <tr>\n                <td onclick=\"select_dancers([&quot;3m&quot;])\">3m</td>\n                <td onclick=\"formation_onclick\">Dancer(3, Guy())</td>\n                <td>0</td>\n                <td>1//2</td>\n                <td>1.0</td>\n                <td>2.0</td>\n                <td>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"30.000 10.000 20.000 20.000\" width=\"20.0\" height=\"20.0\">\n                    <g>\n                      <use href=\"../dancer_symbols.svg#Guy\" transform=\"rotate(-90 40.00 20.00)\" x=\"40.0\" y=\"20.0\" width=\"20\" height=\"20\" class=\"dancer couple3\"/>\n                    </g>\n                  </svg>\n                </td>\n              </tr>\n              <tr>\n                <td onclick=\"select_dancers([&quot;3f&quot;])\">3f</td>\n                <td onclick=\"formation_onclick\">Dancer(3, Gal())</td>\n                <td>0</td>\n                <td>1//2</td>\n                <td>1.0</td>\n                <td>3.0</td>\n                <td>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"50.000 10.000 20.000 20.000\" width=\"20.0\" height=\"20.0\">\n                    <g>\n                      <use href=\"../dancer_symbols.svg#Gal\" transform=\"rotate(-90 60.00 20.00)\" x=\"60.0\" y=\"20.0\" width=\"20\" height=\"20\" class=\"dancer couple3\"/>\n                    </g>\n                  </svg>\n                </td>\n              </tr>\n              <tr>\n                <td onclick=\"select_dancers([&quot;4m&quot;])\">4m</td>\n                <td onclick=\"formation_onclick\">Dancer(4, Guy())</td>\n                <td>0</td>\n                <td>1//2</td>\n                <td>2.0</td>\n                <td>1.0</td>\n                <td>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"10.000 30.000 20.000 20.000\" width=\"20.0\" height=\"20.0\">\n                    <g>\n                      <use href=\"../dancer_symbols.svg#Guy\" transform=\"rotate(-90 20.00 40.00)\" x=\"20.0\" y=\"40.0\" width=\"20\" height=\"20\" class=\"dancer couple4\"/>\n                    </g>\n                  </svg>\n                </td>\n              </tr>\n              <tr>\n                <td onclick=\"select_dancers([&quot;4f&quot;])\">4f</td>\n                <td onclick=\"formation_onclick\">Dancer(4, Gal())</td>\n                <td>0</td>\n                <td>1//2</td>\n                <td>2.0</td>\n                <td>3.0</td>\n                <td>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"50.000 30.000 20.000 20.000\" width=\"20.0\" height=\"20.0\">\n                    <g>\n                      <use href=\"../dancer_symbols.svg#Gal\" transform=\"rotate(-90 60.00 40.00)\" x=\"60.0\" y=\"40.0\" width=\"20\" height=\"20\" class=\"dancer couple4\"/>\n                    </g>\n                  </svg>\n                </td>\n              </tr>\n            </tbody>\n          </thead>\n        </table>\n      </div>\n    </div>\n    <div>\n      <svg id=\"floor\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"10.000 10.000 80.000 60.000\" width=\"80.0\" height=\"60.0\">\n        <g>\n          <use id=\"1m\" href=\"../dancer_symbols.svg#Guy\" transform=\"rotate( 90 60.00 60.00)\" x=\"60.0\" y=\"60.0\" width=\"20\" height=\"20\" class=\"dancer couple1\"/>\n          <use id=\"1f\" href=\"../dancer_symbols.svg#Gal\" transform=\"rotate( 90 40.00 60.00)\" x=\"40.0\" y=\"60.0\" width=\"20\" height=\"20\" class=\"dancer couple1\"/>\n          <use id=\"2f\" href=\"../dancer_symbols.svg#Gal\" transform=\"rotate( 90 40.00 40.00)\" x=\"40.0\" y=\"40.0\" width=\"20\" height=\"20\" class=\"dancer couple2\"/>\n          <use id=\"4m\" href=\"../dancer_symbols.svg#Guy\" transform=\"rotate(-90 20.00 40.00)\" x=\"20.0\" y=\"40.0\" width=\"20\" height=\"20\" class=\"dancer couple4\"/>\n          <use id=\"2m\" href=\"../dancer_symbols.svg#Guy\" transform=\"rotate( 90 80.00 40.00)\" x=\"80.0\" y=\"40.0\" width=\"20\" height=\"20\" class=\"dancer couple2\"/>\n          <use id=\"4f\" href=\"../dancer_symbols.svg#Gal\" transform=\"rotate(-90 60.00 40.00)\" x=\"60.0\" y=\"40.0\" width=\"20\" height=\"20\" class=\"dancer couple4\"/>\n          <use id=\"3m\" href=\"../dancer_symbols.svg#Guy\" transform=\"rotate(-90 40.00 20.00)\" x=\"40.0\" y=\"20.0\" width=\"20\" height=\"20\" class=\"dancer couple3\"/>\n          <use id=\"3f\" href=\"../dancer_symbols.svg#Gal\" transform=\"rotate(-90 60.00 20.00)\" x=\"60.0\" y=\"20.0\" width=\"20\" height=\"20\" class=\"dancer couple3\"/>\n        </g>\n      </svg>\n    </div>\n    <div>\n      <h2>Inferred Formations</h2>\n      <ul>\n        <li>\n          BackToBack\n          <ul>\n            <li onclick=\"select_dancers([&quot;1m&quot;, &quot;4f&quot;])\">BackToBack-1m-4f</li>\n            <li onclick=\"select_dancers([&quot;2f&quot;, &quot;3m&quot;])\">BackToBack-2f-3m</li>\n          </ul>\n        </li>\n        <li>\n          Couple\n          <ul>\n            <li onclick=\"select_dancers([&quot;1m&quot;, &quot;1f&quot;])\">Couple-1m-1f</li>\n            <li onclick=\"select_dancers([&quot;3m&quot;, &quot;3f&quot;])\">Couple-3m-3f</li>\n          </ul>\n        </li>\n        <li>\n          DancerState\n          <ul>\n            <li onclick=\"select_dancers([&quot;1f&quot;])\">1f</li>\n            <li onclick=\"select_dancers([&quot;1m&quot;])\">1m</li>\n            <li onclick=\"select_dancers([&quot;2f&quot;])\">2f</li>\n            <li onclick=\"select_dancers([&quot;2m&quot;])\">2m</li>\n            <li onclick=\"select_dancers([&quot;3f&quot;])\">3f</li>\n            <li onclick=\"select_dancers([&quot;3m&quot;])\">3m</li>\n            <li onclick=\"select_dancers([&quot;4f&quot;])\">4f</li>\n            <li onclick=\"select_dancers([&quot;4m&quot;])\">4m</li>\n          </ul>\n        </li>\n        <li>\n          LHMiniWave\n          <ul>\n            <li onclick=\"select_dancers([&quot;2f&quot;, &quot;4f&quot;])\">LHMiniWave-2f-4f</li>\n          </ul>\n        </li>\n        <li>\n          RHMiniWave\n          <ul>\n            <li onclick=\"select_dancers([&quot;2f&quot;, &quot;4m&quot;])\">RHMiniWave-2f-4m</li>\n            <li onclick=\"select_dancers([&quot;2m&quot;, &quot;4f&quot;])\">RHMiniWave-2m-4f</li>\n          </ul>\n        </li>\n        <li>\n          RHWaveOfFour\n          <ul>\n            <li onclick=\"select_dancers([&quot;2f&quot;, &quot;4m&quot;, &quot;2m&quot;, &quot;4f&quot;])\">RHWaveOfFour-2f-4m-2m-4f</li>\n          </ul>\n        </li>\n        <li>\n          Tandem\n          <ul>\n            <li onclick=\"select_dancers([&quot;1f&quot;, &quot;2f&quot;])\">Tandem-1f-2f</li>\n            <li onclick=\"select_dancers([&quot;3f&quot;, &quot;4f&quot;])\">Tandem-3f-4f</li>\n          </ul>\n        </li>\n        <li>\n          ThreeQuarterTag\n          <ul>\n            <li onclick=\"select_dancers([&quot;1m&quot;, &quot;1f&quot;, &quot;2f&quot;, &quot;4m&quot;, &quot;2m&quot;, &quot;4f&quot;, &quot;3m&quot;, &quot;3f&quot;])\">ThreeQuarterTag-1m-1f-2f-4m-2m-4f-3m-3f</li>\n          </ul>\n        </li>\n      </ul>\n    </div>\n  </body>\n</html>","category":"page"},{"location":"motion_primitives.html#Motion-Primitives","page":"Motion Primitives","title":"Motion Primitives","text":"","category":"section"},{"location":"motion_primitives.html","page":"Motion Primitives","title":"Motion Primitives","text":"How the dancers move while performing a call can be described in terms of motion primitives.","category":"page"},{"location":"motion_primitives.html","page":"Motion Primitives","title":"Motion Primitives","text":"These are the motion primitives:","category":"page"},{"location":"motion_primitives.html","page":"Motion Primitives","title":"Motion Primitives","text":"forward\nbackward\nrightward\nleftward\nrotate\nrevolve","category":"page"},{"location":"formation_drawings/BackToBack.html","page":"-","title":"-","text":"<html>\n  <head>\n    <meta charset=\"utf-8\"/>\n    <title>BackToBack</title>\n    <script type=\"text/javascript\" src=\"../dancer_selection.js\"></script>\n    <style>\n      \n\n      svg {\n    background-color: \"gray\";\n}\ntable {\n    empty-cells: show;\n}\n.DancerState-table th {\n    text-align: center;\n    margin-left: 8em;\n    margin-right: 8em;\n}\n.DancerState-table td {\n    text-align: center;\n    margin-left: 8em;\n    margin-right: 8em;\n}\n.DirectionDot {\n    stroke: black;\n    fill: black;\n}\n\n      \n.couple1swatch {\n    color: rgb(255 0 0);\n}\n.couple1 {\n    stroke: black;\n    fill: rgb(255 0 0)\n}\n      \n\n    </style>\n  </head>\n  <body>\n    <h1>BackToBack</h1>\n    <div>\n      <h2>Dancer Location and Facing Direction</h2>\n      <div class=\"DancerState-table\">\n        <table>\n          <thead>\n            <tr>\n              <th>id</th>\n              <th>dancer</th>\n              <th>time</th>\n              <th>direction</th>\n              <th>down</th>\n              <th>left</th>\n              <th>symbol</th>\n            </tr>\n            <tbody>\n              <tr>\n                <td onclick=\"select_dancers([&quot;1m&quot;])\">1m</td>\n                <td onclick=\"formation_onclick\">Dancer(1, Guy())</td>\n                <td>0</td>\n                <td>3//4</td>\n                <td>1.0</td>\n                <td>1.0</td>\n                <td>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"10.000 10.000 20.000 20.000\" width=\"20.0\" height=\"20.0\">\n                    <g>\n                      <use href=\"../dancer_symbols.svg#Guy\" transform=\"rotate(-180 20.00 20.00)\" x=\"20.0\" y=\"20.0\" width=\"20\" height=\"20\" class=\"dancer couple1\"/>\n                    </g>\n                  </svg>\n                </td>\n              </tr>\n              <tr>\n                <td onclick=\"select_dancers([&quot;1f&quot;])\">1f</td>\n                <td onclick=\"formation_onclick\">Dancer(1, Gal())</td>\n                <td>0</td>\n                <td>1//4</td>\n                <td>1.0</td>\n                <td>2.0</td>\n                <td>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"30.000 10.000 20.000 20.000\" width=\"20.0\" height=\"20.0\">\n                    <g>\n                      <use href=\"../dancer_symbols.svg#Gal\" transform=\"rotate(  0 40.00 20.00)\" x=\"40.0\" y=\"20.0\" width=\"20\" height=\"20\" class=\"dancer couple1\"/>\n                    </g>\n                  </svg>\n                </td>\n              </tr>\n            </tbody>\n          </thead>\n        </table>\n      </div>\n    </div>\n    <div>\n      <svg id=\"floor\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"10.000 10.000 40.000 20.000\" width=\"40.0\" height=\"20.0\">\n        <g>\n          <use id=\"1f\" href=\"../dancer_symbols.svg#Gal\" transform=\"rotate(  0 40.00 20.00)\" x=\"40.0\" y=\"20.0\" width=\"20\" height=\"20\" class=\"dancer couple1\"/>\n          <use id=\"1m\" href=\"../dancer_symbols.svg#Guy\" transform=\"rotate(-180 20.00 20.00)\" x=\"20.0\" y=\"20.0\" width=\"20\" height=\"20\" class=\"dancer couple1\"/>\n        </g>\n      </svg>\n    </div>\n    <div>\n      <h2>Inferred Formations</h2>\n      <ul>\n        <li>\n          BackToBack\n          <ul>\n            <li onclick=\"select_dancers([&quot;1f&quot;, &quot;1m&quot;])\">BackToBack-1f-1m</li>\n          </ul>\n        </li>\n        <li>\n          DancerState\n          <ul>\n            <li onclick=\"select_dancers([&quot;1f&quot;])\">1f</li>\n            <li onclick=\"select_dancers([&quot;1m&quot;])\">1m</li>\n          </ul>\n        </li>\n      </ul>\n    </div>\n  </body>\n</html>","category":"page"},{"location":"dancers.html#Dancers,-their-Positions-and-Faciing-Directions","page":"Dancers, Their Positions and Directions","title":"Dancers, their Positions and Faciing Directions","text":"","category":"section"},{"location":"dancers.html#Dancer","page":"Dancers, Their Positions and Directions","title":"Dancer","text":"","category":"section"},{"location":"dancers.html","page":"Dancers, Their Positions and Directions","title":"Dancers, Their Positions and Directions","text":"Dancer represents a single square dancer.  Each Dancer has a couple_number and a gender.","category":"page"},{"location":"dancers.html","page":"Dancers, Their Positions and Directions","title":"Dancers, Their Positions and Directions","text":"gender is one of Guy(), Gal(), or Unspecified() – these are instances of singleton subtypes of the abstract supertype Gender.","category":"page"},{"location":"dancers.html","page":"Dancers, Their Positions and Directions","title":"Dancers, Their Positions and Directions","text":"Within a square, dancers have an absolute ordering that matches their order in a squared set.","category":"page"},{"location":"dancers.html","page":"Dancers, Their Positions and Directions","title":"Dancers, Their Positions and Directions","text":"using SquareDanceReasoning\n\nsort(make_square(4).dancers)","category":"page"},{"location":"dancers.html","page":"Dancers, Their Positions and Directions","title":"Dancers, Their Positions and Directions","text":"The OriginalPartners fact is inferred by `OriginalPartnerRule](@ref), which matches partners by couple_number.","category":"page"},{"location":"dancers.html","page":"Dancers, Their Positions and Directions","title":"Dancers, Their Positions and Directions","text":"SDSquare notes which dancers are in the same square.","category":"page"},{"location":"dancers.html","page":"Dancers, Their Positions and Directions","title":"Dancers, Their Positions and Directions","text":"make_square takes a number of couples and returns an SDSquare of twice than many dancers.","category":"page"},{"location":"dancers.html","page":"Dancers, Their Positions and Directions","title":"Dancers, Their Positions and Directions","text":"When asserting an SDSquare to the nowledge base, the SquareHasDancers rule adds the square's Dancers as well.","category":"page"},{"location":"dancers.html#DancerState","page":"Dancers, Their Positions and Directions","title":"DancerState","text":"","category":"section"},{"location":"dancers.html","page":"Dancers, Their Positions and Directions","title":"Dancers, Their Positions and Directions","text":"The location and facing direction of a Dancer are represented in a DancerState, which has these properties","category":"page"},{"location":"dancers.html","page":"Dancers, Their Positions and Directions","title":"Dancers, Their Positions and Directions","text":"previous: the DancerState which \"moved\" to become this one.\ndancer: the Dancer that this DancerState stores the locaton and facing direction for at a given time.\ntime: a timestamp which should monotonicly DECREASE as one follows the previous chain.\ndirection: the facing direction of the dancer at time.\ndown and left: the location of the dancer at time.","category":"page"},{"location":"dancers.html","page":"Dancers, Their Positions and Directions","title":"Dancers, Their Positions and Directions","text":"See the Coordinate System section for how direction, down and left are represented.","category":"page"},{"location":"formation_drawings/LHWaveOfFour.html","page":"-","title":"-","text":"<html>\n  <head>\n    <meta charset=\"utf-8\"/>\n    <title>LHWaveOfFour</title>\n    <script type=\"text/javascript\" src=\"../dancer_selection.js\"></script>\n    <style>\n      \n\n      svg {\n    background-color: \"gray\";\n}\ntable {\n    empty-cells: show;\n}\n.DancerState-table th {\n    text-align: center;\n    margin-left: 8em;\n    margin-right: 8em;\n}\n.DancerState-table td {\n    text-align: center;\n    margin-left: 8em;\n    margin-right: 8em;\n}\n.DirectionDot {\n    stroke: black;\n    fill: black;\n}\n\n      \n.couple1swatch {\n    color: rgb(255 0 0);\n}\n.couple1 {\n    stroke: black;\n    fill: rgb(255 0 0)\n}\n\n.couple2swatch {\n    color: rgb(0 255 255);\n}\n.couple2 {\n    stroke: black;\n    fill: rgb(0 255 255)\n}\n      \n\n    </style>\n  </head>\n  <body>\n    <h1>LHWaveOfFour</h1>\n    <div>\n      <h2>Dancer Location and Facing Direction</h2>\n      <div class=\"DancerState-table\">\n        <table>\n          <thead>\n            <tr>\n              <th>id</th>\n              <th>dancer</th>\n              <th>time</th>\n              <th>direction</th>\n              <th>down</th>\n              <th>left</th>\n              <th>symbol</th>\n            </tr>\n            <tbody>\n              <tr>\n                <td onclick=\"select_dancers([&quot;1m&quot;])\">1m</td>\n                <td onclick=\"formation_onclick\">Dancer(1, Guy())</td>\n                <td>0</td>\n                <td>0//1</td>\n                <td>0.0</td>\n                <td>1.0</td>\n                <td>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"10.000 -10.000 20.000 20.000\" width=\"20.0\" height=\"20.0\">\n                    <g>\n                      <use href=\"../dancer_symbols.svg#Guy\" transform=\"rotate( 90 20.00 0.00)\" x=\"20.0\" y=\"0.0\" width=\"20\" height=\"20\" class=\"dancer couple1\"/>\n                    </g>\n                  </svg>\n                </td>\n              </tr>\n              <tr>\n                <td onclick=\"select_dancers([&quot;1f&quot;])\">1f</td>\n                <td onclick=\"formation_onclick\">Dancer(1, Gal())</td>\n                <td>0</td>\n                <td>1//2</td>\n                <td>0.0</td>\n                <td>2.0</td>\n                <td>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"30.000 -10.000 20.000 20.000\" width=\"20.0\" height=\"20.0\">\n                    <g>\n                      <use href=\"../dancer_symbols.svg#Gal\" transform=\"rotate(-90 40.00 0.00)\" x=\"40.0\" y=\"0.0\" width=\"20\" height=\"20\" class=\"dancer couple1\"/>\n                    </g>\n                  </svg>\n                </td>\n              </tr>\n              <tr>\n                <td onclick=\"select_dancers([&quot;2m&quot;])\">2m</td>\n                <td onclick=\"formation_onclick\">Dancer(2, Guy())</td>\n                <td>0</td>\n                <td>0//1</td>\n                <td>0.0</td>\n                <td>3.0</td>\n                <td>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"50.000 -10.000 20.000 20.000\" width=\"20.0\" height=\"20.0\">\n                    <g>\n                      <use href=\"../dancer_symbols.svg#Guy\" transform=\"rotate( 90 60.00 0.00)\" x=\"60.0\" y=\"0.0\" width=\"20\" height=\"20\" class=\"dancer couple2\"/>\n                    </g>\n                  </svg>\n                </td>\n              </tr>\n              <tr>\n                <td onclick=\"select_dancers([&quot;2f&quot;])\">2f</td>\n                <td onclick=\"formation_onclick\">Dancer(2, Gal())</td>\n                <td>0</td>\n                <td>1//2</td>\n                <td>0.0</td>\n                <td>4.0</td>\n                <td>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"70.000 -10.000 20.000 20.000\" width=\"20.0\" height=\"20.0\">\n                    <g>\n                      <use href=\"../dancer_symbols.svg#Gal\" transform=\"rotate(-90 80.00 0.00)\" x=\"80.0\" y=\"0.0\" width=\"20\" height=\"20\" class=\"dancer couple2\"/>\n                    </g>\n                  </svg>\n                </td>\n              </tr>\n            </tbody>\n          </thead>\n        </table>\n      </div>\n    </div>\n    <div>\n      <svg id=\"floor\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"10.000 -10.000 80.000 20.000\" width=\"80.0\" height=\"20.0\">\n        <g>\n          <use id=\"2m\" href=\"../dancer_symbols.svg#Guy\" transform=\"rotate( 90 60.00 0.00)\" x=\"60.0\" y=\"0.0\" width=\"20\" height=\"20\" class=\"dancer couple2\"/>\n          <use id=\"2f\" href=\"../dancer_symbols.svg#Gal\" transform=\"rotate(-90 80.00 0.00)\" x=\"80.0\" y=\"0.0\" width=\"20\" height=\"20\" class=\"dancer couple2\"/>\n          <use id=\"1m\" href=\"../dancer_symbols.svg#Guy\" transform=\"rotate( 90 20.00 0.00)\" x=\"20.0\" y=\"0.0\" width=\"20\" height=\"20\" class=\"dancer couple1\"/>\n          <use id=\"1f\" href=\"../dancer_symbols.svg#Gal\" transform=\"rotate(-90 40.00 0.00)\" x=\"40.0\" y=\"0.0\" width=\"20\" height=\"20\" class=\"dancer couple1\"/>\n        </g>\n      </svg>\n    </div>\n    <div>\n      <h2>Inferred Formations</h2>\n      <ul>\n        <li>\n          DancerState\n          <ul>\n            <li onclick=\"select_dancers([&quot;1f&quot;])\">1f</li>\n            <li onclick=\"select_dancers([&quot;1m&quot;])\">1m</li>\n            <li onclick=\"select_dancers([&quot;2f&quot;])\">2f</li>\n            <li onclick=\"select_dancers([&quot;2m&quot;])\">2m</li>\n          </ul>\n        </li>\n        <li>\n          LHMiniWave\n          <ul>\n            <li onclick=\"select_dancers([&quot;1m&quot;, &quot;1f&quot;])\">LHMiniWave-1m-1f</li>\n            <li onclick=\"select_dancers([&quot;2m&quot;, &quot;2f&quot;])\">LHMiniWave-2m-2f</li>\n          </ul>\n        </li>\n        <li>\n          LHWaveOfFour\n          <ul>\n            <li onclick=\"select_dancers([&quot;2m&quot;, &quot;2f&quot;, &quot;1m&quot;, &quot;1f&quot;])\">LHWaveOfFour-2m-2f-1m-1f</li>\n          </ul>\n        </li>\n        <li>\n          RHMiniWave\n          <ul>\n            <li onclick=\"select_dancers([&quot;2m&quot;, &quot;1f&quot;])\">RHMiniWave-2m-1f</li>\n          </ul>\n        </li>\n      </ul>\n    </div>\n  </body>\n</html>","category":"page"},{"location":"formation_drawings/Couple.html","page":"-","title":"-","text":"<html>\n  <head>\n    <meta charset=\"utf-8\"/>\n    <title>Couple</title>\n    <script type=\"text/javascript\" src=\"../dancer_selection.js\"></script>\n    <style>\n      \n\n      svg {\n    background-color: \"gray\";\n}\ntable {\n    empty-cells: show;\n}\n.DancerState-table th {\n    text-align: center;\n    margin-left: 8em;\n    margin-right: 8em;\n}\n.DancerState-table td {\n    text-align: center;\n    margin-left: 8em;\n    margin-right: 8em;\n}\n.DirectionDot {\n    stroke: black;\n    fill: black;\n}\n\n      \n.couple1swatch {\n    color: rgb(255 0 0);\n}\n.couple1 {\n    stroke: black;\n    fill: rgb(255 0 0)\n}\n      \n\n    </style>\n  </head>\n  <body>\n    <h1>Couple</h1>\n    <div>\n      <h2>Dancer Location and Facing Direction</h2>\n      <div class=\"DancerState-table\">\n        <table>\n          <thead>\n            <tr>\n              <th>id</th>\n              <th>dancer</th>\n              <th>time</th>\n              <th>direction</th>\n              <th>down</th>\n              <th>left</th>\n              <th>symbol</th>\n            </tr>\n            <tbody>\n              <tr>\n                <td onclick=\"select_dancers([&quot;1m&quot;])\">1m</td>\n                <td onclick=\"formation_onclick\">Dancer(1, Guy())</td>\n                <td>0</td>\n                <td>0//1</td>\n                <td>1.0</td>\n                <td>2.0</td>\n                <td>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"30.000 10.000 20.000 20.000\" width=\"20.0\" height=\"20.0\">\n                    <g>\n                      <use href=\"../dancer_symbols.svg#Guy\" transform=\"rotate( 90 40.00 20.00)\" x=\"40.0\" y=\"20.0\" width=\"20\" height=\"20\" class=\"dancer couple1\"/>\n                    </g>\n                  </svg>\n                </td>\n              </tr>\n              <tr>\n                <td onclick=\"select_dancers([&quot;1f&quot;])\">1f</td>\n                <td onclick=\"formation_onclick\">Dancer(1, Gal())</td>\n                <td>0</td>\n                <td>0//1</td>\n                <td>1.0</td>\n                <td>1.0</td>\n                <td>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"10.000 10.000 20.000 20.000\" width=\"20.0\" height=\"20.0\">\n                    <g>\n                      <use href=\"../dancer_symbols.svg#Gal\" transform=\"rotate( 90 20.00 20.00)\" x=\"20.0\" y=\"20.0\" width=\"20\" height=\"20\" class=\"dancer couple1\"/>\n                    </g>\n                  </svg>\n                </td>\n              </tr>\n            </tbody>\n          </thead>\n        </table>\n      </div>\n    </div>\n    <div>\n      <svg id=\"floor\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"10.000 10.000 40.000 20.000\" width=\"40.0\" height=\"20.0\">\n        <g>\n          <use id=\"1m\" href=\"../dancer_symbols.svg#Guy\" transform=\"rotate( 90 40.00 20.00)\" x=\"40.0\" y=\"20.0\" width=\"20\" height=\"20\" class=\"dancer couple1\"/>\n          <use id=\"1f\" href=\"../dancer_symbols.svg#Gal\" transform=\"rotate( 90 20.00 20.00)\" x=\"20.0\" y=\"20.0\" width=\"20\" height=\"20\" class=\"dancer couple1\"/>\n        </g>\n      </svg>\n    </div>\n    <div>\n      <h2>Inferred Formations</h2>\n      <ul>\n        <li>\n          Couple\n          <ul>\n            <li onclick=\"select_dancers([&quot;1m&quot;, &quot;1f&quot;])\">Couple-1m-1f</li>\n          </ul>\n        </li>\n        <li>\n          DancerState\n          <ul>\n            <li onclick=\"select_dancers([&quot;1f&quot;])\">1f</li>\n            <li onclick=\"select_dancers([&quot;1m&quot;])\">1m</li>\n          </ul>\n        </li>\n      </ul>\n    </div>\n  </body>\n</html>","category":"page"},{"location":"formation_drawings/CompletedDoublePassThru.html","page":"-","title":"-","text":"<html>\n  <head>\n    <meta charset=\"utf-8\"/>\n    <title>CompletedDoublePassThru</title>\n    <script type=\"text/javascript\" src=\"../dancer_selection.js\"></script>\n    <style>\n      \n\n      svg {\n    background-color: \"gray\";\n}\ntable {\n    empty-cells: show;\n}\n.DancerState-table th {\n    text-align: center;\n    margin-left: 8em;\n    margin-right: 8em;\n}\n.DancerState-table td {\n    text-align: center;\n    margin-left: 8em;\n    margin-right: 8em;\n}\n.DirectionDot {\n    stroke: black;\n    fill: black;\n}\n\n      \n.couple1swatch {\n    color: rgb(255 0 0);\n}\n.couple1 {\n    stroke: black;\n    fill: rgb(255 0 0)\n}\n\n.couple2swatch {\n    color: rgb(255 255 0);\n}\n.couple2 {\n    stroke: black;\n    fill: rgb(255 255 0)\n}\n\n.couple3swatch {\n    color: rgb(0 255 255);\n}\n.couple3 {\n    stroke: black;\n    fill: rgb(0 255 255)\n}\n\n.couple4swatch {\n    color: rgb(255 0 255);\n}\n.couple4 {\n    stroke: black;\n    fill: rgb(255 0 255)\n}\n      \n\n    </style>\n  </head>\n  <body>\n    <h1>CompletedDoublePassThru</h1>\n    <div>\n      <h2>Dancer Location and Facing Direction</h2>\n      <div class=\"DancerState-table\">\n        <table>\n          <thead>\n            <tr>\n              <th>id</th>\n              <th>dancer</th>\n              <th>time</th>\n              <th>direction</th>\n              <th>down</th>\n              <th>left</th>\n              <th>symbol</th>\n            </tr>\n            <tbody>\n              <tr>\n                <td onclick=\"select_dancers([&quot;1m&quot;])\">1m</td>\n                <td onclick=\"formation_onclick\">Dancer(1, Guy())</td>\n                <td>0</td>\n                <td>3//4</td>\n                <td>2.0</td>\n                <td>1.0</td>\n                <td>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"10.000 30.000 20.000 20.000\" width=\"20.0\" height=\"20.0\">\n                    <g>\n                      <use href=\"../dancer_symbols.svg#Guy\" transform=\"rotate(-180 20.00 40.00)\" x=\"20.0\" y=\"40.0\" width=\"20\" height=\"20\" class=\"dancer couple1\"/>\n                    </g>\n                  </svg>\n                </td>\n              </tr>\n              <tr>\n                <td onclick=\"select_dancers([&quot;1f&quot;])\">1f</td>\n                <td onclick=\"formation_onclick\">Dancer(1, Gal())</td>\n                <td>0</td>\n                <td>3//4</td>\n                <td>1.0</td>\n                <td>1.0</td>\n                <td>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"10.000 10.000 20.000 20.000\" width=\"20.0\" height=\"20.0\">\n                    <g>\n                      <use href=\"../dancer_symbols.svg#Gal\" transform=\"rotate(-180 20.00 20.00)\" x=\"20.0\" y=\"20.0\" width=\"20\" height=\"20\" class=\"dancer couple1\"/>\n                    </g>\n                  </svg>\n                </td>\n              </tr>\n              <tr>\n                <td onclick=\"select_dancers([&quot;2m&quot;])\">2m</td>\n                <td onclick=\"formation_onclick\">Dancer(2, Guy())</td>\n                <td>0</td>\n                <td>3//4</td>\n                <td>2.0</td>\n                <td>2.0</td>\n                <td>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"30.000 30.000 20.000 20.000\" width=\"20.0\" height=\"20.0\">\n                    <g>\n                      <use href=\"../dancer_symbols.svg#Guy\" transform=\"rotate(-180 40.00 40.00)\" x=\"40.0\" y=\"40.0\" width=\"20\" height=\"20\" class=\"dancer couple2\"/>\n                    </g>\n                  </svg>\n                </td>\n              </tr>\n              <tr>\n                <td onclick=\"select_dancers([&quot;2f&quot;])\">2f</td>\n                <td onclick=\"formation_onclick\">Dancer(2, Gal())</td>\n                <td>0</td>\n                <td>3//4</td>\n                <td>1.0</td>\n                <td>2.0</td>\n                <td>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"30.000 10.000 20.000 20.000\" width=\"20.0\" height=\"20.0\">\n                    <g>\n                      <use href=\"../dancer_symbols.svg#Gal\" transform=\"rotate(-180 40.00 20.00)\" x=\"40.0\" y=\"20.0\" width=\"20\" height=\"20\" class=\"dancer couple2\"/>\n                    </g>\n                  </svg>\n                </td>\n              </tr>\n              <tr>\n                <td onclick=\"select_dancers([&quot;3m&quot;])\">3m</td>\n                <td onclick=\"formation_onclick\">Dancer(3, Guy())</td>\n                <td>0</td>\n                <td>1//4</td>\n                <td>1.0</td>\n                <td>3.0</td>\n                <td>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"50.000 10.000 20.000 20.000\" width=\"20.0\" height=\"20.0\">\n                    <g>\n                      <use href=\"../dancer_symbols.svg#Guy\" transform=\"rotate(  0 60.00 20.00)\" x=\"60.0\" y=\"20.0\" width=\"20\" height=\"20\" class=\"dancer couple3\"/>\n                    </g>\n                  </svg>\n                </td>\n              </tr>\n              <tr>\n                <td onclick=\"select_dancers([&quot;3f&quot;])\">3f</td>\n                <td onclick=\"formation_onclick\">Dancer(3, Gal())</td>\n                <td>0</td>\n                <td>1//4</td>\n                <td>2.0</td>\n                <td>3.0</td>\n                <td>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"50.000 30.000 20.000 20.000\" width=\"20.0\" height=\"20.0\">\n                    <g>\n                      <use href=\"../dancer_symbols.svg#Gal\" transform=\"rotate(  0 60.00 40.00)\" x=\"60.0\" y=\"40.0\" width=\"20\" height=\"20\" class=\"dancer couple3\"/>\n                    </g>\n                  </svg>\n                </td>\n              </tr>\n              <tr>\n                <td onclick=\"select_dancers([&quot;4m&quot;])\">4m</td>\n                <td onclick=\"formation_onclick\">Dancer(4, Guy())</td>\n                <td>0</td>\n                <td>1//4</td>\n                <td>1.0</td>\n                <td>4.0</td>\n                <td>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"70.000 10.000 20.000 20.000\" width=\"20.0\" height=\"20.0\">\n                    <g>\n                      <use href=\"../dancer_symbols.svg#Guy\" transform=\"rotate(  0 80.00 20.00)\" x=\"80.0\" y=\"20.0\" width=\"20\" height=\"20\" class=\"dancer couple4\"/>\n                    </g>\n                  </svg>\n                </td>\n              </tr>\n              <tr>\n                <td onclick=\"select_dancers([&quot;4f&quot;])\">4f</td>\n                <td onclick=\"formation_onclick\">Dancer(4, Gal())</td>\n                <td>0</td>\n                <td>1//4</td>\n                <td>2.0</td>\n                <td>4.0</td>\n                <td>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"70.000 30.000 20.000 20.000\" width=\"20.0\" height=\"20.0\">\n                    <g>\n                      <use href=\"../dancer_symbols.svg#Gal\" transform=\"rotate(  0 80.00 40.00)\" x=\"80.0\" y=\"40.0\" width=\"20\" height=\"20\" class=\"dancer couple4\"/>\n                    </g>\n                  </svg>\n                </td>\n              </tr>\n            </tbody>\n          </thead>\n        </table>\n      </div>\n    </div>\n    <div>\n      <svg id=\"floor\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"10.000 10.000 80.000 40.000\" width=\"80.0\" height=\"40.0\">\n        <g>\n          <use id=\"4m\" href=\"../dancer_symbols.svg#Guy\" transform=\"rotate(  0 80.00 20.00)\" x=\"80.0\" y=\"20.0\" width=\"20\" height=\"20\" class=\"dancer couple4\"/>\n          <use id=\"4f\" href=\"../dancer_symbols.svg#Gal\" transform=\"rotate(  0 80.00 40.00)\" x=\"80.0\" y=\"40.0\" width=\"20\" height=\"20\" class=\"dancer couple4\"/>\n          <use id=\"3m\" href=\"../dancer_symbols.svg#Guy\" transform=\"rotate(  0 60.00 20.00)\" x=\"60.0\" y=\"20.0\" width=\"20\" height=\"20\" class=\"dancer couple3\"/>\n          <use id=\"3f\" href=\"../dancer_symbols.svg#Gal\" transform=\"rotate(  0 60.00 40.00)\" x=\"60.0\" y=\"40.0\" width=\"20\" height=\"20\" class=\"dancer couple3\"/>\n          <use id=\"1m\" href=\"../dancer_symbols.svg#Guy\" transform=\"rotate(-180 20.00 40.00)\" x=\"20.0\" y=\"40.0\" width=\"20\" height=\"20\" class=\"dancer couple1\"/>\n          <use id=\"1f\" href=\"../dancer_symbols.svg#Gal\" transform=\"rotate(-180 20.00 20.00)\" x=\"20.0\" y=\"20.0\" width=\"20\" height=\"20\" class=\"dancer couple1\"/>\n          <use id=\"2m\" href=\"../dancer_symbols.svg#Guy\" transform=\"rotate(-180 40.00 40.00)\" x=\"40.0\" y=\"40.0\" width=\"20\" height=\"20\" class=\"dancer couple2\"/>\n          <use id=\"2f\" href=\"../dancer_symbols.svg#Gal\" transform=\"rotate(-180 40.00 20.00)\" x=\"40.0\" y=\"20.0\" width=\"20\" height=\"20\" class=\"dancer couple2\"/>\n        </g>\n      </svg>\n    </div>\n    <div>\n      <h2>Inferred Formations</h2>\n      <ul>\n        <li>\n          BackToBack\n          <ul>\n            <li onclick=\"select_dancers([&quot;3f&quot;, &quot;2m&quot;])\">BackToBack-3f-2m</li>\n            <li onclick=\"select_dancers([&quot;3m&quot;, &quot;2f&quot;])\">BackToBack-3m-2f</li>\n          </ul>\n        </li>\n        <li>\n          BackToBackCouples\n          <ul>\n            <li onclick=\"select_dancers([&quot;3m&quot;, &quot;3f&quot;, &quot;2m&quot;, &quot;2f&quot;])\">BackToBackCouples-3m-3f-2m-2f</li>\n          </ul>\n        </li>\n        <li>\n          CompletedDoublePassThru\n          <ul>\n            <li onclick=\"select_dancers([&quot;4m&quot;, &quot;4f&quot;, &quot;3m&quot;, &quot;3f&quot;, &quot;1m&quot;, &quot;1f&quot;, &quot;2m&quot;, &quot;2f&quot;])\">CompletedDoublePassThru-4m-4f-3m-3f-1m-1f-2m-2f</li>\n          </ul>\n        </li>\n        <li>\n          Couple\n          <ul>\n            <li onclick=\"select_dancers([&quot;1m&quot;, &quot;1f&quot;])\">Couple-1m-1f</li>\n            <li onclick=\"select_dancers([&quot;2m&quot;, &quot;2f&quot;])\">Couple-2m-2f</li>\n            <li onclick=\"select_dancers([&quot;3m&quot;, &quot;3f&quot;])\">Couple-3m-3f</li>\n            <li onclick=\"select_dancers([&quot;4m&quot;, &quot;4f&quot;])\">Couple-4m-4f</li>\n          </ul>\n        </li>\n        <li>\n          DancerState\n          <ul>\n            <li onclick=\"select_dancers([&quot;1f&quot;])\">1f</li>\n            <li onclick=\"select_dancers([&quot;1m&quot;])\">1m</li>\n            <li onclick=\"select_dancers([&quot;2f&quot;])\">2f</li>\n            <li onclick=\"select_dancers([&quot;2m&quot;])\">2m</li>\n            <li onclick=\"select_dancers([&quot;3f&quot;])\">3f</li>\n            <li onclick=\"select_dancers([&quot;3m&quot;])\">3m</li>\n            <li onclick=\"select_dancers([&quot;4f&quot;])\">4f</li>\n            <li onclick=\"select_dancers([&quot;4m&quot;])\">4m</li>\n          </ul>\n        </li>\n        <li>\n          Tandem\n          <ul>\n            <li onclick=\"select_dancers([&quot;1f&quot;, &quot;2f&quot;])\">Tandem-1f-2f</li>\n            <li onclick=\"select_dancers([&quot;1m&quot;, &quot;2m&quot;])\">Tandem-1m-2m</li>\n            <li onclick=\"select_dancers([&quot;4f&quot;, &quot;3f&quot;])\">Tandem-4f-3f</li>\n            <li onclick=\"select_dancers([&quot;4m&quot;, &quot;3m&quot;])\">Tandem-4m-3m</li>\n          </ul>\n        </li>\n        <li>\n          TandemCouples\n          <ul>\n            <li onclick=\"select_dancers([&quot;1m&quot;, &quot;1f&quot;, &quot;2m&quot;, &quot;2f&quot;])\">TandemCouples-1m-1f-2m-2f</li>\n            <li onclick=\"select_dancers([&quot;4m&quot;, &quot;4f&quot;, &quot;3m&quot;, &quot;3f&quot;])\">TandemCouples-4m-4f-3m-3f</li>\n          </ul>\n        </li>\n      </ul>\n    </div>\n  </body>\n</html>","category":"page"},{"location":"formation_drawings/FaceToFace.html","page":"-","title":"-","text":"<html>\n  <head>\n    <meta charset=\"utf-8\"/>\n    <title>FaceToFace</title>\n    <script type=\"text/javascript\" src=\"../dancer_selection.js\"></script>\n    <style>\n      \n\n      svg {\n    background-color: \"gray\";\n}\ntable {\n    empty-cells: show;\n}\n.DancerState-table th {\n    text-align: center;\n    margin-left: 8em;\n    margin-right: 8em;\n}\n.DancerState-table td {\n    text-align: center;\n    margin-left: 8em;\n    margin-right: 8em;\n}\n.DirectionDot {\n    stroke: black;\n    fill: black;\n}\n\n      \n.couple1swatch {\n    color: rgb(255 0 0);\n}\n.couple1 {\n    stroke: black;\n    fill: rgb(255 0 0)\n}\n      \n\n    </style>\n  </head>\n  <body>\n    <h1>FaceToFace</h1>\n    <div>\n      <h2>Dancer Location and Facing Direction</h2>\n      <div class=\"DancerState-table\">\n        <table>\n          <thead>\n            <tr>\n              <th>id</th>\n              <th>dancer</th>\n              <th>time</th>\n              <th>direction</th>\n              <th>down</th>\n              <th>left</th>\n              <th>symbol</th>\n            </tr>\n            <tbody>\n              <tr>\n                <td onclick=\"select_dancers([&quot;1m&quot;])\">1m</td>\n                <td onclick=\"formation_onclick\">Dancer(1, Guy())</td>\n                <td>0</td>\n                <td>1//4</td>\n                <td>1.0</td>\n                <td>1.0</td>\n                <td>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"10.000 10.000 20.000 20.000\" width=\"20.0\" height=\"20.0\">\n                    <g>\n                      <use href=\"../dancer_symbols.svg#Guy\" transform=\"rotate(  0 20.00 20.00)\" x=\"20.0\" y=\"20.0\" width=\"20\" height=\"20\" class=\"dancer couple1\"/>\n                    </g>\n                  </svg>\n                </td>\n              </tr>\n              <tr>\n                <td onclick=\"select_dancers([&quot;1f&quot;])\">1f</td>\n                <td onclick=\"formation_onclick\">Dancer(1, Gal())</td>\n                <td>0</td>\n                <td>3//4</td>\n                <td>1.0</td>\n                <td>2.0</td>\n                <td>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"30.000 10.000 20.000 20.000\" width=\"20.0\" height=\"20.0\">\n                    <g>\n                      <use href=\"../dancer_symbols.svg#Gal\" transform=\"rotate(-180 40.00 20.00)\" x=\"40.0\" y=\"20.0\" width=\"20\" height=\"20\" class=\"dancer couple1\"/>\n                    </g>\n                  </svg>\n                </td>\n              </tr>\n            </tbody>\n          </thead>\n        </table>\n      </div>\n    </div>\n    <div>\n      <svg id=\"floor\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"10.000 10.000 40.000 20.000\" width=\"40.0\" height=\"20.0\">\n        <g>\n          <use id=\"1m\" href=\"../dancer_symbols.svg#Guy\" transform=\"rotate(  0 20.00 20.00)\" x=\"20.0\" y=\"20.0\" width=\"20\" height=\"20\" class=\"dancer couple1\"/>\n          <use id=\"1f\" href=\"../dancer_symbols.svg#Gal\" transform=\"rotate(-180 40.00 20.00)\" x=\"40.0\" y=\"20.0\" width=\"20\" height=\"20\" class=\"dancer couple1\"/>\n        </g>\n      </svg>\n    </div>\n    <div>\n      <h2>Inferred Formations</h2>\n      <ul>\n        <li>\n          DancerState\n          <ul>\n            <li onclick=\"select_dancers([&quot;1f&quot;])\">1f</li>\n            <li onclick=\"select_dancers([&quot;1m&quot;])\">1m</li>\n          </ul>\n        </li>\n        <li>\n          FaceToFace\n          <ul>\n            <li onclick=\"select_dancers([&quot;1m&quot;, &quot;1f&quot;])\">FaceToFace-1m-1f</li>\n          </ul>\n        </li>\n      </ul>\n    </div>\n  </body>\n</html>","category":"page"},{"location":"definitions.html#Definitions","page":"Definitions","title":"Definitions","text":"","category":"section"},{"location":"definitions.html","page":"Definitions","title":"Definitions","text":"Modules = [SquareDanceReasoning]","category":"page"},{"location":"definitions.html#SquareDanceReasoning.COUPLE_DISTANCE","page":"Definitions","title":"SquareDanceReasoning.COUPLE_DISTANCE","text":"COUPLE_DISTANCE is the distance between (the center reference points of) two dancers standing side by side, face to face, or back to back.\n\n\n\n\n\n","category":"constant"},{"location":"definitions.html#SquareDanceReasoning.FULL_CIRCLE","page":"Definitions","title":"SquareDanceReasoning.FULL_CIRCLE","text":"FULL_CIRCLE represents a change in direction of 360 degrees.\n\n\n\n\n\n","category":"constant"},{"location":"definitions.html#SquareDanceReasoning.AfterEightChainOne","page":"Definitions","title":"SquareDanceReasoning.AfterEightChainOne","text":"AfterEightChainOne is a formation of eight dancers (four couples) lined up, and is the starting formation for the call \"trade by\".  It can result from doing a \"centers pass thru\" from a BeforeEightChain formation.\n\n←→←→\n←→←→\n\n\n\n\n\n","category":"type"},{"location":"definitions.html#SquareDanceReasoning.AfterEightChainOneRule","page":"Definitions","title":"SquareDanceReasoning.AfterEightChainOneRule","text":"AfterEightChainOneRule is the rule for recognizing AfterEightChainOne formations.\n\n\n\n\n\n","category":"type"},{"location":"definitions.html#SquareDanceReasoning.AllPresent","page":"Definitions","title":"SquareDanceReasoning.AllPresent","text":"AllPresent(::SDSquare)\n\nAllPresent is a fact that is asserted to the knowledgebase by SDSquareHasAttendanceRule when all of the Dancers in an SDSquare are present.\n\nIt can be used as a trigger for rules that depend on all Dancers having an associated DancerState.\n\n\n\n\n\n","category":"type"},{"location":"definitions.html#SquareDanceReasoning.AndRoll","page":"Definitions","title":"SquareDanceReasoning.AndRoll","text":"AndRoll(; role=EveryOne())\n\nCallerLab Plus call.\n\nTiming: CallerLab: 2.\n\n\n\n\n\n","category":"type"},{"location":"definitions.html#SquareDanceReasoning.Attendance","page":"Definitions","title":"SquareDanceReasoning.Attendance","text":"Attendance(::SDSquare)\n\nAttendane is a fact in the knowledgebase that leeps track of how many DancerStates in a square are present.\n\nThis is necessary because tests like encroached_on can only provide a correct result if all of the DanecerStates are available for consideration.\n\n\n\n\n\n","category":"type"},{"location":"definitions.html#SquareDanceReasoning.AttendanceRule","page":"Definitions","title":"SquareDanceReasoning.AttendanceRule","text":"AttendanceRule\n\nAttendanceRule is the rule that updated a Attendance as new DancerStates are asserted to the nowledgebase, and ultimately asserts AllPresent.\n\n\n\n\n\n","category":"type"},{"location":"definitions.html#SquareDanceReasoning.BackToBack","page":"Definitions","title":"SquareDanceReasoning.BackToBack","text":"BackToBack represents a formation of two dancers with their backs facing each other.\n\n\n\n\n\n","category":"type"},{"location":"definitions.html#SquareDanceReasoning.BackToBackCouples","page":"Definitions","title":"SquareDanceReasoning.BackToBackCouples","text":"BackToBackCouples is a formation that includes two Couple formations that have their backs to each other.\n\n\n\n\n\n","category":"type"},{"location":"definitions.html#SquareDanceReasoning.Balance","page":"Definitions","title":"SquareDanceReasoning.Balance","text":"Balance(; role=Everyone(), time=2)\n\nImplements the Balance square dance call, except that dancers just jiggle in place.  Maybe it should be renamed _Identify.\n\n\n\n\n\n","category":"type"},{"location":"definitions.html#SquareDanceReasoning.BeforeEightChain","page":"Definitions","title":"SquareDanceReasoning.BeforeEightChain","text":"BeforeEightChain is a formation of eight dancers (four couples) lined up, and is the starting formation for the \"eight chain thru\" call.  It can result from doing \"centers pass thru\" from a FacingTandemCouples formation.\n\n→←→←\n→←→←\n\n\n\n\n\n","category":"type"},{"location":"definitions.html#SquareDanceReasoning.BeforeEightChainRule","page":"Definitions","title":"SquareDanceReasoning.BeforeEightChainRule","text":"BeforeEightChainRule is the rule for recognizing BeforeEightChain formations.\n\n\n\n\n\n","category":"type"},{"location":"definitions.html#SquareDanceReasoning.Bounds","page":"Definitions","title":"SquareDanceReasoning.Bounds","text":"Bounds(dss::Vector{DancerState};\n                    margin = COUPLE_DISTANCE / 2)\n\nrepresents the bounding rectangle surrounding the specified DancerStates.  If margin is 0 then Bounds surrounds just the centers of the dancers.\n\nBy default, margin is COUPLE_DISTANCE / 2 so that Bounds describes the space actually occupied by the dancers.\n\n\n\n\n\n","category":"type"},{"location":"definitions.html#SquareDanceReasoning.BoxOfFour","page":"Definitions","title":"SquareDanceReasoning.BoxOfFour","text":"BoxOfFour is the abstract supertype for RHBoxOfFour and LHBoxOfFour.\n\n\n\n\n\n","category":"type"},{"location":"definitions.html#SquareDanceReasoning.BoxOfFourRule","page":"Definitions","title":"SquareDanceReasoning.BoxOfFourRule","text":"BoxOfFourRule is the rule for identifying right or left handed \"box circulate\" formations.\n\n\n\n\n\n","category":"type"},{"location":"definitions.html#SquareDanceReasoning.CSSKeyframesAnimation","page":"Definitions","title":"SquareDanceReasoning.CSSKeyframesAnimation","text":"CSSKeyfraneomesAnimation\n\nAs the method argument to animate, uses the CSS keyframes to animte SVG.\n\nIn my, and others's experience,  can't get rotation to work.\n\n\n\n\n\n","category":"type"},{"location":"definitions.html#SquareDanceReasoning.CallEngineDebugContext","page":"Definitions","title":"SquareDanceReasoning.CallEngineDebugContext","text":"CallEngineDebugContext(source_location, relpath, token)\n\nA CallEngineDebugContext can be passed to some functions via the dbgctx keyword argument to provide debugging support.\n\nDo not use the constructor directly, instead use @CallEngineDebugContext, which will automatically provide a source location.\n\n\n\n\n\n","category":"type"},{"location":"definitions.html#SquareDanceReasoning.CallSchedule","page":"Definitions","title":"SquareDanceReasoning.CallSchedule","text":"CallSchedule()\nCallSchedule(now)\n\nCreates and returns an empty square dance call schedule, either starting at time 0 or at the specified time.\n\nUse schedule to add a new entry to the schedule.\n\n\n\n\n\n","category":"type"},{"location":"definitions.html#SquareDanceReasoning.CanDoCall","page":"Definitions","title":"SquareDanceReasoning.CanDoCall","text":"CanDoCall(preference, call::SquareDanceCall, formation::SquareDanceFormation)\n\nCanDoCall represents that call can be performed from formation, and doing so has the specified preference.\n\n\n\n\n\n","category":"type"},{"location":"definitions.html#SquareDanceReasoning.CatchConflictingDancerStates","page":"Definitions","title":"SquareDanceReasoning.CatchConflictingDancerStates","text":"CatchConflictingDancerStates\n\nThrows an error if there are two different DancerStates that concern the same Dancer.\n\n\n\n\n\n","category":"type"},{"location":"definitions.html#SquareDanceReasoning.CircleOfEight","page":"Definitions","title":"SquareDanceReasoning.CircleOfEight","text":"CircleOfEight represents eight dancers in a circle facing inward.\n\n\n\n\n\n","category":"type"},{"location":"definitions.html#SquareDanceReasoning.CircleOfEightFormationRule","page":"Definitions","title":"SquareDanceReasoning.CircleOfEightFormationRule","text":"CircleOfEightFormationRule is the rule for recognizing eight dancers in a circle: CircleOfEight.\n\n\n\n\n\n","category":"type"},{"location":"definitions.html#SquareDanceReasoning.Collision","page":"Definitions","title":"SquareDanceReasoning.Collision","text":"Collision notes that two dancers are occupying the same space.\n\n\n\n\n\n","category":"type"},{"location":"definitions.html#SquareDanceReasoning.ColumnOfFour","page":"Definitions","title":"SquareDanceReasoning.ColumnOfFour","text":"ColumnOfFour(lead::Tandem, tail::Tandem, centers::Tandem)\n\nRepresents a column of four dancers, each facing the back of the dancer in front of them.\n\n\n\n\n\n","category":"type"},{"location":"definitions.html#SquareDanceReasoning.ColumnOfFourRule","page":"Definitions","title":"SquareDanceReasoning.ColumnOfFourRule","text":"ColumnOfFourRule is the rule for identifying ColumnOfFour formations.\n\n\n\n\n\n","category":"type"},{"location":"definitions.html#SquareDanceReasoning.CompletedDoublePassThru","page":"Definitions","title":"SquareDanceReasoning.CompletedDoublePassThru","text":"CompletedDoublePassThru is a formation of eight dancers (four couples) lined up, and is the ending formation for the call \"double pass thru\". It can result from doing a \"centers pass thru\" from a TradeBy formation.\n\n←←→→\n←←→→\n\n\n\n\n\n","category":"type"},{"location":"definitions.html#SquareDanceReasoning.CompletedDoublePassThruRule","page":"Definitions","title":"SquareDanceReasoning.CompletedDoublePassThruRule","text":"CompletedDoublePassThruRule is the rule for rtecognizing CompletedDoublePassThru formations.\n\n\n\n\n\n","category":"type"},{"location":"definitions.html#SquareDanceReasoning.Couple","page":"Definitions","title":"SquareDanceReasoning.Couple","text":"Couple(beau::DancerState, belle::DancerState)\n\nCouple represents a formation of two dancers both facing the same direction.\n\n\n\n\n\n","category":"type"},{"location":"definitions.html#SquareDanceReasoning.CoupleBoxRule","page":"Definitions","title":"SquareDanceReasoning.CoupleBoxRule","text":"CoupleBoxRule is the rule for identifying two couples arranged in a two by two box.\n\n\n\n\n\n","category":"type"},{"location":"definitions.html#SquareDanceReasoning.Dancer","page":"Definitions","title":"SquareDanceReasoning.Dancer","text":"Dancer(couple_number::Int, ::Gender)\n\nDancer represents a dancer.\n\n\n\n\n\n","category":"type"},{"location":"definitions.html#SquareDanceReasoning.DancerState","page":"Definitions","title":"SquareDanceReasoning.DancerState","text":"DancerState(dancer, time, direction, down, left)\nDancerState(previoous::DancerSTate, time, direction, down, left)\n\nrepresents the location and facing direction of a single dancer at a moment in time.\n\ntime is a number defining a temporal ordering.  It could represent a number of beats, for example.\n\nDancerState is also the single dancer SquareDanceFormation.\n\n\n\n\n\n","category":"type"},{"location":"definitions.html#SquareDanceReasoning.Dosado","page":"Definitions","title":"SquareDanceReasoning.Dosado","text":"Dosado(; role=Everyone(), handedness=RightHanded())\n\nCallerLab Basic1 call.\n\nTiming: Callerlab: 6, unless coming from and returnuing to a squared set, in which case 8.\n\n\n\n\n\n","category":"type"},{"location":"definitions.html#SquareDanceReasoning.EightDancerFormation","page":"Definitions","title":"SquareDanceReasoning.EightDancerFormation","text":"EightDancerFormation is the abstract supertype of all square dance formations involving eight dancers.\n\n\n\n\n\n","category":"type"},{"location":"definitions.html#SquareDanceReasoning.FaceLeft","page":"Definitions","title":"SquareDanceReasoning.FaceLeft","text":"FaceLeft(; role=Everyone(), time=2)\n\nCallerLab Basic 1 square dance call causing dancers to turn 1/4 to their left.  The timing defaults to 2 since, according to Taminations, two beats is the duration for QuarterIn and QuarterOut.\n\nTiming: CallerLab does not soecify timing.  Assume 1.  Can be specified as a parameter.\n\n\n\n\n\n","category":"type"},{"location":"definitions.html#SquareDanceReasoning.FaceRight","page":"Definitions","title":"SquareDanceReasoning.FaceRight","text":"FaceRight(; role=Everyone(), time=2)\n\nCallerLab Basic 1 square dance call causing dancers to turn 1/4 to their right.  The timing defaults to 2 since, according to Taminations, two beats is the duration for QuarterIn and QuarterOut.\n\nTiming: CallerLab does not soecify timing.  Assume 1.  Can be specified as a parameter.\n\n\n\n\n\n","category":"type"},{"location":"definitions.html#SquareDanceReasoning.FaceToFace","page":"Definitions","title":"SquareDanceReasoning.FaceToFace","text":"FaceToFace represents a formation of two dancers facing each other.\n\n\n\n\n\n","category":"type"},{"location":"definitions.html#SquareDanceReasoning.FacingCouples","page":"Definitions","title":"SquareDanceReasoning.FacingCouples","text":"FacingCouples is a formation that includes two Couple formations that are facing each other.\n\n\n\n\n\n","category":"type"},{"location":"definitions.html#SquareDanceReasoning.FacingTandemCouples","page":"Definitions","title":"SquareDanceReasoning.FacingTandemCouples","text":"FacingTandemCouples is a formation of eight dancers (four couples) lined up, and is the starting formation for the \"double pass thru\" call.\n\n→→←←\n→→←←\n\n\n\n\n\n","category":"type"},{"location":"definitions.html#SquareDanceReasoning.FacingTandemCouplesRule","page":"Definitions","title":"SquareDanceReasoning.FacingTandemCouplesRule","text":"FacingTandemCouplesRule is the rule for recognizing the FacingTandemCouples formation.\n\n\n\n\n\n","category":"type"},{"location":"definitions.html#SquareDanceReasoning.FormationContextRole","page":"Definitions","title":"SquareDanceReasoning.FormationContextRole","text":"FormationContextRole\n\nis the abstract supertype for square dance roles which are defined by a dancer's context in a particular formation.\n\n\n\n\n\n","category":"type"},{"location":"definitions.html#SquareDanceReasoning.FourDancerFormation","page":"Definitions","title":"SquareDanceReasoning.FourDancerFormation","text":"FourDancerFormation is the abstract supertype of all square dance formations involving four dancers.\n\n\n\n\n\n","category":"type"},{"location":"definitions.html#SquareDanceReasoning.Gal","page":"Definitions","title":"SquareDanceReasoning.Gal","text":"Gal()\n\nThe gal gender, represented by a circle in our SVG diagrams.\n\n\n\n\n\n","category":"type"},{"location":"definitions.html#SquareDanceReasoning.Gender","page":"Definitions","title":"SquareDanceReasoning.Gender","text":"Gender represents the gender of a dancer, which might be Guy, Gal or Unspecified.\n\nUnspecified exists for when we want to emphasize gender agnosticism in a diagram.\n\nGender equality: Guy() == Guy(), Gal() == Gal(), otherwise not equal.\n\nUse opposite to get the opposite gender.\n\n\n\n\n\n","category":"type"},{"location":"definitions.html#SquareDanceReasoning.Guy","page":"Definitions","title":"SquareDanceReasoning.Guy","text":"Guy()\n\nThe guy gender, represented by a square in our SVG diagrams.\n\n\n\n\n\n","category":"type"},{"location":"definitions.html#SquareDanceReasoning.Handedness","page":"Definitions","title":"SquareDanceReasoning.Handedness","text":"Handedness\n\nsquare dance formations have a handedness, one of RightHanded(), LeftHanded() or NoHandedness().\n\nopposite of a handedness returns the other handedness. NoHandednessis its own opposite.\n\n\n\n\n\n","category":"type"},{"location":"definitions.html#SquareDanceReasoning.Hinge","page":"Definitions","title":"SquareDanceReasoning.Hinge","text":"Hinge(; role=Everyone(), tile=2)\n\nCallerLab Mainstream call.\n\nTiming: CallerLab: 2.\n\n\n\n\n\n","category":"type"},{"location":"definitions.html#SquareDanceReasoning.LHBoxOfFour","page":"Definitions","title":"SquareDanceReasoning.LHBoxOfFour","text":"LHBoxOfFour represents a left handed \"box circulate\" formation.\n\n\n\n\n\n","category":"type"},{"location":"definitions.html#SquareDanceReasoning.LHMiniWave","page":"Definitions","title":"SquareDanceReasoning.LHMiniWave","text":"LHMiniWave represents a left handed wave of two dancers.\n\n\n\n\n\n","category":"type"},{"location":"definitions.html#SquareDanceReasoning.LHWaveOfEight","page":"Definitions","title":"SquareDanceReasoning.LHWaveOfEight","text":"LHWaveOfEight represents a right handed wave of eight dancers.\n\n\n\n\n\n","category":"type"},{"location":"definitions.html#SquareDanceReasoning.LHWaveOfFour","page":"Definitions","title":"SquareDanceReasoning.LHWaveOfFour","text":"LHWaveOfFour represents a left handed wave of four dancers.\n\n\n\n\n\n","category":"type"},{"location":"definitions.html#SquareDanceReasoning.LineOfFour","page":"Definitions","title":"SquareDanceReasoning.LineOfFour","text":"LineOfFour represents a line of four dancerrs all facing in the same direction.\n\n\n\n\n\n","category":"type"},{"location":"definitions.html#SquareDanceReasoning.LineOfFourRule","page":"Definitions","title":"SquareDanceReasoning.LineOfFourRule","text":"LineOfFourRule is the rule for iderntifying a LineOfFour formation.\n\n\n\n\n\n","category":"type"},{"location":"definitions.html#SquareDanceReasoning.MiniWave","page":"Definitions","title":"SquareDanceReasoning.MiniWave","text":"MiniWave is the abstract supertype for all two dancer waves.\n\n\n\n\n\n","category":"type"},{"location":"definitions.html#SquareDanceReasoning.NQuarterTag","page":"Definitions","title":"SquareDanceReasoning.NQuarterTag","text":"NQuarterTag is the abstract supertype for QuarterTag and ThreeQuarterTag formations.\n\n\n\n\n\n","category":"type"},{"location":"definitions.html#SquareDanceReasoning.ObverseRole","page":"Definitions","title":"SquareDanceReasoning.ObverseRole","text":"ObverseRole(::role)\n\nFor roles like CoupleNumbers or DesignatedDancers we can't determine the obverse until we know all of the dancers involved.  This serves as a \"place holder\" until we can determine which dancers have the role that is obverse to the specified Role.\n\n\n\n\n\n","category":"type"},{"location":"definitions.html#SquareDanceReasoning.OneByFourFormation","page":"Definitions","title":"SquareDanceReasoning.OneByFourFormation","text":"OneByFourFormation is the abstract supertype for 1 by 4 \"lines\". Concrete supertypes are expected to have a centers field.\n\n\n\n\n\n","category":"type"},{"location":"definitions.html#SquareDanceReasoning.OriginalPartnerRule","page":"Definitions","title":"SquareDanceReasoning.OriginalPartnerRule","text":"OriginalPartnerRule is a rule that identifies the original partners of a square dance set.\n\n\n\n\n\n","category":"type"},{"location":"definitions.html#SquareDanceReasoning.OriginalPartners","page":"Definitions","title":"SquareDanceReasoning.OriginalPartners","text":"OriginalPartners(guy::Dancer, gal::Dancer)\n\nOriginalPartners is a fact in the knowledge base that identifies the original partners in a square.\n\n\n\n\n\n","category":"type"},{"location":"definitions.html#SquareDanceReasoning.PassThru","page":"Definitions","title":"SquareDanceReasoning.PassThru","text":"PassThru(; role=Everyone())\n\nCallerLab Basic 1 call.\n\nTiming: CallerLab: 2.\n\nPassThru is only proper from FaceToFace or from RHMiniWave (because of the \"Icean Wave Rule\").  For LHMiniWave, use StepThru.\n\n\n\n\n\n","category":"type"},{"location":"definitions.html#SquareDanceReasoning.PullBy","page":"Definitions","title":"SquareDanceReasoning.PullBy","text":"PullBy(; role=Everyone(), handedness=RightHanded())\n\nCallerLab Basic 1 call.\n\nTiming: CallerLab doesn't specify timing, but since the timing for PassThru is 2, assume the same for PullBy.\n\n\n\n\n\n","category":"type"},{"location":"definitions.html#SquareDanceReasoning.PureSVGAnimation","page":"Definitions","title":"SquareDanceReasoning.PureSVGAnimation","text":"PureSVGAnimation\n\nAs the method argument to animate, use pure SVG animate animation. Various sources suggest that SVG animate is deprecated, but it works.\n\n\n\n\n\n","category":"type"},{"location":"definitions.html#SquareDanceReasoning.QTWCT","page":"Definitions","title":"SquareDanceReasoning.QTWCT","text":"QTWCT is an intermediate result to sypport the rules for recognizing QuarterTag and ThreeQuarterTag.\n\n\n\n\n\n","category":"type"},{"location":"definitions.html#SquareDanceReasoning.QTWCTRule","page":"Definitions","title":"SquareDanceReasoning.QTWCTRule","text":"QTWCTRule is a rule that provides a precursor fact for QuarterTagRule and ThreeQuarterTagRule.\n\n\n\n\n\n","category":"type"},{"location":"definitions.html#SquareDanceReasoning.QuarterIn","page":"Definitions","title":"SquareDanceReasoning.QuarterIn","text":"QuarterIn(; role=Everyone())\n\nCalllerLab Advanced 1 call.\n\nTiming: CallerLab: 2.\n\n\n\n\n\n","category":"type"},{"location":"definitions.html#SquareDanceReasoning.QuarterOut","page":"Definitions","title":"SquareDanceReasoning.QuarterOut","text":"QuarterOut(; role=Everyone())\n\nCalllerLab Advanced 1 call.\n\nTiming: CallerLab: 2.\n\n\n\n\n\n","category":"type"},{"location":"definitions.html#SquareDanceReasoning.QuarterTag","page":"Definitions","title":"SquareDanceReasoning.QuarterTag","text":"QuarterTag represents a quarter tag formation.\n\n\n\n\n\n","category":"type"},{"location":"definitions.html#SquareDanceReasoning.QuarterTagRule","page":"Definitions","title":"SquareDanceReasoning.QuarterTagRule","text":"QuarterTagRule is the rule for identifying QuarterTag formations.\n\n\n\n\n\n","category":"type"},{"location":"definitions.html#SquareDanceReasoning.RHBoxOfFour","page":"Definitions","title":"SquareDanceReasoning.RHBoxOfFour","text":"RHBoxOfFour represents a right handed \"box circulate\" formation.\n\n\n\n\n\n","category":"type"},{"location":"definitions.html#SquareDanceReasoning.RHMiniWave","page":"Definitions","title":"SquareDanceReasoning.RHMiniWave","text":"RHMiniWave represents a right handed wave of two dancers.\n\n\n\n\n\n","category":"type"},{"location":"definitions.html#SquareDanceReasoning.RHWaveOfEight","page":"Definitions","title":"SquareDanceReasoning.RHWaveOfEight","text":"RHWaveOfEight represents a right handed wave of eight dancers.\n\n\n\n\n\n","category":"type"},{"location":"definitions.html#SquareDanceReasoning.RHWaveOfFour","page":"Definitions","title":"SquareDanceReasoning.RHWaveOfFour","text":"RHWaveOfFour represents a right handed wave of four dancers.\n\n\n\n\n\n","category":"type"},{"location":"definitions.html#SquareDanceReasoning.Respirator","page":"Definitions","title":"SquareDanceReasoning.Respirator","text":"Respirator(::Vector{DancerState))\n\nRespirator is a device for assisting breating.  It performbs the bookkeeping associed with tracking the current location of each dancer as adjusted by the breathing algorithm without creating new DancerStates.\n\n\n\n\n\n","category":"type"},{"location":"definitions.html#SquareDanceReasoning.Role","page":"Definitions","title":"SquareDanceReasoning.Role","text":"Role\n\nis the abstract supertype for all square dance role types.\n\n\n\n\n\n","category":"type"},{"location":"definitions.html#SquareDanceReasoning.SDSquare","page":"Definitions","title":"SquareDanceReasoning.SDSquare","text":"SDSquare(dancers)\n\nSDSquare represents the dancers in a square.\n\nmake_square(number_of_dancers) will return an SDSquare.\n\nSDSquare is a fact that can be asserted to the knowledge base to inform it that the dancers form a square.\n\nother_dancers(::SDSquare, dancers) returns the set of Dancers that are in the SDSquare but are not in dancers.\n\n\n\n\n\n","category":"type"},{"location":"definitions.html#SquareDanceReasoning.SDSquareHasAttendanceRule","page":"Definitions","title":"SquareDanceReasoning.SDSquareHasAttendanceRule","text":"SquareDanceFormationRule\n\nA rule that ensures that there is an Attendance fact for every SDSquare fact.\n\n\n\n\n\n","category":"type"},{"location":"definitions.html#SquareDanceReasoning.SquareDanceCall","page":"Definitions","title":"SquareDanceReasoning.SquareDanceCall","text":"SquareDanceCall\n\nFor each call, a struct is defined that is a subtype of SquareDanceCall.\n\nFor each call and each formation it can be done from, a can_do_from method should be defined.  If the \"Ocean Wave Rule\" applies, then a can_do_from method should be defined for that case.\n\nFor each call and each formation it can be performed from, either a perform or an expand_parts method should be defined.\n\n\n\n\n\n","category":"type"},{"location":"definitions.html#SquareDanceReasoning.SquareDanceFormation","page":"Definitions","title":"SquareDanceReasoning.SquareDanceFormation","text":"SquareDanceFormation is the abstract supertype of all square dance formations.\n\nEach concrete subtype can be callled to get an iterator over all of the DancerStates of the formation.\n\n\n\n\n\n","category":"type"},{"location":"definitions.html#SquareDanceReasoning.SquareDanceFormationRule","page":"Definitions","title":"SquareDanceReasoning.SquareDanceFormationRule","text":"SquareDanceFormationRule\n\nthe group for all rules relating to square dance formations.\n\n\n\n\n\n","category":"type"},{"location":"definitions.html#SquareDanceReasoning.SquareDanceRule","page":"Definitions","title":"SquareDanceReasoning.SquareDanceRule","text":"SquareDanceRule is the abstract supertype for all rules defined in this package.\n\n\n\n\n\n","category":"type"},{"location":"definitions.html#SquareDanceReasoning.SquareHasDancers","page":"Definitions","title":"SquareDanceReasoning.SquareHasDancers","text":"SquareHasDancers is a convenience rule for asserting the Dancers from a SDSquare.\n\n\n\n\n\n","category":"type"},{"location":"definitions.html#SquareDanceReasoning.SquareThru","page":"Definitions","title":"SquareDanceReasoning.SquareThru","text":"SquareThru(; role, handedness, count)\n\nCallerLab Basic 1 square dance call.\n\nTiming: count=1: 2, count=2: 5, count=3: 7 or 8, count=4: 10.\n\n\n\n\n\n","category":"type"},{"location":"definitions.html#SquareDanceReasoning.SquaredSet","page":"Definitions","title":"SquareDanceReasoning.SquaredSet","text":"SquaredSet(couples1::FacingCouples, couples2::FacingCouples)\n\nSquaredSet represents a squared set of eight dancers.\n\n\n\n\n\n","category":"type"},{"location":"definitions.html#SquareDanceReasoning.SquaredSetFormationRule","page":"Definitions","title":"SquareDanceReasoning.SquaredSetFormationRule","text":"SquaredSetFormationRule is the rule for identifying a SquaredSet.\n\n\n\n\n\n","category":"type"},{"location":"definitions.html#SquareDanceReasoning.Star","page":"Definitions","title":"SquareDanceReasoning.Star","text":"Star represents four dancers holding either right or left hands together in their center.  All are facing either clockwise or counterclockwise.\n\n\n\n\n\n","category":"type"},{"location":"definitions.html#SquareDanceReasoning.StarRule","page":"Definitions","title":"SquareDanceReasoning.StarRule","text":"StarRule is the rule for recognizing right or left handed stars.\n\n\n\n\n\n","category":"type"},{"location":"definitions.html#SquareDanceReasoning.StepThru","page":"Definitions","title":"SquareDanceReasoning.StepThru","text":"StepThru(; role=Everyone())\n\nCallerLab Basic 1 square dance call that goes from MiniWave to BackToBack.\n\nTiming: CallerLab doesn't spoecify a timing, but since the specified timing for PassThru is 2 and StepThro must be smpler, assume 1.\n\n\n\n\n\n","category":"type"},{"location":"definitions.html#SquareDanceReasoning.StepToAWave","page":"Definitions","title":"SquareDanceReasoning.StepToAWave","text":"StepToAWave(; role=Everyone(), handedness=RightHanded())\n\nCallerLab Basic 2 square dance call that goes from FaceToFace to a MiniWave of the specified handedness.  The first half of PassThru.\n\nTiming: 2.\n\n\n\n\n\n","category":"type"},{"location":"definitions.html#SquareDanceReasoning.Tandem","page":"Definitions","title":"SquareDanceReasoning.Tandem","text":"Tandem(leaderLLDancerState, trailer::DancerState)\n\nTandem repreents a formation of two dancers where the trailer is facing the back of the leader.\n\n\n\n\n\n","category":"type"},{"location":"definitions.html#SquareDanceReasoning.TandemCouples","page":"Definitions","title":"SquareDanceReasoning.TandemCouples","text":"TandemCouples is a formation for two Couples in Tandem.\n\n\n\n\n\n","category":"type"},{"location":"definitions.html#SquareDanceReasoning.TemporalFact","page":"Definitions","title":"SquareDanceReasoning.TemporalFact","text":"TemporalFact\n\nAbstract supertype for any facts that have a temporal dependence.\n\n\n\n\n\n","category":"type"},{"location":"definitions.html#SquareDanceReasoning.ThreeQuarterTag","page":"Definitions","title":"SquareDanceReasoning.ThreeQuarterTag","text":"ThreeQuarterTag represents a three quarter tag formation.\n\n\n\n\n\n","category":"type"},{"location":"definitions.html#SquareDanceReasoning.ThreeQuarterTagRule","page":"Definitions","title":"SquareDanceReasoning.ThreeQuarterTagRule","text":"ThreeQuarterTagRule is the rule for identifying ThreeQuarterTag formations.\n\n\n\n\n\n","category":"type"},{"location":"definitions.html#SquareDanceReasoning.TimeBounds","page":"Definitions","title":"SquareDanceReasoning.TimeBounds","text":"TimeBounds()\n\nReturns an empty TimeBounds interval.\n\n\n\n\n\n","category":"type"},{"location":"definitions.html#SquareDanceReasoning.TwoDancerFormation","page":"Definitions","title":"SquareDanceReasoning.TwoDancerFormation","text":"TwoDancerFormation is the abstract supertype of all square dance formations involving two dancers.\n\n\n\n\n\n","category":"type"},{"location":"definitions.html#SquareDanceReasoning.TwoDancerFormationsRule","page":"Definitions","title":"SquareDanceReasoning.TwoDancerFormationsRule","text":"TwoDancerFormationsRule\n\nTwoDancerFormationsRule is the rule for identifying all two dancer formations: Couple, FaceToFace, BackToBack, Tandem, RHMiniWave, and LHMiniWave.\n\n\n\n\n\n","category":"type"},{"location":"definitions.html#SquareDanceReasoning.TwoFacedLine","page":"Definitions","title":"SquareDanceReasoning.TwoFacedLine","text":"TwoFacedLine represents a two faced line formation.\n\n\n\n\n\n","category":"type"},{"location":"definitions.html#SquareDanceReasoning.TwoFacedLineRule","page":"Definitions","title":"SquareDanceReasoning.TwoFacedLineRule","text":"TwoFacedLineRule is the rule for identifying TwoFacedLine formations.\n\n\n\n\n\n","category":"type"},{"location":"definitions.html#SquareDanceReasoning.UTurnBack","page":"Definitions","title":"SquareDanceReasoning.UTurnBack","text":"UTurnBack(; role=Everyone())\n\nCallerLab Basic1 call.\n\nTiming: CallerLab: 2.\n\n\n\n\n\n","category":"type"},{"location":"definitions.html#SquareDanceReasoning.Unspecified","page":"Definitions","title":"SquareDanceReasoning.Unspecified","text":"Unspecified\n\nUnspecified gender is provided just for gender neutral diagraming, where it appears as a square with rounded corners.  It is not supported widely through this codebase.  For example original partner and original corner are do not support it.\n\nNote that \n\nUnspecified() != Unspecified()\n\nand\n\nopposite(Unspecified())\n\nreturns Unspecified().\n\n\n\n\n\n","category":"type"},{"location":"definitions.html#SquareDanceReasoning.WaveOfEight","page":"Definitions","title":"SquareDanceReasoning.WaveOfEight","text":"WaveOfEight is the abstract supertype for right and left handed waves of eight dancers.\n\n\n\n\n\n","category":"type"},{"location":"definitions.html#SquareDanceReasoning.WaveOfEightRule","page":"Definitions","title":"SquareDanceReasoning.WaveOfEightRule","text":"WaveOfEightRule is the rule for identifying waves of eight dancers: RHWaveOfEight and LHWaveOfEight.\n\n\n\n\n\n","category":"type"},{"location":"definitions.html#SquareDanceReasoning.WaveOfFour","page":"Definitions","title":"SquareDanceReasoning.WaveOfFour","text":"WaveOfFour is the abstract supertype for right and left handed waves of four dancers.\n\n\n\n\n\n","category":"type"},{"location":"definitions.html#SquareDanceReasoning.WaveOfFourRule","page":"Definitions","title":"SquareDanceReasoning.WaveOfFourRule","text":"WaveOfFourRule is the rule for identifying waves of four dancers: RHWaveOfFour and LHWaveOfFour.\n\n\n\n\n\n","category":"type"},{"location":"definitions.html#SquareDanceReasoning._BackToAWave","page":"Definitions","title":"SquareDanceReasoning._BackToAWave","text":"_BackToAWave, handedness(; role=Everyone(), handedness=RightHanded())\n\nPrimitive square dance call that goes from BackToBack to a MiniWave of the specified handedness. The third quarter of Dosado.\n\nTiming: 1.\n\n\n\n\n\n","category":"type"},{"location":"definitions.html#SquareDanceReasoning._GenderedRoll","page":"Definitions","title":"SquareDanceReasoning._GenderedRoll","text":"_GenderedRoll(; role=Everyone(), time=2)\n\nThe second part of calls like StarThru and SlideThru.  Guy turn one quarter to the right, Gal turn one quarter to the left.\n\nTiming: as specified in the parameter.  Defaults to 2.  CallerLab says the timing for StarThru is 4, so thisseems reasonable.\n\n\n\n\n\n","category":"type"},{"location":"definitions.html#SquareDanceReasoning._Rest","page":"Definitions","title":"SquareDanceReasoning._Rest","text":"_Rest(; role=Everyone(), time)\n\nPrimitive square dance call causing dancers to rest in place for the specified time.\n\nTiming: as specified in the parameter.\n\n\n\n\n\n","category":"type"},{"location":"definitions.html#SquareDanceReasoning._UnStepToAWave","page":"Definitions","title":"SquareDanceReasoning._UnStepToAWave","text":"_UnStepToAWave(; role=Everyone())\n\nPrimitive square dance call that goes from a MiniWave to FaceToFace. The first half of PassThru.\n\nTiming: 2. Persimably should have the same timing as StepToAWave\n\n\n\n\n\n","category":"type"},{"location":"definitions.html#Base.isless-Tuple{Dancer, Dancer}","page":"Definitions","title":"Base.isless","text":"Base.isless(::Dancer, ::Dancer)::Bool\n\nProvides a total ordering for dancers.\n\n\n\n\n\n","category":"method"},{"location":"definitions.html#SquareDanceReasoning.advance_schedule_by-Tuple{CallSchedule, Any}","page":"Definitions","title":"SquareDanceReasoning.advance_schedule_by","text":"advance_schedule_by(sched::CallSchedule, delta)\n\nMove every entry in the schedule forward by delta.\n\n\n\n\n\n","category":"method"},{"location":"definitions.html#SquareDanceReasoning.animate-Tuple{SquareDanceReasoning.CSSKeyframesAnimation, Any, Vector{DancerState}, Any}","page":"Definitions","title":"SquareDanceReasoning.animate","text":"animate(method::AnimationMethod, output_file, dancer_states, bpm)\n\nReturns an SVG document fragment that animates the motion of the Dancers in dancer_states.\n\nIf output_file ends in \".svg\" then the document fragment is written to that file. output_file is still needed so that the relative path to the dancer symbols file canbe determined.\n\ndancer_states should have the most recent DancerState for each Dancer.  the previous property of each DancerState is used to determine the Dancer's motion.\n\nbpm or \"beats per minute\" provides a time scale for the animation. Assuming each unit of time in a DancerState is a single beat, bpm is used to calculate the total duration of one cycle through the animation.\n\n\n\n\n\n","category":"method"},{"location":"definitions.html#SquareDanceReasoning.as_text","page":"Definitions","title":"SquareDanceReasoning.as_text","text":"as_text(call)\n\nReturn a textual description of the call as a String.\n\n\n\n\n\n","category":"function"},{"location":"definitions.html#SquareDanceReasoning.back_to_a_wave-Tuple{BackToBack, Any, Union{LeftHanded, RightHanded}}","page":"Definitions","title":"SquareDanceReasoning.back_to_a_wave","text":"back_to_a_wave(f::BackToBack, time_delta, h::Union{RightHanded, LeftHanded})::FaceToFace\n\nThe back to back dancers back up to firm a miniwave of the specified handedness.\n\nBreating should be done separately.\n\n\n\n\n\n","category":"method"},{"location":"definitions.html#SquareDanceReasoning.backward-Tuple{DancerState, Any, Any}","page":"Definitions","title":"SquareDanceReasoning.backward","text":"backward(ds::DancerState, distance, time_delta)::DancerState\n\nMove the Dancer identified by ds backward (based on ds.direction) the specified distance by returning a new dancer state.\n\n\n\n\n\n","category":"method"},{"location":"definitions.html#SquareDanceReasoning.behind-Tuple{DancerState, DancerState}","page":"Definitions","title":"SquareDanceReasoning.behind","text":"behind(focus::DancerState, other::DancerState)::Bool\n\nreturns true if other is behind focus. \n\n\n\n\n\n","category":"method"},{"location":"definitions.html#SquareDanceReasoning.breathe-Tuple{Vector{TwoDancerFormation}, Vector{DancerState}}","page":"Definitions","title":"SquareDanceReasoning.breathe","text":"breathe(playmates::Vector{TwoDancerFormation}, everyone::Vector{DancerState})::Vector{DancerState}\n\nMoves the dancers apart such that those that have collided no longer overlap.\n\nplaymates is used to inform what direction colliders should be moved in such that playmates are not separated.\n\neveryone includes all DancerStates that are to be affected.\n\n\n\n\n\n","category":"method"},{"location":"definitions.html#SquareDanceReasoning.bump_out-Tuple{Bounds, Any}","page":"Definitions","title":"SquareDanceReasoning.bump_out","text":"bump_out(bounds::Bounds, amount)\n\nReturns a new Bounds object that is expanded at each edge by amount.\n\n\n\n\n\n","category":"method"},{"location":"definitions.html#SquareDanceReasoning.bump_out-Tuple{Bounds}","page":"Definitions","title":"SquareDanceReasoning.bump_out","text":"bump_out(bounds::Bounds)\n\nReturns a new Bounds object that is expanded by COUPLE_DISTANCE / 2 on each edge so that instead of encompassing the centers of each Dancer it encompasses whole dancers.\n\n\n\n\n\n","category":"method"},{"location":"definitions.html#SquareDanceReasoning.can_do_from-Tuple{SquareDanceCall, SquareDanceFormation}","page":"Definitions","title":"SquareDanceReasoning.can_do_from","text":"candofrom(::SquareDanceCall, ::SquareDanceFormation)::Int\n\nDetermins if the specified call can be performed from the specified formation.  A return value of 0 means the call is not appropriate (or not currently supported).  Otherwise the return value is a preference level with a higher value indicating more preferable.  For example UTurnBack from Couple is more preferable to UTurnBack from DancerState, even though both would be applicable.\n\n\n\n\n\n","category":"method"},{"location":"definitions.html#SquareDanceReasoning.can_roll-Tuple{DancerState}","page":"Definitions","title":"SquareDanceReasoning.can_roll","text":"can_roll(ds::DancerState)\n\nDetermine whether the modifier \"and roll\" can be applied to the DancerState.  If the dancer can roll then can_roll returns a signed rotation value.\n\nThis is not useful for \"and roll as if you could\".\n\n\n\n\n\n","category":"method"},{"location":"definitions.html#SquareDanceReasoning.canonicalize-Tuple{Any}","page":"Definitions","title":"SquareDanceReasoning.canonicalize","text":"canonicalize(direction)\n\ncanonicalizes the direction to be between 0 and 1.\n\n\n\n\n\n","category":"method"},{"location":"definitions.html#SquareDanceReasoning.canonicalize_signed-Tuple{Any}","page":"Definitions","title":"SquareDanceReasoning.canonicalize_signed","text":"canonicalize_signed(direction)\n\ncanonicalizes the direction to be between -1//2 and 1//2.\n\n\n\n\n\n","category":"method"},{"location":"definitions.html#SquareDanceReasoning.center-Tuple{Any}","page":"Definitions","title":"SquareDanceReasoning.center","text":"center(dss)\n\nreturns the center of the specified DancerStates as a two element Vector of down and left coordinates.\n\n\n\n\n\n","category":"method"},{"location":"definitions.html#SquareDanceReasoning.collateral_file_relpath-Tuple{Any, Any}","page":"Definitions","title":"SquareDanceReasoning.collateral_file_relpath","text":"collateral_file_relpath(resource_name, html_file_destination)\n\nReturns the path to the named resource in the environment of html_file_destination.\n\nresource_name is one of the keys of HTML_COLLATERAL_FILES.\n\nhtml_file_destination is the absolute path of the XML or HTML file that is referring to the resource.\n\n\n\n\n\n","category":"method"},{"location":"definitions.html#SquareDanceReasoning.collisions-Tuple{SquareDanceReasoning.Respirator}","page":"Definitions","title":"SquareDanceReasoning.collisions","text":"collisions(::Respirator)\n\nReturns an iterator over the current collisions in the Respirator.\n\n\n\n\n\n","category":"method"},{"location":"definitions.html#SquareDanceReasoning.copy_html_collateral_files-Tuple{}","page":"Definitions","title":"SquareDanceReasoning.copy_html_collateral_files","text":"copy_html_collateral_files()\n\nCopies each of the files identified in HTMLCOLLATERALFILES to each of the directories listed in TARGET_LOCATIONS.\n\nSquareDanceReasoning writes XML and HTML files to various locations. Some of those locations are only accessible in certain circumstances. For example, The package source code hierarchy is not available to documentation foles delivered to the gh-pages branch. copy_html_collateral_files copies the files to where they might be needed.  collateral_file_relpath is used to file the most appropriate\n\nUse collateral_file_relpath to get the best reference location for a resource file.\n\n\n\n\n\n","category":"method"},{"location":"definitions.html#SquareDanceReasoning.current_location-Tuple{SquareDanceReasoning.Respirator, Dancer}","page":"Definitions","title":"SquareDanceReasoning.current_location","text":"current_location(r::Respirator, d::Dancer)\n\nreturns the current location of the Dancer as recorded in the Respirator.\n\n\n\n\n\n","category":"method"},{"location":"definitions.html#SquareDanceReasoning.dancer_states-Tuple{SquareDanceFormation}","page":"Definitions","title":"SquareDanceReasoning.dancer_states","text":"dancer_states(formation)::Vector{DancerState}\n\nReturns a list of the DancerStates in the formation, in no particular order.\n\n\n\n\n\n","category":"method"},{"location":"definitions.html#SquareDanceReasoning.direction","page":"Definitions","title":"SquareDanceReasoning.direction","text":"direction(formation)\n\nIf all of the dancers of formation are facing in the same direction then return that direction.  Otherwise get a no such method error.\n\n\n\n\n\n","category":"function"},{"location":"definitions.html#SquareDanceReasoning.direction-Tuple{Any, Any}","page":"Definitions","title":"SquareDanceReasoning.direction","text":"direction(focus, other)\n\nreturns the absolute direction that other is from the point of view of focus.  Either argument can be a DancerState or a localtion represented as a two element Vector.\n\n\n\n\n\n","category":"method"},{"location":"definitions.html#SquareDanceReasoning.distance-Tuple{Any, Any}","page":"Definitions","title":"SquareDanceReasoning.distance","text":"distance(p1, p2)\n\nreturns the distance between the two points represented by vectors.\n\n\n\n\n\n","category":"method"},{"location":"definitions.html#SquareDanceReasoning.do_call-Tuple{ReteRootNode, SquareDanceCall}","page":"Definitions","title":"SquareDanceReasoning.do_call","text":"do_call(kb::ReteRootNode, call::SquareDanceCall; dbgctx = nothing)::ReteRootNode\n\nPerform the specified square dance call and retrn an updated knowledgebase.\n\n\n\n\n\n","category":"method"},{"location":"definitions.html#SquareDanceReasoning.earliest-Tuple{DancerState}","page":"Definitions","title":"SquareDanceReasoning.earliest","text":"earliest(ds::DancerState)\n\nReturns the earliest DancerState in the specified DancerState's previous chain.\n\n\n\n\n\n","category":"method"},{"location":"definitions.html#SquareDanceReasoning.elt-Tuple{Function, AbstractString, Vararg{Any}}","page":"Definitions","title":"SquareDanceReasoning.elt","text":"elt(f, tagname::AbstractString, things...)\nelt(tagname::AbstractString, things...)\n\nReturn an XML element.  f is called with a single argument: either an XML.AbstractXMLNode or a Pair describing an XML attribute to be added to the resulting element.\n\n\n\n\n\n","category":"method"},{"location":"definitions.html#SquareDanceReasoning.encroached_on-Tuple{Any, Any}","page":"Definitions","title":"SquareDanceReasoning.encroached_on","text":"encroached_on(formations, kb)\n\nReturns true if any of the other contemporary DancerStates in the knowledge base are within the Bounds of the specified formations.\n\n\n\n\n\n","category":"method"},{"location":"definitions.html#SquareDanceReasoning.expand-Tuple{Bounds, DancerState}","page":"Definitions","title":"SquareDanceReasoning.expand","text":"expand(bounds::Bounds, ::DancerState)::Bounds\n\nbounds is modified to encompass the additional DancerState.\n\n\n\n\n\n","category":"method"},{"location":"definitions.html#SquareDanceReasoning.expand-Tuple{TimeBounds, DancerState}","page":"Definitions","title":"SquareDanceReasoning.expand","text":"expand(tb::TimeBounds, ds::DancerState)::TimeBounds\n\nexpands tb to encompass the time of the specified DancerStates.\n\n\n\n\n\n","category":"method"},{"location":"definitions.html#SquareDanceReasoning.expand_parts-Tuple{SquareDanceCall, SquareDanceFormation}","page":"Definitions","title":"SquareDanceReasoning.expand_parts","text":"expand_parts(::SquareDanceCall, ::SquareDanceFormation)\n\nReturns either the call itself, if it has no expansion, or a vector of Tuple{relative_time, part} containing one Tuple for each part. relative_time is the time (relative to the start of the call) at which the corresonding part should start.\n\n\n\n\n\n","category":"method"},{"location":"definitions.html#SquareDanceReasoning.find_collisions-Tuple{Vector{DancerState}}","page":"Definitions","title":"SquareDanceReasoning.find_collisions","text":"find_collisions(dss::Vector{DancerState})::Vector{Collision}\n\nFind the DancerStates that have collided with each other. \n\n\n\n\n\n","category":"method"},{"location":"definitions.html#SquareDanceReasoning.fixed-Tuple{Real}","page":"Definitions","title":"SquareDanceReasoning.fixed","text":"fixed(x)\n\ntruncates ludicrously small floating point numbers.\n\n\n\n\n\n","category":"method"},{"location":"definitions.html#SquareDanceReasoning.formation_svg-Tuple{Any, Any}","page":"Definitions","title":"SquareDanceReasoning.formation_svg","text":"formation_svg(f::SquareDanceFormation, symbol_uri_base; id=nothing)\n\nReturns an SVG element that illustrates the formation.\n\nsymbol_uri_base is a relative URL to the SVG symbols file. See collateral_file_relpath.\n\nIf id is specified, it will be the XML Id of the drawing.\n\nIf margin is specified, its the additional space that surrounds the formation.\n\n\n\n\n\n","category":"method"},{"location":"definitions.html#SquareDanceReasoning.forward-Tuple{DancerState, Any, Any}","page":"Definitions","title":"SquareDanceReasoning.forward","text":"forward(ds::DancerState, distance, time_delta)::DancerState\n\nMove the Dancer identified by ds forward (based on ds.direction) the specified distance by returning a new dancer state.\n\n\n\n\n\n","category":"method"},{"location":"definitions.html#SquareDanceReasoning.fraction-Tuple{TimeBounds, Any}","page":"Definitions","title":"SquareDanceReasoning.fraction","text":"fraction(tb::TimeBounds, t)\n\nreturn where t falls within tb as a fraction. For t == tb.min the result would be 0. For t == tb.max the result would be 100.\n\n\n\n\n\n","category":"method"},{"location":"definitions.html#SquareDanceReasoning.grid_arrangement-Tuple{Vector{Dancer}, Matrix{<:Integer}, Matrix{Rational}}","page":"Definitions","title":"SquareDanceReasoning.grid_arrangement","text":" grid_arrangement(dancers::Vector{Dancer}, dancer_indices::Array{<:Integer, 2}, dancer_directions::Array{Rational, 2})\n\nReturns a two dimensional array of DancerStates such that the dancers are arranged in a rectangular grid of the specified dimensions.\n\ndancers is a vector of Dancers indexed by dancer_indices.  A dancer index can be 0 to indicate that there is no dancer in that positriion.\n\ndancer_indices and dancer_directions are Arrays of the same dimensions.  This determiines the dimensions of the resulting grid.\n\nAlternatively, dancer_directions can be a Vector of strings of the Unicode arrow characters ←, ↑, →, or ↓, with the space character serving as a placeholder where there is no dancer.\n\nThe two indices of each array correspond to the down and left coordinates respectively.\n\n\n\n\n\n","category":"method"},{"location":"definitions.html#SquareDanceReasoning.handedness","page":"Definitions","title":"SquareDanceReasoning.handedness","text":"handedness(formation)\n\nreturns the handedness of a square dance formation: one of RightHanded(), LeftHanded() or NoHandedness()\n\n\n\n\n\n","category":"function"},{"location":"definitions.html#SquareDanceReasoning.history-Tuple{Any, DancerState}","page":"Definitions","title":"SquareDanceReasoning.history","text":"history(f, ds::DancerState)\n\nCalls f on ds and all of its previous DancerStates in chronological order.\n\n\n\n\n\n","category":"method"},{"location":"definitions.html#SquareDanceReasoning.in_bounds-Tuple{Bounds, DancerState}","page":"Definitions","title":"SquareDanceReasoning.in_bounds","text":"in_bounds(bounds::Bounds, ds::DancerState)::Bool\n\nReturns true if the specified DancerState it located within bounds.\n\nin_bounds(Bounds([ds]), ds) == true\n\n\n\n\n\n","category":"method"},{"location":"definitions.html#SquareDanceReasoning.in_front_of-Tuple{DancerState, DancerState}","page":"Definitions","title":"SquareDanceReasoning.in_front_of","text":"in_front_of(focus::DancerState, other::DancerState)::Bool\n\nreturns true if other is in front of focus. \n\n\n\n\n\n","category":"method"},{"location":"definitions.html#SquareDanceReasoning.is_original_head-Tuple{Dancer}","page":"Definitions","title":"SquareDanceReasoning.is_original_head","text":"is_original_head(::Dancer)::Bool\n\nreturns true if the dancer was originally in a head position.\n\n\n\n\n\n","category":"method"},{"location":"definitions.html#SquareDanceReasoning.is_original_side-Tuple{Dancer}","page":"Definitions","title":"SquareDanceReasoning.is_original_side","text":"is_original_side(::Dancer)::Bool\n\nreturns true if the dancer was originally in a side position.\n\n\n\n\n\n","category":"method"},{"location":"definitions.html#SquareDanceReasoning.jitter-Tuple{DancerState, Any}","page":"Definitions","title":"SquareDanceReasoning.jitter","text":"jitter(ds::DancerState, time_delta)::DancerState\n\nAdds noise to the position and facing direction of the DancerState. This allows us to test whether our formation recognition rules are sensitive to such noise.\n\n\n\n\n\n","category":"method"},{"location":"definitions.html#SquareDanceReasoning.latest_dancer_states-Tuple{Any}","page":"Definitions","title":"SquareDanceReasoning.latest_dancer_states","text":"latest_dancer_states(kb)::Dict{Dancer, DancerState}\n\nReturn a Dict that provides the latest DancerState for each Dancer.\n\n\n\n\n\n","category":"method"},{"location":"definitions.html#SquareDanceReasoning.left_of-Tuple{DancerState, DancerState}","page":"Definitions","title":"SquareDanceReasoning.left_of","text":"left_of(focus::DancerState, other::DancerState)::Bool\n\nreturns true if other is to the left of focus. \n\n\n\n\n\n","category":"method"},{"location":"definitions.html#SquareDanceReasoning.leftward-Tuple{DancerState, Any, Any}","page":"Definitions","title":"SquareDanceReasoning.leftward","text":"leftward(ds::DancerState, distance, time_delta)::DancerState\n\nMove the Dancer identified by ds to the left (based on ds.direction) by the specified distance by returning a new dancer state.\n\n\n\n\n\n","category":"method"},{"location":"definitions.html#SquareDanceReasoning.make_kb-Tuple{ReteRootNode}","page":"Definitions","title":"SquareDanceReasoning.make_kb","text":"make_kb(kb::ReteRootNode)\n\nMakes a copy of the knowledge base, but without any TemporalFacts.\n\n\n\n\n\n","category":"method"},{"location":"definitions.html#SquareDanceReasoning.make_kb-Tuple{}","page":"Definitions","title":"SquareDanceReasoning.make_kb","text":"make_kb()\n\nCreates SquareDanceReasoning knowledge base with no facts, but with all rules installed.\n\n\n\n\n\n","category":"method"},{"location":"definitions.html#SquareDanceReasoning.make_showcase_index_file-Tuple{}","page":"Definitions","title":"SquareDanceReasoning.make_showcase_index_file","text":"make_showcase_index_file()\n\nWrites an index file for the choreography Showcase docs directory.\n\n\n\n\n\n","category":"method"},{"location":"definitions.html#SquareDanceReasoning.make_square-Tuple{Int64}","page":"Definitions","title":"SquareDanceReasoning.make_square","text":"make_square(number_of_couples::Int)::SDSquare\n\nReturns an SDSquare with the specified number of couples.\n\n\n\n\n\n","category":"method"},{"location":"definitions.html#SquareDanceReasoning.near-Tuple{DancerState, DancerState}","page":"Definitions","title":"SquareDanceReasoning.near","text":"near(::DancerState, ::DancerState)\n\nreturns true if the two DancerStates are for different dancers and are close enough together (within DANCERNEARDISTANCE).\n\n\n\n\n\n","category":"method"},{"location":"definitions.html#SquareDanceReasoning.obverse","page":"Definitions","title":"SquareDanceReasoning.obverse","text":"obverse(::Role)::Role\n\nEach role has an obverse role.  (I didn't want to overload opposite).  At a given time a dancer either has role or role's obverse.\n\n\n\n\n\n","category":"function"},{"location":"definitions.html#SquareDanceReasoning.opposite-Tuple{Any}","page":"Definitions","title":"SquareDanceReasoning.opposite","text":"opposite(direction)\n\nreturns the direction opposite to the given one.\n\n\n\n\n\n","category":"method"},{"location":"definitions.html#SquareDanceReasoning.opposite-Tuple{Guy}","page":"Definitions","title":"SquareDanceReasoning.opposite","text":"opposite(::Gender)::Gender\n\nReturns the opposite Gender.  Unspecified() is its own opposite.\n\n\n\n\n\n","category":"method"},{"location":"definitions.html#SquareDanceReasoning.other_dancers-Tuple{SDSquare, Any}","page":"Definitions","title":"SquareDanceReasoning.other_dancers","text":"other_dancers(square::SDSquare, dancers)\n\nReturns the dancers from square that are not listed in the dancers argument.\n\n\n\n\n\n","category":"method"},{"location":"definitions.html#SquareDanceReasoning.pass_by-Tuple{MiniWave, Any}","page":"Definitions","title":"SquareDanceReasoning.pass_by","text":"pass_by(mw::MiniWave, time_delta)::BackToBack\n\nDancers in a MiniWave pass by each other to end BackToBack.\n\n\n\n\n\n","category":"method"},{"location":"definitions.html#SquareDanceReasoning.percentage-Tuple{TimeBounds, Any}","page":"Definitions","title":"SquareDanceReasoning.percentage","text":"percentage(tb::TimeBounds, t)\n\nreturn where t falls within tb as a percentage. For t == tb.min the result would be 0. For t == tb.max the result would be 100.\n\n\n\n\n\n","category":"method"},{"location":"definitions.html#SquareDanceReasoning.perform","page":"Definitions","title":"SquareDanceReasoning.perform","text":"perform(::SquareDanceCall, ::SquareDanceFormation, ::ReteRootNode)::SquareDanceFormation\n\nPerforms the call on the specified formation and returns the new formation.\n\n\n\n\n\n","category":"function"},{"location":"definitions.html#SquareDanceReasoning.playmate","page":"Definitions","title":"SquareDanceReasoning.playmate","text":"playmate(ds::Dancer, f::TwoDancerFormation)::Union{Nothing, Dancer}\n\nIf the Dancer is part of the formation then return the other Dancer in the formation, otherwise return nothing.\n\n\n\n\n\n","category":"function"},{"location":"definitions.html#SquareDanceReasoning.quarter_left-Tuple{Any}","page":"Definitions","title":"SquareDanceReasoning.quarter_left","text":"quarter_left(direction)\n\nreturns the direction that's a quarter turn left from the given direction.\n\n\n\n\n\n","category":"method"},{"location":"definitions.html#SquareDanceReasoning.quarter_right-Tuple{Any}","page":"Definitions","title":"SquareDanceReasoning.quarter_right","text":"quarter_right(direction)\n\nreturns the direction that's a quarter turn right from the given direction.\n\n\n\n\n\n","category":"method"},{"location":"definitions.html#SquareDanceReasoning.restricted_to-Tuple{SquareDanceCall}","page":"Definitions","title":"SquareDanceReasoning.restricted_to","text":"restricted_to(call)::Role\n\nReturns the role that call has been restricted to.\n\nEach subtype of SquareDanceCall must have either a role field or a restricted_to method.\n\n\n\n\n\n","category":"method"},{"location":"definitions.html#SquareDanceReasoning.revolve-Tuple{DancerState, Any, Any, Any}","page":"Definitions","title":"SquareDanceReasoning.revolve","text":"revolve(ds::DancerState, center, new_direction, time_delta)::DancerState\n\nRevolves the Dancer identified by ds around center (a two element Vector of down and left coordinates) until the Dancer's new facing direction is new_direction.  A new DancerState is returned.  time_delta is the duration of the revolution operation.\n\n\n\n\n\n","category":"method"},{"location":"definitions.html#SquareDanceReasoning.right_of-Tuple{DancerState, DancerState}","page":"Definitions","title":"SquareDanceReasoning.right_of","text":"right_of(focus::DancerState, other::DancerState)::Bool\n\nreturns true if other is to the right of focus. \n\n\n\n\n\n","category":"method"},{"location":"definitions.html#SquareDanceReasoning.rightward-Tuple{DancerState, Any, Any}","page":"Definitions","title":"SquareDanceReasoning.rightward","text":"rightward(ds::DancerState, distance, time_delta)::DancerState\n\nMove the Dancer identified by ds to the right (based on ds.direction) by the specified distance by returning a new dancer state.\n\n\n\n\n\n","category":"method"},{"location":"definitions.html#SquareDanceReasoning.rotate-Tuple{DancerState, Any, Any}","page":"Definitions","title":"SquareDanceReasoning.rotate","text":"rotate(ds::DancerState, rotation, time_delta)::DancerState\n\nRotates the dancer idntified by the DancerState in place by rotation.\n\n\n\n\n\n","category":"method"},{"location":"definitions.html#SquareDanceReasoning.schedule-Tuple{CallSchedule, SquareDanceCall, Any}","page":"Definitions","title":"SquareDanceReasoning.schedule","text":"schedule(sched::CallSchedule, call::SquareDanceCall, at)\n\nEnters call into sched so that it will be performed at the specified time at.\n\n\n\n\n\n","category":"method"},{"location":"definitions.html#SquareDanceReasoning.showcase-Tuple{String, String, Any, Vector{SquareDanceCall}}","page":"Definitions","title":"SquareDanceReasoning.showcase","text":"showcase(filename::String, title::String, initial_kb, choreography::Vector{SquareDanceCall}; inhibit_call_engine_logging = true; dbgctx = nothing)\n\nWrites a markdown file named filename in the choreography Showcase documentation directory.\n\ntitle is the title string for the document.\n\ninitial_kb is the knowledgebase containing the formations that choreography starts from.\n\nchoreography is a vector of the calls to be performed.\n\nIf inhibit_call_engine_logging is true then teh usual call engine logging will be suppressed.\n\nIf provided, dbgctx should be a CallEngineDebugContext.\n\n\n\n\n\n","category":"method"},{"location":"definitions.html#SquareDanceReasoning.square_up-Tuple{Vector{Dancer}}","page":"Definitions","title":"SquareDanceReasoning.square_up","text":"square_up(dancers; initial_time = 0)\n\nreturns a list of DancerStates for the initial squared set.\n\n\n\n\n\n","category":"method"},{"location":"definitions.html#SquareDanceReasoning.step_to_a_wave-Tuple{FaceToFace, Any, Union{LeftHanded, RightHanded}}","page":"Definitions","title":"SquareDanceReasoning.step_to_a_wave","text":"step_to_a_wave(f::FaceToFace, time_delta, h::Handedness)::MiniWave\n\nThe face to face dancers move up to make a right or left handed miniwave.\n\nBreating should be done separately.\n\n\n\n\n\n","category":"method"},{"location":"definitions.html#SquareDanceReasoning.supported_roles-Tuple{Type{<:SquareDanceFormation}}","page":"Definitions","title":"SquareDanceReasoning.supported_roles","text":"supported_roles(formation)\n\nReturns a list of the Roles that are supported by formation.\n\n\n\n\n\n","category":"method"},{"location":"definitions.html#SquareDanceReasoning.those_with_role-Tuple{SquareDanceFormation, Role}","page":"Definitions","title":"SquareDanceReasoning.those_with_role","text":"those_with_role(::SquareDanceFormation, ::Role)\n\nFor the specified formation, returns DancerStates whose dancers fill the specified role.\n\n\n\n\n\n","category":"method"},{"location":"definitions.html#SquareDanceReasoning.un_step_to_a_wave-Tuple{MiniWave, Any}","page":"Definitions","title":"SquareDanceReasoning.un_step_to_a_wave","text":"un_step_to_a_wave(f::MiniWave, time_delta)::FaceToFace\n\nThe face to face dancers move up to make a right or left handed miniwave.\n\nBreating should be done separately.\n\n\n\n\n\n","category":"method"},{"location":"definitions.html#SquareDanceReasoning.update_from","page":"Definitions","title":"SquareDanceReasoning.update_from","text":"update_from(formation::SquareDanceFormation, newest::Vector{DancerState})\n\nReturn a new formation of the same type as formation but with its component DancerStates taken from newest, matching by Dancer.\n\n\n\n\n\n","category":"function"},{"location":"definitions.html#SquareDanceReasoning.@CallEngineDebugContext-Tuple{Any, Any}","page":"Definitions","title":"SquareDanceReasoning.@CallEngineDebugContext","text":"@CallEngineDebugContext(relpath, token)\n\nCreates a CallEngineDebugContext with an appropriate source locator.\n\n\n\n\n\n","category":"macro"},{"location":"Showcase/SquareThru_from_FacingCouples.html#Square-Thru","page":"Square Thru","title":"Square Thru","text":"","category":"section"},{"location":"Showcase/SquareThru_from_FacingCouples.html","page":"Square Thru","title":"Square Thru","text":"<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"-10.000 -10.000 90.000 90.000\" width=\"90.0\" height=\"90.0\">\n  <!--\nBounds(-0.5f0, 4.0f0, -0.5f0, 4.0f0)\n-->\n  <style>\n    \n.DirectionDot {\n    stroke: black;\n    fill: black;\n}\n\n    \n.couple1swatch {\n    color: rgb(255 0 0);\n}\n.couple1 {\n    stroke: black;\n    fill: rgb(255 0 0)\n}\n\n.couple2swatch {\n    color: rgb(0 255 255);\n}\n.couple2 {\n    stroke: black;\n    fill: rgb(0 255 255)\n}\n  </style>\n  <g>\n    <use id=\"dancer_1_m\" href=\"../dancer_symbols.svg#Guy\" width=\"20\" height=\"20\" class=\"couple1\">\n      <animate repeatCount=\"indefinite\" dur=\"15.0s\" keyTimes=\"0.0000;0.0996;0.1499;0.2500;0.3496;0.3999;0.5000;0.5996;0.6499;0.7500;0.8496;0.8999;1.0000\" attributeName=\"x\" values=\"20.0;10.0;20.0;20.0;40.0;50.0;50.0;60.0;50.0;50.0;30.0;20.0;20.0\"/>\n      <animate repeatCount=\"indefinite\" dur=\"15.0s\" keyTimes=\"0.0000;0.0996;0.1499;0.2500;0.3496;0.3999;0.5000;0.5996;0.6499;0.7500;0.8496;0.8999;1.0000\" attributeName=\"y\" values=\"40.0;30.0;20.0;20.0;30.0;20.0;20.0;40.0;50.0;50.0;40.0;50.0;50.0\"/>\n      <animateTransform repeatCount=\"indefinite\" dur=\"15.0s\" keyTimes=\"0.0000;0.0996;0.1499;0.2500;0.3496;0.3999;0.5000;0.5996;0.6499;0.7500;0.8496;0.8999;1.0000\" attributeName=\"transform\" type=\"rotate\" values=\"-90.0 20.0 40.0;-90.0 10.0 30.0;-90.0 20.0 20.0;0.0 20.0 20.0;0.0 40.0 30.0;0.0 50.0 20.0;90.0 50.0 20.0;90.0 60.0 40.0;90.0 50.0 50.0;180.0 50.0 50.0;180.0 30.0 40.0;180.0 20.0 50.0;180.0 20.0 50.0\"/>\n      <!--\nDancerState(Dancer(1, Guy()), 0, 1//2, 2.0, 1.0)\nDancerState(Dancer(1, Guy()), 2, 1//2, 1.5, 0.5)\nDancerState(Dancer(1, Guy()), 3, 1//2, 1.0, 1.0)\nDancerState(Dancer(1, Guy()), 5, 1//4, 1.0, 1.0)\nDancerState(Dancer(1, Guy()), 7, 1//4, 1.5, 2.0)\nDancerState(Dancer(1, Guy()), 8, 1//4, 1.0, 2.5)\nDancerState(Dancer(1, Guy()), 10, 0//1, 1.0, 2.5)\nDancerState(Dancer(1, Guy()), 12, 0//1, 2.0, 3.0)\nDancerState(Dancer(1, Guy()), 13, 0//1, 2.5, 2.5)\nDancerState(Dancer(1, Guy()), 15, 3//4, 2.5, 2.5)\nDancerState(Dancer(1, Guy()), 17, 3//4, 2.0, 1.5)\nDancerState(Dancer(1, Guy()), 18, 3//4, 2.5, 1.0)\nDancerState(Dancer(1, Guy()), 20, 3//4, 2.5, 1.0)\n-->\n    </use>\n    <use id=\"dancer_1_f\" href=\"../dancer_symbols.svg#Gal\" width=\"20\" height=\"20\" class=\"couple1\">\n      <animate repeatCount=\"indefinite\" dur=\"15.0s\" keyTimes=\"0.0000;0.0996;0.1499;0.2500;0.3496;0.3999;0.5000;0.5996;0.6499;0.7500;0.8496;0.8999;1.0000\" attributeName=\"x\" values=\"40.0;50.0;60.0;60.0;40.0;30.0;30.0;20.0;10.0;10.0;30.0;40.0;40.0\"/>\n      <animate repeatCount=\"indefinite\" dur=\"15.0s\" keyTimes=\"0.0000;0.0996;0.1499;0.2500;0.3496;0.3999;0.5000;0.5996;0.6499;0.7500;0.8496;0.8999;1.0000\" attributeName=\"y\" values=\"40.0;30.0;20.0;20.0;10.0;20.0;20.0;40.0;50.0;50.0;60.0;50.0;50.0\"/>\n      <animateTransform repeatCount=\"indefinite\" dur=\"15.0s\" keyTimes=\"0.0000;0.0996;0.1499;0.2500;0.3496;0.3999;0.5000;0.5996;0.6499;0.7500;0.8496;0.8999;1.0000\" attributeName=\"transform\" type=\"rotate\" values=\"-90.0 40.0 40.0;-90.0 50.0 30.0;-90.0 60.0 20.0;-180.0 60.0 20.0;-180.0 40.0 10.0;-180.0 30.0 20.0;-270.0 30.0 20.0;-270.0 20.0 40.0;-270.0 10.0 50.0;-360.0 10.0 50.0;-360.0 30.0 60.0;-360.0 40.0 50.0;-360.0 40.0 50.0\"/>\n      <!--\nDancerState(Dancer(1, Gal()), 0, 1//2, 2.0, 2.0)\nDancerState(Dancer(1, Gal()), 2, 1//2, 1.5, 2.5)\nDancerState(Dancer(1, Gal()), 3, 1//2, 1.0, 3.0)\nDancerState(Dancer(1, Gal()), 5, 3//4, 1.0, 3.0)\nDancerState(Dancer(1, Gal()), 7, 3//4, 0.5, 2.0)\nDancerState(Dancer(1, Gal()), 8, 3//4, 1.0, 1.5)\nDancerState(Dancer(1, Gal()), 10, 0//1, 1.0, 1.5)\nDancerState(Dancer(1, Gal()), 12, 0//1, 2.0, 1.0)\nDancerState(Dancer(1, Gal()), 13, 0//1, 2.5, 0.5)\nDancerState(Dancer(1, Gal()), 15, 1//4, 2.5, 0.5)\nDancerState(Dancer(1, Gal()), 17, 1//4, 3.0, 1.5)\nDancerState(Dancer(1, Gal()), 18, 1//4, 2.5, 2.0)\nDancerState(Dancer(1, Gal()), 20, 1//4, 2.5, 2.0)\n-->\n    </use>\n    <use id=\"dancer_2_m\" href=\"../dancer_symbols.svg#Guy\" width=\"20\" height=\"20\" class=\"couple2\">\n      <animate repeatCount=\"indefinite\" dur=\"15.0s\" keyTimes=\"0.0000;0.0996;0.1499;0.2500;0.3496;0.3999;0.5000;0.5996;0.6499;0.7500;0.8496;0.8999;1.0000\" attributeName=\"x\" values=\"40.0;70.0;60.0;60.0;40.0;30.0;30.0;0.0;10.0;10.0;30.0;40.0;40.0\"/>\n      <animate repeatCount=\"indefinite\" dur=\"15.0s\" keyTimes=\"0.0000;0.0996;0.1499;0.2500;0.3496;0.3999;0.5000;0.5996;0.6499;0.7500;0.8496;0.8999;1.0000\" attributeName=\"y\" values=\"20.0;30.0;40.0;40.0;50.0;60.0;60.0;40.0;30.0;30.0;20.0;10.0;10.0\"/>\n      <animateTransform repeatCount=\"indefinite\" dur=\"15.0s\" keyTimes=\"0.0000;0.0996;0.1499;0.2500;0.3496;0.3999;0.5000;0.5996;0.6499;0.7500;0.8496;0.8999;1.0000\" attributeName=\"transform\" type=\"rotate\" values=\"90.0 40.0 20.0;90.0 70.0 30.0;90.0 60.0 40.0;180.0 60.0 40.0;180.0 40.0 50.0;180.0 30.0 60.0;270.0 30.0 60.0;270.0 0.0 40.0;270.0 10.0 30.0;360.0 10.0 30.0;360.0 30.0 20.0;360.0 40.0 10.0;360.0 40.0 10.0\"/>\n      <!--\nDancerState(Dancer(2, Guy()), 0, 0//1, 1.0, 2.0)\nDancerState(Dancer(2, Guy()), 2, 0//1, 1.5, 3.5)\nDancerState(Dancer(2, Guy()), 3, 0//1, 2.0, 3.0)\nDancerState(Dancer(2, Guy()), 5, 3//4, 2.0, 3.0)\nDancerState(Dancer(2, Guy()), 7, 3//4, 2.5, 2.0)\nDancerState(Dancer(2, Guy()), 8, 3//4, 3.0, 1.5)\nDancerState(Dancer(2, Guy()), 10, 1//2, 3.0, 1.5)\nDancerState(Dancer(2, Guy()), 12, 1//2, 2.0, 0.0)\nDancerState(Dancer(2, Guy()), 13, 1//2, 1.5, 0.5)\nDancerState(Dancer(2, Guy()), 15, 1//4, 1.5, 0.5)\nDancerState(Dancer(2, Guy()), 17, 1//4, 1.0, 1.5)\nDancerState(Dancer(2, Guy()), 18, 1//4, 0.5, 2.0)\nDancerState(Dancer(2, Guy()), 20, 1//4, 0.5, 2.0)\n-->\n    </use>\n    <use id=\"dancer_2_f\" href=\"../dancer_symbols.svg#Gal\" width=\"20\" height=\"20\" class=\"couple2\">\n      <animate repeatCount=\"indefinite\" dur=\"15.0s\" keyTimes=\"0.0000;0.0996;0.1499;0.2500;0.3496;0.3999;0.5000;0.5996;0.6499;0.7500;0.8496;0.8999;1.0000\" attributeName=\"x\" values=\"20.0;30.0;20.0;20.0;40.0;50.0;50.0;40.0;50.0;50.0;30.0;20.0;20.0\"/>\n      <animate repeatCount=\"indefinite\" dur=\"15.0s\" keyTimes=\"0.0000;0.0996;0.1499;0.2500;0.3496;0.3999;0.5000;0.5996;0.6499;0.7500;0.8496;0.8999;1.0000\" attributeName=\"y\" values=\"20.0;30.0;40.0;40.0;70.0;60.0;60.0;40.0;30.0;30.0;0.0;10.0;10.0\"/>\n      <animateTransform repeatCount=\"indefinite\" dur=\"15.0s\" keyTimes=\"0.0000;0.0996;0.1499;0.2500;0.3496;0.3999;0.5000;0.5996;0.6499;0.7500;0.8496;0.8999;1.0000\" attributeName=\"transform\" type=\"rotate\" values=\"90.0 20.0 20.0;90.0 30.0 30.0;90.0 20.0 40.0;0.0 20.0 40.0;0.0 40.0 70.0;0.0 50.0 60.0;-90.0 50.0 60.0;-90.0 40.0 40.0;-90.0 50.0 30.0;-180.0 50.0 30.0;-180.0 30.0 0.0;-180.0 20.0 10.0;-180.0 20.0 10.0\"/>\n      <!--\nDancerState(Dancer(2, Gal()), 0, 0//1, 1.0, 1.0)\nDancerState(Dancer(2, Gal()), 2, 0//1, 1.5, 1.5)\nDancerState(Dancer(2, Gal()), 3, 0//1, 2.0, 1.0)\nDancerState(Dancer(2, Gal()), 5, 1//4, 2.0, 1.0)\nDancerState(Dancer(2, Gal()), 7, 1//4, 3.5, 2.0)\nDancerState(Dancer(2, Gal()), 8, 1//4, 3.0, 2.5)\nDancerState(Dancer(2, Gal()), 10, 1//2, 3.0, 2.5)\nDancerState(Dancer(2, Gal()), 12, 1//2, 2.0, 2.0)\nDancerState(Dancer(2, Gal()), 13, 1//2, 1.5, 2.5)\nDancerState(Dancer(2, Gal()), 15, 3//4, 1.5, 2.5)\nDancerState(Dancer(2, Gal()), 17, 3//4, 0.0, 1.5)\nDancerState(Dancer(2, Gal()), 18, 3//4, 0.5, 1.0)\nDancerState(Dancer(2, Gal()), 20, 3//4, 0.5, 1.0)\n-->\n    </use>\n  </g>\n</svg>","category":"page"},{"location":"Showcase/SquareThru_from_FacingCouples.html","page":"Square Thru","title":"Square Thru","text":"SquareThru(Everyone(), RightHanded(), 4)\n_Rest(Everyone(), 2)","category":"page"},{"location":"formation_drawings/FacingTandemCouples.html","page":"-","title":"-","text":"<html>\n  <head>\n    <meta charset=\"utf-8\"/>\n    <title>FacingTandemCouples</title>\n    <script type=\"text/javascript\" src=\"../dancer_selection.js\"></script>\n    <style>\n      \n\n      svg {\n    background-color: \"gray\";\n}\ntable {\n    empty-cells: show;\n}\n.DancerState-table th {\n    text-align: center;\n    margin-left: 8em;\n    margin-right: 8em;\n}\n.DancerState-table td {\n    text-align: center;\n    margin-left: 8em;\n    margin-right: 8em;\n}\n.DirectionDot {\n    stroke: black;\n    fill: black;\n}\n\n      \n.couple1swatch {\n    color: rgb(255 0 0);\n}\n.couple1 {\n    stroke: black;\n    fill: rgb(255 0 0)\n}\n\n.couple2swatch {\n    color: rgb(255 255 0);\n}\n.couple2 {\n    stroke: black;\n    fill: rgb(255 255 0)\n}\n\n.couple3swatch {\n    color: rgb(0 255 255);\n}\n.couple3 {\n    stroke: black;\n    fill: rgb(0 255 255)\n}\n\n.couple4swatch {\n    color: rgb(255 0 255);\n}\n.couple4 {\n    stroke: black;\n    fill: rgb(255 0 255)\n}\n      \n\n    </style>\n  </head>\n  <body>\n    <h1>FacingTandemCouples</h1>\n    <div>\n      <h2>Dancer Location and Facing Direction</h2>\n      <div class=\"DancerState-table\">\n        <table>\n          <thead>\n            <tr>\n              <th>id</th>\n              <th>dancer</th>\n              <th>time</th>\n              <th>direction</th>\n              <th>down</th>\n              <th>left</th>\n              <th>symbol</th>\n            </tr>\n            <tbody>\n              <tr>\n                <td onclick=\"select_dancers([&quot;1m&quot;])\">1m</td>\n                <td onclick=\"formation_onclick\">Dancer(1, Guy())</td>\n                <td>0</td>\n                <td>1//4</td>\n                <td>1.0</td>\n                <td>2.0</td>\n                <td>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"30.000 10.000 20.000 20.000\" width=\"20.0\" height=\"20.0\">\n                    <g>\n                      <use href=\"../dancer_symbols.svg#Guy\" transform=\"rotate(  0 40.00 20.00)\" x=\"40.0\" y=\"20.0\" width=\"20\" height=\"20\" class=\"dancer couple1\"/>\n                    </g>\n                  </svg>\n                </td>\n              </tr>\n              <tr>\n                <td onclick=\"select_dancers([&quot;1f&quot;])\">1f</td>\n                <td onclick=\"formation_onclick\">Dancer(1, Gal())</td>\n                <td>0</td>\n                <td>1//4</td>\n                <td>2.0</td>\n                <td>2.0</td>\n                <td>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"30.000 30.000 20.000 20.000\" width=\"20.0\" height=\"20.0\">\n                    <g>\n                      <use href=\"../dancer_symbols.svg#Gal\" transform=\"rotate(  0 40.00 40.00)\" x=\"40.0\" y=\"40.0\" width=\"20\" height=\"20\" class=\"dancer couple1\"/>\n                    </g>\n                  </svg>\n                </td>\n              </tr>\n              <tr>\n                <td onclick=\"select_dancers([&quot;2m&quot;])\">2m</td>\n                <td onclick=\"formation_onclick\">Dancer(2, Guy())</td>\n                <td>0</td>\n                <td>1//4</td>\n                <td>1.0</td>\n                <td>1.0</td>\n                <td>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"10.000 10.000 20.000 20.000\" width=\"20.0\" height=\"20.0\">\n                    <g>\n                      <use href=\"../dancer_symbols.svg#Guy\" transform=\"rotate(  0 20.00 20.00)\" x=\"20.0\" y=\"20.0\" width=\"20\" height=\"20\" class=\"dancer couple2\"/>\n                    </g>\n                  </svg>\n                </td>\n              </tr>\n              <tr>\n                <td onclick=\"select_dancers([&quot;2f&quot;])\">2f</td>\n                <td onclick=\"formation_onclick\">Dancer(2, Gal())</td>\n                <td>0</td>\n                <td>1//4</td>\n                <td>2.0</td>\n                <td>1.0</td>\n                <td>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"10.000 30.000 20.000 20.000\" width=\"20.0\" height=\"20.0\">\n                    <g>\n                      <use href=\"../dancer_symbols.svg#Gal\" transform=\"rotate(  0 20.00 40.00)\" x=\"20.0\" y=\"40.0\" width=\"20\" height=\"20\" class=\"dancer couple2\"/>\n                    </g>\n                  </svg>\n                </td>\n              </tr>\n              <tr>\n                <td onclick=\"select_dancers([&quot;3m&quot;])\">3m</td>\n                <td onclick=\"formation_onclick\">Dancer(3, Guy())</td>\n                <td>0</td>\n                <td>3//4</td>\n                <td>2.0</td>\n                <td>3.0</td>\n                <td>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"50.000 30.000 20.000 20.000\" width=\"20.0\" height=\"20.0\">\n                    <g>\n                      <use href=\"../dancer_symbols.svg#Guy\" transform=\"rotate(-180 60.00 40.00)\" x=\"60.0\" y=\"40.0\" width=\"20\" height=\"20\" class=\"dancer couple3\"/>\n                    </g>\n                  </svg>\n                </td>\n              </tr>\n              <tr>\n                <td onclick=\"select_dancers([&quot;3f&quot;])\">3f</td>\n                <td onclick=\"formation_onclick\">Dancer(3, Gal())</td>\n                <td>0</td>\n                <td>3//4</td>\n                <td>1.0</td>\n                <td>3.0</td>\n                <td>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"50.000 10.000 20.000 20.000\" width=\"20.0\" height=\"20.0\">\n                    <g>\n                      <use href=\"../dancer_symbols.svg#Gal\" transform=\"rotate(-180 60.00 20.00)\" x=\"60.0\" y=\"20.0\" width=\"20\" height=\"20\" class=\"dancer couple3\"/>\n                    </g>\n                  </svg>\n                </td>\n              </tr>\n              <tr>\n                <td onclick=\"select_dancers([&quot;4m&quot;])\">4m</td>\n                <td onclick=\"formation_onclick\">Dancer(4, Guy())</td>\n                <td>0</td>\n                <td>3//4</td>\n                <td>2.0</td>\n                <td>4.0</td>\n                <td>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"70.000 30.000 20.000 20.000\" width=\"20.0\" height=\"20.0\">\n                    <g>\n                      <use href=\"../dancer_symbols.svg#Guy\" transform=\"rotate(-180 80.00 40.00)\" x=\"80.0\" y=\"40.0\" width=\"20\" height=\"20\" class=\"dancer couple4\"/>\n                    </g>\n                  </svg>\n                </td>\n              </tr>\n              <tr>\n                <td onclick=\"select_dancers([&quot;4f&quot;])\">4f</td>\n                <td onclick=\"formation_onclick\">Dancer(4, Gal())</td>\n                <td>0</td>\n                <td>3//4</td>\n                <td>1.0</td>\n                <td>4.0</td>\n                <td>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"70.000 10.000 20.000 20.000\" width=\"20.0\" height=\"20.0\">\n                    <g>\n                      <use href=\"../dancer_symbols.svg#Gal\" transform=\"rotate(-180 80.00 20.00)\" x=\"80.0\" y=\"20.0\" width=\"20\" height=\"20\" class=\"dancer couple4\"/>\n                    </g>\n                  </svg>\n                </td>\n              </tr>\n            </tbody>\n          </thead>\n        </table>\n      </div>\n    </div>\n    <div>\n      <svg id=\"floor\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"10.000 10.000 80.000 40.000\" width=\"80.0\" height=\"40.0\">\n        <g>\n          <use id=\"1m\" href=\"../dancer_symbols.svg#Guy\" transform=\"rotate(  0 40.00 20.00)\" x=\"40.0\" y=\"20.0\" width=\"20\" height=\"20\" class=\"dancer couple1\"/>\n          <use id=\"1f\" href=\"../dancer_symbols.svg#Gal\" transform=\"rotate(  0 40.00 40.00)\" x=\"40.0\" y=\"40.0\" width=\"20\" height=\"20\" class=\"dancer couple1\"/>\n          <use id=\"2m\" href=\"../dancer_symbols.svg#Guy\" transform=\"rotate(  0 20.00 20.00)\" x=\"20.0\" y=\"20.0\" width=\"20\" height=\"20\" class=\"dancer couple2\"/>\n          <use id=\"2f\" href=\"../dancer_symbols.svg#Gal\" transform=\"rotate(  0 20.00 40.00)\" x=\"20.0\" y=\"40.0\" width=\"20\" height=\"20\" class=\"dancer couple2\"/>\n          <use id=\"3m\" href=\"../dancer_symbols.svg#Guy\" transform=\"rotate(-180 60.00 40.00)\" x=\"60.0\" y=\"40.0\" width=\"20\" height=\"20\" class=\"dancer couple3\"/>\n          <use id=\"3f\" href=\"../dancer_symbols.svg#Gal\" transform=\"rotate(-180 60.00 20.00)\" x=\"60.0\" y=\"20.0\" width=\"20\" height=\"20\" class=\"dancer couple3\"/>\n          <use id=\"4m\" href=\"../dancer_symbols.svg#Guy\" transform=\"rotate(-180 80.00 40.00)\" x=\"80.0\" y=\"40.0\" width=\"20\" height=\"20\" class=\"dancer couple4\"/>\n          <use id=\"4f\" href=\"../dancer_symbols.svg#Gal\" transform=\"rotate(-180 80.00 20.00)\" x=\"80.0\" y=\"20.0\" width=\"20\" height=\"20\" class=\"dancer couple4\"/>\n        </g>\n      </svg>\n    </div>\n    <div>\n      <h2>Inferred Formations</h2>\n      <ul>\n        <li>\n          Couple\n          <ul>\n            <li onclick=\"select_dancers([&quot;1m&quot;, &quot;1f&quot;])\">Couple-1m-1f</li>\n            <li onclick=\"select_dancers([&quot;2m&quot;, &quot;2f&quot;])\">Couple-2m-2f</li>\n            <li onclick=\"select_dancers([&quot;3m&quot;, &quot;3f&quot;])\">Couple-3m-3f</li>\n            <li onclick=\"select_dancers([&quot;4m&quot;, &quot;4f&quot;])\">Couple-4m-4f</li>\n          </ul>\n        </li>\n        <li>\n          DancerState\n          <ul>\n            <li onclick=\"select_dancers([&quot;1f&quot;])\">1f</li>\n            <li onclick=\"select_dancers([&quot;1m&quot;])\">1m</li>\n            <li onclick=\"select_dancers([&quot;2f&quot;])\">2f</li>\n            <li onclick=\"select_dancers([&quot;2m&quot;])\">2m</li>\n            <li onclick=\"select_dancers([&quot;3f&quot;])\">3f</li>\n            <li onclick=\"select_dancers([&quot;3m&quot;])\">3m</li>\n            <li onclick=\"select_dancers([&quot;4f&quot;])\">4f</li>\n            <li onclick=\"select_dancers([&quot;4m&quot;])\">4m</li>\n          </ul>\n        </li>\n        <li>\n          FaceToFace\n          <ul>\n            <li onclick=\"select_dancers([&quot;1f&quot;, &quot;3m&quot;])\">FaceToFace-1f-3m</li>\n            <li onclick=\"select_dancers([&quot;1m&quot;, &quot;3f&quot;])\">FaceToFace-1m-3f</li>\n          </ul>\n        </li>\n        <li>\n          FacingCouples\n          <ul>\n            <li onclick=\"select_dancers([&quot;1m&quot;, &quot;1f&quot;, &quot;3m&quot;, &quot;3f&quot;])\">FacingCouples-1m-1f-3m-3f</li>\n          </ul>\n        </li>\n        <li>\n          FacingTandemCouples\n          <ul>\n            <li onclick=\"select_dancers([&quot;1m&quot;, &quot;1f&quot;, &quot;2m&quot;, &quot;2f&quot;, &quot;3m&quot;, &quot;3f&quot;, &quot;4m&quot;, &quot;4f&quot;])\">FacingTandemCouples-1m-1f-2m-2f-3m-3f-4m-4f</li>\n          </ul>\n        </li>\n        <li>\n          Tandem\n          <ul>\n            <li onclick=\"select_dancers([&quot;1f&quot;, &quot;2f&quot;])\">Tandem-1f-2f</li>\n            <li onclick=\"select_dancers([&quot;1m&quot;, &quot;2m&quot;])\">Tandem-1m-2m</li>\n            <li onclick=\"select_dancers([&quot;3f&quot;, &quot;4f&quot;])\">Tandem-3f-4f</li>\n            <li onclick=\"select_dancers([&quot;3m&quot;, &quot;4m&quot;])\">Tandem-3m-4m</li>\n          </ul>\n        </li>\n        <li>\n          TandemCouples\n          <ul>\n            <li onclick=\"select_dancers([&quot;1m&quot;, &quot;1f&quot;, &quot;2m&quot;, &quot;2f&quot;])\">TandemCouples-1m-1f-2m-2f</li>\n            <li onclick=\"select_dancers([&quot;3m&quot;, &quot;3f&quot;, &quot;4m&quot;, &quot;4f&quot;])\">TandemCouples-3m-3f-4m-4f</li>\n          </ul>\n        </li>\n      </ul>\n    </div>\n  </body>\n</html>","category":"page"},{"location":"formation_drawings/Tandem.html","page":"-","title":"-","text":"<html>\n  <head>\n    <meta charset=\"utf-8\"/>\n    <title>Tandem</title>\n    <script type=\"text/javascript\" src=\"../dancer_selection.js\"></script>\n    <style>\n      \n\n      svg {\n    background-color: \"gray\";\n}\ntable {\n    empty-cells: show;\n}\n.DancerState-table th {\n    text-align: center;\n    margin-left: 8em;\n    margin-right: 8em;\n}\n.DancerState-table td {\n    text-align: center;\n    margin-left: 8em;\n    margin-right: 8em;\n}\n.DirectionDot {\n    stroke: black;\n    fill: black;\n}\n\n      \n.couple1swatch {\n    color: rgb(255 0 0);\n}\n.couple1 {\n    stroke: black;\n    fill: rgb(255 0 0)\n}\n      \n\n    </style>\n  </head>\n  <body>\n    <h1>Tandem</h1>\n    <div>\n      <h2>Dancer Location and Facing Direction</h2>\n      <div class=\"DancerState-table\">\n        <table>\n          <thead>\n            <tr>\n              <th>id</th>\n              <th>dancer</th>\n              <th>time</th>\n              <th>direction</th>\n              <th>down</th>\n              <th>left</th>\n              <th>symbol</th>\n            </tr>\n            <tbody>\n              <tr>\n                <td onclick=\"select_dancers([&quot;1m&quot;])\">1m</td>\n                <td onclick=\"formation_onclick\">Dancer(1, Guy())</td>\n                <td>0</td>\n                <td>1//4</td>\n                <td>1.0</td>\n                <td>1.0</td>\n                <td>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"10.000 10.000 20.000 20.000\" width=\"20.0\" height=\"20.0\">\n                    <g>\n                      <use href=\"../dancer_symbols.svg#Guy\" transform=\"rotate(  0 20.00 20.00)\" x=\"20.0\" y=\"20.0\" width=\"20\" height=\"20\" class=\"dancer couple1\"/>\n                    </g>\n                  </svg>\n                </td>\n              </tr>\n              <tr>\n                <td onclick=\"select_dancers([&quot;1f&quot;])\">1f</td>\n                <td onclick=\"formation_onclick\">Dancer(1, Gal())</td>\n                <td>0</td>\n                <td>1//4</td>\n                <td>1.0</td>\n                <td>2.0</td>\n                <td>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"30.000 10.000 20.000 20.000\" width=\"20.0\" height=\"20.0\">\n                    <g>\n                      <use href=\"../dancer_symbols.svg#Gal\" transform=\"rotate(  0 40.00 20.00)\" x=\"40.0\" y=\"20.0\" width=\"20\" height=\"20\" class=\"dancer couple1\"/>\n                    </g>\n                  </svg>\n                </td>\n              </tr>\n            </tbody>\n          </thead>\n        </table>\n      </div>\n    </div>\n    <div>\n      <svg id=\"floor\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"10.000 10.000 40.000 20.000\" width=\"40.0\" height=\"20.0\">\n        <g>\n          <use id=\"1f\" href=\"../dancer_symbols.svg#Gal\" transform=\"rotate(  0 40.00 20.00)\" x=\"40.0\" y=\"20.0\" width=\"20\" height=\"20\" class=\"dancer couple1\"/>\n          <use id=\"1m\" href=\"../dancer_symbols.svg#Guy\" transform=\"rotate(  0 20.00 20.00)\" x=\"20.0\" y=\"20.0\" width=\"20\" height=\"20\" class=\"dancer couple1\"/>\n        </g>\n      </svg>\n    </div>\n    <div>\n      <h2>Inferred Formations</h2>\n      <ul>\n        <li>\n          DancerState\n          <ul>\n            <li onclick=\"select_dancers([&quot;1f&quot;])\">1f</li>\n            <li onclick=\"select_dancers([&quot;1m&quot;])\">1m</li>\n          </ul>\n        </li>\n        <li>\n          Tandem\n          <ul>\n            <li onclick=\"select_dancers([&quot;1f&quot;, &quot;1m&quot;])\">Tandem-1f-1m</li>\n          </ul>\n        </li>\n      </ul>\n    </div>\n  </body>\n</html>","category":"page"},{"location":"future_work/multiple_sets_of_dancers.html#Multiple-Sets-of-Dancers","page":"-","title":"Multiple Sets of Dancers","text":"","category":"section"},{"location":"future_work/multiple_sets_of_dancers.html","page":"-","title":"-","text":"At some point we might want to model more that one set of dancers at a time.  We would want to associate each dancer with the set they are in.  We want to keep Dancer immutable though.","category":"page"},{"location":"future_work/multiple_sets_of_dancers.html","page":"-","title":"-","text":"We might provide each dancer with a field for the coordinates of its flagpole center.  That would allow us to identify which dancers are in the same set.","category":"page"},{"location":"formation_hierarchy.html#Hierarchy-of-Supported-Square-Dance-Formations","page":"Supported Formations","title":"Hierarchy of Supported Square Dance Formations","text":"","category":"section"},{"location":"formation_hierarchy.html","page":"Supported Formations","title":"Supported Formations","text":"These are the formations that are currently supported, and the roles supported for those formations:","category":"page"},{"location":"formation_hierarchy.html","page":"Supported Formations","title":"Supported Formations","text":"SquareDanceFormation\nDancerState\nEightDancerFormation\nAfterEightChainOne\nBeforeEightChain\nCircleOfEight\nCompletedDoublePassThru\nFacingTandemCouples\nNQuarterTag\nQuarterTag\nThreeQuarterTag\nSquaredSet\nWaveOfEight\nLHWaveOfEight: AllButVeryCenter, Center, End, VeryCenter\nRHWaveOfEight: AllButVeryCenter, Center, End, VeryCenter\nFourDancerFormation\nBackToBackCouples\nBoxOfFour\nLHBoxOfFour\nRHBoxOfFour\nFacingCouples\nOneByFourFormation\nColumnOfFour: Center, End\nLineOfFour: Center, End\nTwoFacedLine: Center, End\nWaveOfFour\nLHWaveOfFour: Center, End\nRHWaveOfFour: Center, End\nStar: Beau, Belle\nTandemCouples\nTwoDancerFormation\nBackToBack: Leader\nCouple: Beau, Belle\nFaceToFace: Trailer\nMiniWave\nLHMiniWave: Belle\nRHMiniWave: Beau\nTandem: Leader, Trailer","category":"page"},{"location":"formation_drawings/RHBoxOfFour.html","page":"-","title":"-","text":"<html>\n  <head>\n    <meta charset=\"utf-8\"/>\n    <title>RHBoxOfFour</title>\n    <script type=\"text/javascript\" src=\"../dancer_selection.js\"></script>\n    <style>\n      \n\n      svg {\n    background-color: \"gray\";\n}\ntable {\n    empty-cells: show;\n}\n.DancerState-table th {\n    text-align: center;\n    margin-left: 8em;\n    margin-right: 8em;\n}\n.DancerState-table td {\n    text-align: center;\n    margin-left: 8em;\n    margin-right: 8em;\n}\n.DirectionDot {\n    stroke: black;\n    fill: black;\n}\n\n      \n.couple1swatch {\n    color: rgb(255 0 0);\n}\n.couple1 {\n    stroke: black;\n    fill: rgb(255 0 0)\n}\n\n.couple2swatch {\n    color: rgb(0 255 255);\n}\n.couple2 {\n    stroke: black;\n    fill: rgb(0 255 255)\n}\n      \n\n    </style>\n  </head>\n  <body>\n    <h1>RHBoxOfFour</h1>\n    <div>\n      <h2>Dancer Location and Facing Direction</h2>\n      <div class=\"DancerState-table\">\n        <table>\n          <thead>\n            <tr>\n              <th>id</th>\n              <th>dancer</th>\n              <th>time</th>\n              <th>direction</th>\n              <th>down</th>\n              <th>left</th>\n              <th>symbol</th>\n            </tr>\n            <tbody>\n              <tr>\n                <td onclick=\"select_dancers([&quot;1m&quot;])\">1m</td>\n                <td onclick=\"formation_onclick\">Dancer(1, Guy())</td>\n                <td>0</td>\n                <td>0//1</td>\n                <td>1.0</td>\n                <td>2.0</td>\n                <td>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"30.000 10.000 20.000 20.000\" width=\"20.0\" height=\"20.0\">\n                    <g>\n                      <use href=\"../dancer_symbols.svg#Guy\" transform=\"rotate( 90 40.00 20.00)\" x=\"40.0\" y=\"20.0\" width=\"20\" height=\"20\" class=\"dancer couple1\"/>\n                    </g>\n                  </svg>\n                </td>\n              </tr>\n              <tr>\n                <td onclick=\"select_dancers([&quot;1f&quot;])\">1f</td>\n                <td onclick=\"formation_onclick\">Dancer(1, Gal())</td>\n                <td>0</td>\n                <td>0//1</td>\n                <td>2.0</td>\n                <td>2.0</td>\n                <td>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"30.000 30.000 20.000 20.000\" width=\"20.0\" height=\"20.0\">\n                    <g>\n                      <use href=\"../dancer_symbols.svg#Gal\" transform=\"rotate( 90 40.00 40.00)\" x=\"40.0\" y=\"40.0\" width=\"20\" height=\"20\" class=\"dancer couple1\"/>\n                    </g>\n                  </svg>\n                </td>\n              </tr>\n              <tr>\n                <td onclick=\"select_dancers([&quot;2m&quot;])\">2m</td>\n                <td onclick=\"formation_onclick\">Dancer(2, Guy())</td>\n                <td>0</td>\n                <td>1//2</td>\n                <td>2.0</td>\n                <td>1.0</td>\n                <td>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"10.000 30.000 20.000 20.000\" width=\"20.0\" height=\"20.0\">\n                    <g>\n                      <use href=\"../dancer_symbols.svg#Guy\" transform=\"rotate(-90 20.00 40.00)\" x=\"20.0\" y=\"40.0\" width=\"20\" height=\"20\" class=\"dancer couple2\"/>\n                    </g>\n                  </svg>\n                </td>\n              </tr>\n              <tr>\n                <td onclick=\"select_dancers([&quot;2f&quot;])\">2f</td>\n                <td onclick=\"formation_onclick\">Dancer(2, Gal())</td>\n                <td>0</td>\n                <td>1//2</td>\n                <td>1.0</td>\n                <td>1.0</td>\n                <td>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"10.000 10.000 20.000 20.000\" width=\"20.0\" height=\"20.0\">\n                    <g>\n                      <use href=\"../dancer_symbols.svg#Gal\" transform=\"rotate(-90 20.00 20.00)\" x=\"20.0\" y=\"20.0\" width=\"20\" height=\"20\" class=\"dancer couple2\"/>\n                    </g>\n                  </svg>\n                </td>\n              </tr>\n            </tbody>\n          </thead>\n        </table>\n      </div>\n    </div>\n    <div>\n      <svg id=\"floor\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"10.000 10.000 40.000 40.000\" width=\"40.0\" height=\"40.0\">\n        <g>\n          <use id=\"1f\" href=\"../dancer_symbols.svg#Gal\" transform=\"rotate( 90 40.00 40.00)\" x=\"40.0\" y=\"40.0\" width=\"20\" height=\"20\" class=\"dancer couple1\"/>\n          <use id=\"2m\" href=\"../dancer_symbols.svg#Guy\" transform=\"rotate(-90 20.00 40.00)\" x=\"20.0\" y=\"40.0\" width=\"20\" height=\"20\" class=\"dancer couple2\"/>\n          <use id=\"1m\" href=\"../dancer_symbols.svg#Guy\" transform=\"rotate( 90 40.00 20.00)\" x=\"40.0\" y=\"20.0\" width=\"20\" height=\"20\" class=\"dancer couple1\"/>\n          <use id=\"2f\" href=\"../dancer_symbols.svg#Gal\" transform=\"rotate(-90 20.00 20.00)\" x=\"20.0\" y=\"20.0\" width=\"20\" height=\"20\" class=\"dancer couple2\"/>\n        </g>\n      </svg>\n    </div>\n    <div>\n      <h2>Inferred Formations</h2>\n      <ul>\n        <li>\n          DancerState\n          <ul>\n            <li onclick=\"select_dancers([&quot;1f&quot;])\">1f</li>\n            <li onclick=\"select_dancers([&quot;1m&quot;])\">1m</li>\n            <li onclick=\"select_dancers([&quot;2f&quot;])\">2f</li>\n            <li onclick=\"select_dancers([&quot;2m&quot;])\">2m</li>\n          </ul>\n        </li>\n        <li>\n          RHBoxOfFour\n          <ul>\n            <li onclick=\"select_dancers([&quot;1f&quot;, &quot;2m&quot;, &quot;1m&quot;, &quot;2f&quot;])\">RHBoxOfFour-1f-2m-1m-2f</li>\n          </ul>\n        </li>\n        <li>\n          RHMiniWave\n          <ul>\n            <li onclick=\"select_dancers([&quot;1f&quot;, &quot;2m&quot;])\">RHMiniWave-1f-2m</li>\n            <li onclick=\"select_dancers([&quot;1m&quot;, &quot;2f&quot;])\">RHMiniWave-1m-2f</li>\n          </ul>\n        </li>\n        <li>\n          Tandem\n          <ul>\n            <li onclick=\"select_dancers([&quot;1f&quot;, &quot;1m&quot;])\">Tandem-1f-1m</li>\n            <li onclick=\"select_dancers([&quot;2f&quot;, &quot;2m&quot;])\">Tandem-2f-2m</li>\n          </ul>\n        </li>\n      </ul>\n    </div>\n  </body>\n</html>","category":"page"},{"location":"formation_drawings/LineOfFour.html","page":"-","title":"-","text":"<html>\n  <head>\n    <meta charset=\"utf-8\"/>\n    <title>LineOfFour</title>\n    <script type=\"text/javascript\" src=\"../dancer_selection.js\"></script>\n    <style>\n      \n\n      svg {\n    background-color: \"gray\";\n}\ntable {\n    empty-cells: show;\n}\n.DancerState-table th {\n    text-align: center;\n    margin-left: 8em;\n    margin-right: 8em;\n}\n.DancerState-table td {\n    text-align: center;\n    margin-left: 8em;\n    margin-right: 8em;\n}\n.DirectionDot {\n    stroke: black;\n    fill: black;\n}\n\n      \n.couple1swatch {\n    color: rgb(255 0 0);\n}\n.couple1 {\n    stroke: black;\n    fill: rgb(255 0 0)\n}\n\n.couple2swatch {\n    color: rgb(0 255 255);\n}\n.couple2 {\n    stroke: black;\n    fill: rgb(0 255 255)\n}\n      \n\n    </style>\n  </head>\n  <body>\n    <h1>LineOfFour</h1>\n    <div>\n      <h2>Dancer Location and Facing Direction</h2>\n      <div class=\"DancerState-table\">\n        <table>\n          <thead>\n            <tr>\n              <th>id</th>\n              <th>dancer</th>\n              <th>time</th>\n              <th>direction</th>\n              <th>down</th>\n              <th>left</th>\n              <th>symbol</th>\n            </tr>\n            <tbody>\n              <tr>\n                <td onclick=\"select_dancers([&quot;1m&quot;])\">1m</td>\n                <td onclick=\"formation_onclick\">Dancer(1, Guy())</td>\n                <td>0</td>\n                <td>0//1</td>\n                <td>0.0</td>\n                <td>1.0</td>\n                <td>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"10.000 -10.000 20.000 20.000\" width=\"20.0\" height=\"20.0\">\n                    <g>\n                      <use href=\"../dancer_symbols.svg#Guy\" transform=\"rotate( 90 20.00 0.00)\" x=\"20.0\" y=\"0.0\" width=\"20\" height=\"20\" class=\"dancer couple1\"/>\n                    </g>\n                  </svg>\n                </td>\n              </tr>\n              <tr>\n                <td onclick=\"select_dancers([&quot;1f&quot;])\">1f</td>\n                <td onclick=\"formation_onclick\">Dancer(1, Gal())</td>\n                <td>0</td>\n                <td>0//1</td>\n                <td>0.0</td>\n                <td>2.0</td>\n                <td>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"30.000 -10.000 20.000 20.000\" width=\"20.0\" height=\"20.0\">\n                    <g>\n                      <use href=\"../dancer_symbols.svg#Gal\" transform=\"rotate( 90 40.00 0.00)\" x=\"40.0\" y=\"0.0\" width=\"20\" height=\"20\" class=\"dancer couple1\"/>\n                    </g>\n                  </svg>\n                </td>\n              </tr>\n              <tr>\n                <td onclick=\"select_dancers([&quot;2m&quot;])\">2m</td>\n                <td onclick=\"formation_onclick\">Dancer(2, Guy())</td>\n                <td>0</td>\n                <td>0//1</td>\n                <td>0.0</td>\n                <td>3.0</td>\n                <td>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"50.000 -10.000 20.000 20.000\" width=\"20.0\" height=\"20.0\">\n                    <g>\n                      <use href=\"../dancer_symbols.svg#Guy\" transform=\"rotate( 90 60.00 0.00)\" x=\"60.0\" y=\"0.0\" width=\"20\" height=\"20\" class=\"dancer couple2\"/>\n                    </g>\n                  </svg>\n                </td>\n              </tr>\n              <tr>\n                <td onclick=\"select_dancers([&quot;2f&quot;])\">2f</td>\n                <td onclick=\"formation_onclick\">Dancer(2, Gal())</td>\n                <td>0</td>\n                <td>0//1</td>\n                <td>0.0</td>\n                <td>4.0</td>\n                <td>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"70.000 -10.000 20.000 20.000\" width=\"20.0\" height=\"20.0\">\n                    <g>\n                      <use href=\"../dancer_symbols.svg#Gal\" transform=\"rotate( 90 80.00 0.00)\" x=\"80.0\" y=\"0.0\" width=\"20\" height=\"20\" class=\"dancer couple2\"/>\n                    </g>\n                  </svg>\n                </td>\n              </tr>\n            </tbody>\n          </thead>\n        </table>\n      </div>\n    </div>\n    <div>\n      <svg id=\"floor\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"10.000 -10.000 80.000 20.000\" width=\"80.0\" height=\"20.0\">\n        <g>\n          <use id=\"1f\" href=\"../dancer_symbols.svg#Gal\" transform=\"rotate( 90 40.00 0.00)\" x=\"40.0\" y=\"0.0\" width=\"20\" height=\"20\" class=\"dancer couple1\"/>\n          <use id=\"1m\" href=\"../dancer_symbols.svg#Guy\" transform=\"rotate( 90 20.00 0.00)\" x=\"20.0\" y=\"0.0\" width=\"20\" height=\"20\" class=\"dancer couple1\"/>\n          <use id=\"2f\" href=\"../dancer_symbols.svg#Gal\" transform=\"rotate( 90 80.00 0.00)\" x=\"80.0\" y=\"0.0\" width=\"20\" height=\"20\" class=\"dancer couple2\"/>\n          <use id=\"2m\" href=\"../dancer_symbols.svg#Guy\" transform=\"rotate( 90 60.00 0.00)\" x=\"60.0\" y=\"0.0\" width=\"20\" height=\"20\" class=\"dancer couple2\"/>\n        </g>\n      </svg>\n    </div>\n    <div>\n      <h2>Inferred Formations</h2>\n      <ul>\n        <li>\n          Couple\n          <ul>\n            <li onclick=\"select_dancers([&quot;1f&quot;, &quot;1m&quot;])\">Couple-1f-1m</li>\n            <li onclick=\"select_dancers([&quot;2f&quot;, &quot;2m&quot;])\">Couple-2f-2m</li>\n            <li onclick=\"select_dancers([&quot;2m&quot;, &quot;1f&quot;])\">Couple-2m-1f</li>\n          </ul>\n        </li>\n        <li>\n          DancerState\n          <ul>\n            <li onclick=\"select_dancers([&quot;1f&quot;])\">1f</li>\n            <li onclick=\"select_dancers([&quot;1m&quot;])\">1m</li>\n            <li onclick=\"select_dancers([&quot;2f&quot;])\">2f</li>\n            <li onclick=\"select_dancers([&quot;2m&quot;])\">2m</li>\n          </ul>\n        </li>\n        <li>\n          LineOfFour\n          <ul>\n            <li onclick=\"select_dancers([&quot;1f&quot;, &quot;1m&quot;, &quot;2f&quot;, &quot;2m&quot;])\">LineOfFour-1f-1m-2f-2m</li>\n          </ul>\n        </li>\n      </ul>\n    </div>\n  </body>\n</html>","category":"page"},{"location":"rule_hierarchy.html#Hierarchy-of-Knowledge-Base-Rules","page":"Rule Hierarchy","title":"Hierarchy of Knowledge Base Rules","text":"","category":"section"},{"location":"rule_hierarchy.html","page":"Rule Hierarchy","title":"Rule Hierarchy","text":"These are the knowledge base rules we use:","category":"page"},{"location":"rule_hierarchy.html","page":"Rule Hierarchy","title":"Rule Hierarchy","text":"Rule: \nSquareDanceRule: \nOriginalPartnerRule: OriginalPartners\nSquareDanceFormationRule: \nAfterEightChainOneRule: AfterEightChainOne\nAttendanceRule: AllPresent\nBeforeEightChainRule: BeforeEightChain\nBoxOfFourRule: LHBoxOfFour, RHBoxOfFour\nCircleOfEightFormationRule: CircleOfEight\nColumnOfFourRule: ColumnOfFour\nCompletedDoublePassThruRule: CompletedDoublePassThru\nCoupleBoxRule: BackToBackCouples, FacingCouples, TandemCouples\nFacingTandemCouplesRule: FacingTandemCouples\nLineOfFourRule: LineOfFour\nQuarterTagRule: QuarterTag\nSDSquareHasAttendanceRule: Attendance\nSquareDanceReasoning.CatchConflictingDancerStates: \nSquareDanceReasoning.QTWCTRule: SquareDanceReasoning.QTWCT\nSquaredSetFormationRule: SquaredSet\nStarRule: Star\nThreeQuarterTagRule: ThreeQuarterTag\nTwoDancerFormationsRule: BackToBack, Couple, FaceToFace, LHMiniWave, RHMiniWave, Tandem\nTwoFacedLineRule: TwoFacedLine\nWaveOfEightRule: LHWaveOfEight, RHWaveOfEight\nWaveOfFourRule: LHWaveOfFour, RHWaveOfFour\nSquareHasDancers: Dancer","category":"page"},{"location":"formation_drawings/CircleOfEight.html","page":"-","title":"-","text":"<html>\n  <head>\n    <meta charset=\"utf-8\"/>\n    <title>CircleOfEight</title>\n    <script type=\"text/javascript\" src=\"../dancer_selection.js\"></script>\n    <style>\n      \n\n      svg {\n    background-color: \"gray\";\n}\ntable {\n    empty-cells: show;\n}\n.DancerState-table th {\n    text-align: center;\n    margin-left: 8em;\n    margin-right: 8em;\n}\n.DancerState-table td {\n    text-align: center;\n    margin-left: 8em;\n    margin-right: 8em;\n}\n.DirectionDot {\n    stroke: black;\n    fill: black;\n}\n\n      \n.couple1swatch {\n    color: rgb(255 0 0);\n}\n.couple1 {\n    stroke: black;\n    fill: rgb(255 0 0)\n}\n\n.couple2swatch {\n    color: rgb(255 255 0);\n}\n.couple2 {\n    stroke: black;\n    fill: rgb(255 255 0)\n}\n\n.couple3swatch {\n    color: rgb(0 255 255);\n}\n.couple3 {\n    stroke: black;\n    fill: rgb(0 255 255)\n}\n\n.couple4swatch {\n    color: rgb(255 0 255);\n}\n.couple4 {\n    stroke: black;\n    fill: rgb(255 0 255)\n}\n      \n\n    </style>\n  </head>\n  <body>\n    <h1>CircleOfEight</h1>\n    <div>\n      <h2>Dancer Location and Facing Direction</h2>\n      <div class=\"DancerState-table\">\n        <table>\n          <thead>\n            <tr>\n              <th>id</th>\n              <th>dancer</th>\n              <th>time</th>\n              <th>direction</th>\n              <th>down</th>\n              <th>left</th>\n              <th>symbol</th>\n            </tr>\n            <tbody>\n              <tr>\n                <td onclick=\"select_dancers([&quot;1m&quot;])\">1m</td>\n                <td onclick=\"formation_onclick\">Dancer(1, Guy())</td>\n                <td>0</td>\n                <td>0//1</td>\n                <td>-1.5</td>\n                <td>0.5</td>\n                <td>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0.000 -40.000 20.000 20.000\" width=\"20.0\" height=\"20.0\">\n                    <g>\n                      <use href=\"../dancer_symbols.svg#Guy\" transform=\"rotate( 90 10.00 -30.00)\" x=\"10.0\" y=\"-30.0\" width=\"20\" height=\"20\" class=\"dancer couple1\"/>\n                    </g>\n                  </svg>\n                </td>\n              </tr>\n              <tr>\n                <td onclick=\"select_dancers([&quot;1f&quot;])\">1f</td>\n                <td onclick=\"formation_onclick\">Dancer(1, Gal())</td>\n                <td>0</td>\n                <td>0//1</td>\n                <td>-1.5</td>\n                <td>-0.5</td>\n                <td>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"-20.000 -40.000 20.000 20.000\" width=\"20.0\" height=\"20.0\">\n                    <g>\n                      <use href=\"../dancer_symbols.svg#Gal\" transform=\"rotate( 90 -10.00 -30.00)\" x=\"-10.0\" y=\"-30.0\" width=\"20\" height=\"20\" class=\"dancer couple1\"/>\n                    </g>\n                  </svg>\n                </td>\n              </tr>\n              <tr>\n                <td onclick=\"select_dancers([&quot;2m&quot;])\">2m</td>\n                <td onclick=\"formation_onclick\">Dancer(2, Guy())</td>\n                <td>0</td>\n                <td>1//4</td>\n                <td>-0.5</td>\n                <td>-1.5</td>\n                <td>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"-40.000 -20.000 20.000 20.000\" width=\"20.0\" height=\"20.0\">\n                    <g>\n                      <use href=\"../dancer_symbols.svg#Guy\" transform=\"rotate(  0 -30.00 -10.00)\" x=\"-30.0\" y=\"-10.0\" width=\"20\" height=\"20\" class=\"dancer couple2\"/>\n                    </g>\n                  </svg>\n                </td>\n              </tr>\n              <tr>\n                <td onclick=\"select_dancers([&quot;2f&quot;])\">2f</td>\n                <td onclick=\"formation_onclick\">Dancer(2, Gal())</td>\n                <td>0</td>\n                <td>1//4</td>\n                <td>0.5</td>\n                <td>-1.5</td>\n                <td>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"-40.000 0.000 20.000 20.000\" width=\"20.0\" height=\"20.0\">\n                    <g>\n                      <use href=\"../dancer_symbols.svg#Gal\" transform=\"rotate(  0 -30.00 10.00)\" x=\"-30.0\" y=\"10.0\" width=\"20\" height=\"20\" class=\"dancer couple2\"/>\n                    </g>\n                  </svg>\n                </td>\n              </tr>\n              <tr>\n                <td onclick=\"select_dancers([&quot;3m&quot;])\">3m</td>\n                <td onclick=\"formation_onclick\">Dancer(3, Guy())</td>\n                <td>0</td>\n                <td>1//2</td>\n                <td>1.5</td>\n                <td>-0.5</td>\n                <td>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"-20.000 20.000 20.000 20.000\" width=\"20.0\" height=\"20.0\">\n                    <g>\n                      <use href=\"../dancer_symbols.svg#Guy\" transform=\"rotate(-90 -10.00 30.00)\" x=\"-10.0\" y=\"30.0\" width=\"20\" height=\"20\" class=\"dancer couple3\"/>\n                    </g>\n                  </svg>\n                </td>\n              </tr>\n              <tr>\n                <td onclick=\"select_dancers([&quot;3f&quot;])\">3f</td>\n                <td onclick=\"formation_onclick\">Dancer(3, Gal())</td>\n                <td>0</td>\n                <td>1//2</td>\n                <td>1.5</td>\n                <td>0.5</td>\n                <td>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0.000 20.000 20.000 20.000\" width=\"20.0\" height=\"20.0\">\n                    <g>\n                      <use href=\"../dancer_symbols.svg#Gal\" transform=\"rotate(-90 10.00 30.00)\" x=\"10.0\" y=\"30.0\" width=\"20\" height=\"20\" class=\"dancer couple3\"/>\n                    </g>\n                  </svg>\n                </td>\n              </tr>\n              <tr>\n                <td onclick=\"select_dancers([&quot;4m&quot;])\">4m</td>\n                <td onclick=\"formation_onclick\">Dancer(4, Guy())</td>\n                <td>0</td>\n                <td>3//4</td>\n                <td>0.5</td>\n                <td>1.5</td>\n                <td>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"20.000 0.000 20.000 20.000\" width=\"20.0\" height=\"20.0\">\n                    <g>\n                      <use href=\"../dancer_symbols.svg#Guy\" transform=\"rotate(-180 30.00 10.00)\" x=\"30.0\" y=\"10.0\" width=\"20\" height=\"20\" class=\"dancer couple4\"/>\n                    </g>\n                  </svg>\n                </td>\n              </tr>\n              <tr>\n                <td onclick=\"select_dancers([&quot;4f&quot;])\">4f</td>\n                <td onclick=\"formation_onclick\">Dancer(4, Gal())</td>\n                <td>0</td>\n                <td>3//4</td>\n                <td>-0.5</td>\n                <td>1.5</td>\n                <td>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"20.000 -20.000 20.000 20.000\" width=\"20.0\" height=\"20.0\">\n                    <g>\n                      <use href=\"../dancer_symbols.svg#Gal\" transform=\"rotate(-180 30.00 -10.00)\" x=\"30.0\" y=\"-10.0\" width=\"20\" height=\"20\" class=\"dancer couple4\"/>\n                    </g>\n                  </svg>\n                </td>\n              </tr>\n            </tbody>\n          </thead>\n        </table>\n      </div>\n    </div>\n    <div>\n      <svg id=\"floor\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"-40.000 -40.000 80.000 80.000\" width=\"80.0\" height=\"80.0\">\n        <g>\n          <use id=\"3f\" href=\"../dancer_symbols.svg#Gal\" transform=\"rotate(-90 10.00 30.00)\" x=\"10.0\" y=\"30.0\" width=\"20\" height=\"20\" class=\"dancer couple3\"/>\n          <use id=\"4m\" href=\"../dancer_symbols.svg#Guy\" transform=\"rotate(-180 30.00 10.00)\" x=\"30.0\" y=\"10.0\" width=\"20\" height=\"20\" class=\"dancer couple4\"/>\n          <use id=\"4f\" href=\"../dancer_symbols.svg#Gal\" transform=\"rotate(-180 30.00 -10.00)\" x=\"30.0\" y=\"-10.0\" width=\"20\" height=\"20\" class=\"dancer couple4\"/>\n          <use id=\"1m\" href=\"../dancer_symbols.svg#Guy\" transform=\"rotate( 90 10.00 -30.00)\" x=\"10.0\" y=\"-30.0\" width=\"20\" height=\"20\" class=\"dancer couple1\"/>\n          <use id=\"1f\" href=\"../dancer_symbols.svg#Gal\" transform=\"rotate( 90 -10.00 -30.00)\" x=\"-10.0\" y=\"-30.0\" width=\"20\" height=\"20\" class=\"dancer couple1\"/>\n          <use id=\"2m\" href=\"../dancer_symbols.svg#Guy\" transform=\"rotate(  0 -30.00 -10.00)\" x=\"-30.0\" y=\"-10.0\" width=\"20\" height=\"20\" class=\"dancer couple2\"/>\n          <use id=\"2f\" href=\"../dancer_symbols.svg#Gal\" transform=\"rotate(  0 -30.00 10.00)\" x=\"-30.0\" y=\"10.0\" width=\"20\" height=\"20\" class=\"dancer couple2\"/>\n          <use id=\"3m\" href=\"../dancer_symbols.svg#Guy\" transform=\"rotate(-90 -10.00 30.00)\" x=\"-10.0\" y=\"30.0\" width=\"20\" height=\"20\" class=\"dancer couple3\"/>\n        </g>\n      </svg>\n    </div>\n    <div>\n      <h2>Inferred Formations</h2>\n      <ul>\n        <li>\n          CircleOfEight\n          <ul>\n            <li onclick=\"select_dancers([&quot;3f&quot;, &quot;4m&quot;, &quot;4f&quot;, &quot;1m&quot;, &quot;1f&quot;, &quot;2m&quot;, &quot;2f&quot;, &quot;3m&quot;])\">CircleOfEight-3f-4m-4f-1m-1f-2m-2f-3m</li>\n          </ul>\n        </li>\n        <li>\n          Couple\n          <ul>\n            <li onclick=\"select_dancers([&quot;1m&quot;, &quot;1f&quot;])\">Couple-1m-1f</li>\n            <li onclick=\"select_dancers([&quot;2m&quot;, &quot;2f&quot;])\">Couple-2m-2f</li>\n            <li onclick=\"select_dancers([&quot;3m&quot;, &quot;3f&quot;])\">Couple-3m-3f</li>\n            <li onclick=\"select_dancers([&quot;4m&quot;, &quot;4f&quot;])\">Couple-4m-4f</li>\n          </ul>\n        </li>\n        <li>\n          DancerState\n          <ul>\n            <li onclick=\"select_dancers([&quot;1f&quot;])\">1f</li>\n            <li onclick=\"select_dancers([&quot;1m&quot;])\">1m</li>\n            <li onclick=\"select_dancers([&quot;2f&quot;])\">2f</li>\n            <li onclick=\"select_dancers([&quot;2m&quot;])\">2m</li>\n            <li onclick=\"select_dancers([&quot;3f&quot;])\">3f</li>\n            <li onclick=\"select_dancers([&quot;3m&quot;])\">3m</li>\n            <li onclick=\"select_dancers([&quot;4f&quot;])\">4f</li>\n            <li onclick=\"select_dancers([&quot;4m&quot;])\">4m</li>\n          </ul>\n        </li>\n        <li>\n          FaceToFace\n          <ul>\n            <li onclick=\"select_dancers([&quot;1f&quot;, &quot;3m&quot;])\">FaceToFace-1f-3m</li>\n            <li onclick=\"select_dancers([&quot;1m&quot;, &quot;3f&quot;])\">FaceToFace-1m-3f</li>\n            <li onclick=\"select_dancers([&quot;2f&quot;, &quot;4m&quot;])\">FaceToFace-2f-4m</li>\n            <li onclick=\"select_dancers([&quot;2m&quot;, &quot;4f&quot;])\">FaceToFace-2m-4f</li>\n          </ul>\n        </li>\n        <li>\n          FacingCouples\n          <ul>\n            <li onclick=\"select_dancers([&quot;1m&quot;, &quot;1f&quot;, &quot;3m&quot;, &quot;3f&quot;])\">FacingCouples-1m-1f-3m-3f</li>\n            <li onclick=\"select_dancers([&quot;2m&quot;, &quot;2f&quot;, &quot;4m&quot;, &quot;4f&quot;])\">FacingCouples-2m-2f-4m-4f</li>\n          </ul>\n        </li>\n        <li>\n          SquaredSet\n          <ul>\n            <li onclick=\"select_dancers([&quot;1m&quot;, &quot;1f&quot;, &quot;3m&quot;, &quot;3f&quot;, &quot;2m&quot;, &quot;2f&quot;, &quot;4m&quot;, &quot;4f&quot;])\">SquaredSet-1m-1f-3m-3f-2m-2f-4m-4f</li>\n          </ul>\n        </li>\n      </ul>\n    </div>\n  </body>\n</html>","category":"page"},{"location":"formation_drawings/ColumnOfFour.html","page":"-","title":"-","text":"<html>\n  <head>\n    <meta charset=\"utf-8\"/>\n    <title>ColumnOfFour</title>\n    <script type=\"text/javascript\" src=\"../dancer_selection.js\"></script>\n    <style>\n      \n\n      svg {\n    background-color: \"gray\";\n}\ntable {\n    empty-cells: show;\n}\n.DancerState-table th {\n    text-align: center;\n    margin-left: 8em;\n    margin-right: 8em;\n}\n.DancerState-table td {\n    text-align: center;\n    margin-left: 8em;\n    margin-right: 8em;\n}\n.DirectionDot {\n    stroke: black;\n    fill: black;\n}\n\n      \n.couple1swatch {\n    color: rgb(255 0 0);\n}\n.couple1 {\n    stroke: black;\n    fill: rgb(255 0 0)\n}\n\n.couple2swatch {\n    color: rgb(0 255 255);\n}\n.couple2 {\n    stroke: black;\n    fill: rgb(0 255 255)\n}\n      \n\n    </style>\n  </head>\n  <body>\n    <h1>ColumnOfFour</h1>\n    <div>\n      <h2>Dancer Location and Facing Direction</h2>\n      <div class=\"DancerState-table\">\n        <table>\n          <thead>\n            <tr>\n              <th>id</th>\n              <th>dancer</th>\n              <th>time</th>\n              <th>direction</th>\n              <th>down</th>\n              <th>left</th>\n              <th>symbol</th>\n            </tr>\n            <tbody>\n              <tr>\n                <td onclick=\"select_dancers([&quot;1m&quot;])\">1m</td>\n                <td onclick=\"formation_onclick\">Dancer(1, Guy())</td>\n                <td>0</td>\n                <td>1//4</td>\n                <td>0.0</td>\n                <td>1.0</td>\n                <td>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"10.000 -10.000 20.000 20.000\" width=\"20.0\" height=\"20.0\">\n                    <g>\n                      <use href=\"../dancer_symbols.svg#Guy\" transform=\"rotate(  0 20.00 0.00)\" x=\"20.0\" y=\"0.0\" width=\"20\" height=\"20\" class=\"dancer couple1\"/>\n                    </g>\n                  </svg>\n                </td>\n              </tr>\n              <tr>\n                <td onclick=\"select_dancers([&quot;1f&quot;])\">1f</td>\n                <td onclick=\"formation_onclick\">Dancer(1, Gal())</td>\n                <td>0</td>\n                <td>1//4</td>\n                <td>0.0</td>\n                <td>2.0</td>\n                <td>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"30.000 -10.000 20.000 20.000\" width=\"20.0\" height=\"20.0\">\n                    <g>\n                      <use href=\"../dancer_symbols.svg#Gal\" transform=\"rotate(  0 40.00 0.00)\" x=\"40.0\" y=\"0.0\" width=\"20\" height=\"20\" class=\"dancer couple1\"/>\n                    </g>\n                  </svg>\n                </td>\n              </tr>\n              <tr>\n                <td onclick=\"select_dancers([&quot;2m&quot;])\">2m</td>\n                <td onclick=\"formation_onclick\">Dancer(2, Guy())</td>\n                <td>0</td>\n                <td>1//4</td>\n                <td>0.0</td>\n                <td>3.0</td>\n                <td>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"50.000 -10.000 20.000 20.000\" width=\"20.0\" height=\"20.0\">\n                    <g>\n                      <use href=\"../dancer_symbols.svg#Guy\" transform=\"rotate(  0 60.00 0.00)\" x=\"60.0\" y=\"0.0\" width=\"20\" height=\"20\" class=\"dancer couple2\"/>\n                    </g>\n                  </svg>\n                </td>\n              </tr>\n              <tr>\n                <td onclick=\"select_dancers([&quot;2f&quot;])\">2f</td>\n                <td onclick=\"formation_onclick\">Dancer(2, Gal())</td>\n                <td>0</td>\n                <td>1//4</td>\n                <td>0.0</td>\n                <td>4.0</td>\n                <td>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"70.000 -10.000 20.000 20.000\" width=\"20.0\" height=\"20.0\">\n                    <g>\n                      <use href=\"../dancer_symbols.svg#Gal\" transform=\"rotate(  0 80.00 0.00)\" x=\"80.0\" y=\"0.0\" width=\"20\" height=\"20\" class=\"dancer couple2\"/>\n                    </g>\n                  </svg>\n                </td>\n              </tr>\n            </tbody>\n          </thead>\n        </table>\n      </div>\n    </div>\n    <div>\n      <svg id=\"floor\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"10.000 -10.000 80.000 20.000\" width=\"80.0\" height=\"20.0\">\n        <g>\n          <use id=\"2f\" href=\"../dancer_symbols.svg#Gal\" transform=\"rotate(  0 80.00 0.00)\" x=\"80.0\" y=\"0.0\" width=\"20\" height=\"20\" class=\"dancer couple2\"/>\n          <use id=\"2m\" href=\"../dancer_symbols.svg#Guy\" transform=\"rotate(  0 60.00 0.00)\" x=\"60.0\" y=\"0.0\" width=\"20\" height=\"20\" class=\"dancer couple2\"/>\n          <use id=\"1f\" href=\"../dancer_symbols.svg#Gal\" transform=\"rotate(  0 40.00 0.00)\" x=\"40.0\" y=\"0.0\" width=\"20\" height=\"20\" class=\"dancer couple1\"/>\n          <use id=\"1m\" href=\"../dancer_symbols.svg#Guy\" transform=\"rotate(  0 20.00 0.00)\" x=\"20.0\" y=\"0.0\" width=\"20\" height=\"20\" class=\"dancer couple1\"/>\n        </g>\n      </svg>\n    </div>\n    <div>\n      <h2>Inferred Formations</h2>\n      <ul>\n        <li>\n          ColumnOfFour\n          <ul>\n            <li onclick=\"select_dancers([&quot;2f&quot;, &quot;2m&quot;, &quot;1f&quot;, &quot;1m&quot;])\">ColumnOfFour-2f-2m-1f-1m</li>\n          </ul>\n        </li>\n        <li>\n          DancerState\n          <ul>\n            <li onclick=\"select_dancers([&quot;1f&quot;])\">1f</li>\n            <li onclick=\"select_dancers([&quot;1m&quot;])\">1m</li>\n            <li onclick=\"select_dancers([&quot;2f&quot;])\">2f</li>\n            <li onclick=\"select_dancers([&quot;2m&quot;])\">2m</li>\n          </ul>\n        </li>\n        <li>\n          Tandem\n          <ul>\n            <li onclick=\"select_dancers([&quot;1f&quot;, &quot;1m&quot;])\">Tandem-1f-1m</li>\n            <li onclick=\"select_dancers([&quot;2f&quot;, &quot;2m&quot;])\">Tandem-2f-2m</li>\n            <li onclick=\"select_dancers([&quot;2m&quot;, &quot;1f&quot;])\">Tandem-2m-1f</li>\n          </ul>\n        </li>\n      </ul>\n    </div>\n  </body>\n</html>","category":"page"},{"location":"call_processing.html#Processing-a-Square-Dance-Call","page":"Call Processing","title":"Processing a Square Dance Call","text":"","category":"section"},{"location":"call_processing.html","page":"Call Processing","title":"Call Processing","text":"Every square dance call is represented by an instance of a subtype of `SquareDanceCall.  Every instance has a [role](@ref) field which can be used to restrict the call to only some dancers, for example OriginalHead or Center.  Some calls might have additional fields that inform a handedness (e.g. PullBy) or a count (SquareThru).","category":"page"},{"location":"call_processing.html","page":"Call Processing","title":"Call Processing","text":"The function do_call is the entry point for performing a square dance call.  It is passed the current knowledge base (a ReteRootNode) and the call to be performed.  The knowledge base already knows the current location and facing direction of each dancer, and has concluded all of the formations they are in.","category":"page"},{"location":"call_processing.html","page":"Call Processing","title":"Call Processing","text":"do_call creates a CallSchedule and schedules the call to that schedule. do_call then calls do_schedule, passing it the schedule and the knowledge base.","category":"page"},{"location":"call_processing.html","page":"Call Processing","title":"Call Processing","text":"do_schedule dequeues calls from the schedule.  It calls [get_call_options] to identify formations in the knowledge base that match the call's role filed and the result of calling can_do_from.  do_schedule calls expand_parts with the call and the appropriate formation.  If there is an expansion, those parts are placed in the schedule.  Otherwise perform is called to perform the call.","category":"page"},{"location":"call_processing.html","page":"Call Processing","title":"Call Processing","text":"There is a method of can_do_from for each combination of square dance call and formation.  can_do_from returns a preference number that imposes a preference order on each combination of call and formation.  A preference value of 0 indicates that the call can not be performed from that formation (or that it is not yet implemented). A positive preference value is returned if the call can be performed from that formation.  A higher preference value is preferred over a lower one.  For example, UTurnBack from Couple is preferable to UTurnBack from a single dancer (represented as a DancerState) because Couple furter informs correct turning direction.  A call like AndRoll need only be implemented for a single dancer (DancerState) because the dancer's rotational flow can be determined from there (via the previous chain).","category":"page"},{"location":"call_processing.html","page":"Call Processing","title":"Call Processing","text":"get_call_options is pretty complicated.  Consider a right handed tidal wave (RHWaveOfEight).  it includes 7 two dancer formations: four RHMiniWaves and three LHMiniWaves.  If there is only one CanDoCall concerning a dancer after the preference sorting, then that CanDoCall will be included in the results of get_call_options.  Any CanDoCall whose formation includes a dancer that is already included in the result set is discarded.  get_call_options loops over these two operations: adding to the result set and eliminating overlaps, until all CanDoCall objects have been considered.  get_call_options finally returns those results – a vector of CanDoCall objects that concern disjoint formations.","category":"page"},{"location":"call_processing.html","page":"Call Processing","title":"Call Processing","text":"Once do_schedule has processed all of the schedule entries for a given time value, it calls `breatheto spread dancers apart if any overlap.doschedulethen makes sure the dancers are all synchronized and updates the knowledge base (actually, it creates and populates a new one because the Rete package doesn't support retraction).  If the schedule is not yet empty thendoschedule` continues as above.","category":"page"},{"location":"formation_drawings/LHMiniWave.html","page":"-","title":"-","text":"<html>\n  <head>\n    <meta charset=\"utf-8\"/>\n    <title>LHMiniWave</title>\n    <script type=\"text/javascript\" src=\"../dancer_selection.js\"></script>\n    <style>\n      \n\n      svg {\n    background-color: \"gray\";\n}\ntable {\n    empty-cells: show;\n}\n.DancerState-table th {\n    text-align: center;\n    margin-left: 8em;\n    margin-right: 8em;\n}\n.DancerState-table td {\n    text-align: center;\n    margin-left: 8em;\n    margin-right: 8em;\n}\n.DirectionDot {\n    stroke: black;\n    fill: black;\n}\n\n      \n.couple1swatch {\n    color: rgb(255 0 0);\n}\n.couple1 {\n    stroke: black;\n    fill: rgb(255 0 0)\n}\n      \n\n    </style>\n  </head>\n  <body>\n    <h1>LHMiniWave</h1>\n    <div>\n      <h2>Dancer Location and Facing Direction</h2>\n      <div class=\"DancerState-table\">\n        <table>\n          <thead>\n            <tr>\n              <th>id</th>\n              <th>dancer</th>\n              <th>time</th>\n              <th>direction</th>\n              <th>down</th>\n              <th>left</th>\n              <th>symbol</th>\n            </tr>\n            <tbody>\n              <tr>\n                <td onclick=\"select_dancers([&quot;1m&quot;])\">1m</td>\n                <td onclick=\"formation_onclick\">Dancer(1, Guy())</td>\n                <td>0</td>\n                <td>0//1</td>\n                <td>1.0</td>\n                <td>1.0</td>\n                <td>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"10.000 10.000 20.000 20.000\" width=\"20.0\" height=\"20.0\">\n                    <g>\n                      <use href=\"../dancer_symbols.svg#Guy\" transform=\"rotate( 90 20.00 20.00)\" x=\"20.0\" y=\"20.0\" width=\"20\" height=\"20\" class=\"dancer couple1\"/>\n                    </g>\n                  </svg>\n                </td>\n              </tr>\n              <tr>\n                <td onclick=\"select_dancers([&quot;1f&quot;])\">1f</td>\n                <td onclick=\"formation_onclick\">Dancer(1, Gal())</td>\n                <td>0</td>\n                <td>1//2</td>\n                <td>1.0</td>\n                <td>2.0</td>\n                <td>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"30.000 10.000 20.000 20.000\" width=\"20.0\" height=\"20.0\">\n                    <g>\n                      <use href=\"../dancer_symbols.svg#Gal\" transform=\"rotate(-90 40.00 20.00)\" x=\"40.0\" y=\"20.0\" width=\"20\" height=\"20\" class=\"dancer couple1\"/>\n                    </g>\n                  </svg>\n                </td>\n              </tr>\n            </tbody>\n          </thead>\n        </table>\n      </div>\n    </div>\n    <div>\n      <svg id=\"floor\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"10.000 10.000 40.000 20.000\" width=\"40.0\" height=\"20.0\">\n        <g>\n          <use id=\"1m\" href=\"../dancer_symbols.svg#Guy\" transform=\"rotate( 90 20.00 20.00)\" x=\"20.0\" y=\"20.0\" width=\"20\" height=\"20\" class=\"dancer couple1\"/>\n          <use id=\"1f\" href=\"../dancer_symbols.svg#Gal\" transform=\"rotate(-90 40.00 20.00)\" x=\"40.0\" y=\"20.0\" width=\"20\" height=\"20\" class=\"dancer couple1\"/>\n        </g>\n      </svg>\n    </div>\n    <div>\n      <h2>Inferred Formations</h2>\n      <ul>\n        <li>\n          DancerState\n          <ul>\n            <li onclick=\"select_dancers([&quot;1f&quot;])\">1f</li>\n            <li onclick=\"select_dancers([&quot;1m&quot;])\">1m</li>\n          </ul>\n        </li>\n        <li>\n          LHMiniWave\n          <ul>\n            <li onclick=\"select_dancers([&quot;1m&quot;, &quot;1f&quot;])\">LHMiniWave-1m-1f</li>\n          </ul>\n        </li>\n      </ul>\n    </div>\n  </body>\n</html>","category":"page"},{"location":"formation_drawings/RHMiniWave.html","page":"-","title":"-","text":"<html>\n  <head>\n    <meta charset=\"utf-8\"/>\n    <title>RHMiniWave</title>\n    <script type=\"text/javascript\" src=\"../dancer_selection.js\"></script>\n    <style>\n      \n\n      svg {\n    background-color: \"gray\";\n}\ntable {\n    empty-cells: show;\n}\n.DancerState-table th {\n    text-align: center;\n    margin-left: 8em;\n    margin-right: 8em;\n}\n.DancerState-table td {\n    text-align: center;\n    margin-left: 8em;\n    margin-right: 8em;\n}\n.DirectionDot {\n    stroke: black;\n    fill: black;\n}\n\n      \n.couple1swatch {\n    color: rgb(255 0 0);\n}\n.couple1 {\n    stroke: black;\n    fill: rgb(255 0 0)\n}\n      \n\n    </style>\n  </head>\n  <body>\n    <h1>RHMiniWave</h1>\n    <div>\n      <h2>Dancer Location and Facing Direction</h2>\n      <div class=\"DancerState-table\">\n        <table>\n          <thead>\n            <tr>\n              <th>id</th>\n              <th>dancer</th>\n              <th>time</th>\n              <th>direction</th>\n              <th>down</th>\n              <th>left</th>\n              <th>symbol</th>\n            </tr>\n            <tbody>\n              <tr>\n                <td onclick=\"select_dancers([&quot;1m&quot;])\">1m</td>\n                <td onclick=\"formation_onclick\">Dancer(1, Guy())</td>\n                <td>0</td>\n                <td>1//2</td>\n                <td>1.0</td>\n                <td>1.0</td>\n                <td>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"10.000 10.000 20.000 20.000\" width=\"20.0\" height=\"20.0\">\n                    <g>\n                      <use href=\"../dancer_symbols.svg#Guy\" transform=\"rotate(-90 20.00 20.00)\" x=\"20.0\" y=\"20.0\" width=\"20\" height=\"20\" class=\"dancer couple1\"/>\n                    </g>\n                  </svg>\n                </td>\n              </tr>\n              <tr>\n                <td onclick=\"select_dancers([&quot;1f&quot;])\">1f</td>\n                <td onclick=\"formation_onclick\">Dancer(1, Gal())</td>\n                <td>0</td>\n                <td>0//1</td>\n                <td>1.0</td>\n                <td>2.0</td>\n                <td>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"30.000 10.000 20.000 20.000\" width=\"20.0\" height=\"20.0\">\n                    <g>\n                      <use href=\"../dancer_symbols.svg#Gal\" transform=\"rotate( 90 40.00 20.00)\" x=\"40.0\" y=\"20.0\" width=\"20\" height=\"20\" class=\"dancer couple1\"/>\n                    </g>\n                  </svg>\n                </td>\n              </tr>\n            </tbody>\n          </thead>\n        </table>\n      </div>\n    </div>\n    <div>\n      <svg id=\"floor\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"10.000 10.000 40.000 20.000\" width=\"40.0\" height=\"20.0\">\n        <g>\n          <use id=\"1f\" href=\"../dancer_symbols.svg#Gal\" transform=\"rotate( 90 40.00 20.00)\" x=\"40.0\" y=\"20.0\" width=\"20\" height=\"20\" class=\"dancer couple1\"/>\n          <use id=\"1m\" href=\"../dancer_symbols.svg#Guy\" transform=\"rotate(-90 20.00 20.00)\" x=\"20.0\" y=\"20.0\" width=\"20\" height=\"20\" class=\"dancer couple1\"/>\n        </g>\n      </svg>\n    </div>\n    <div>\n      <h2>Inferred Formations</h2>\n      <ul>\n        <li>\n          DancerState\n          <ul>\n            <li onclick=\"select_dancers([&quot;1f&quot;])\">1f</li>\n            <li onclick=\"select_dancers([&quot;1m&quot;])\">1m</li>\n          </ul>\n        </li>\n        <li>\n          RHMiniWave\n          <ul>\n            <li onclick=\"select_dancers([&quot;1f&quot;, &quot;1m&quot;])\">RHMiniWave-1f-1m</li>\n          </ul>\n        </li>\n      </ul>\n    </div>\n  </body>\n</html>","category":"page"},{"location":"formation_drawings/SquaredSet.html","page":"-","title":"-","text":"<html>\n  <head>\n    <meta charset=\"utf-8\"/>\n    <title>SquaredSet</title>\n    <script type=\"text/javascript\" src=\"../dancer_selection.js\"></script>\n    <style>\n      \n\n      svg {\n    background-color: \"gray\";\n}\ntable {\n    empty-cells: show;\n}\n.DancerState-table th {\n    text-align: center;\n    margin-left: 8em;\n    margin-right: 8em;\n}\n.DancerState-table td {\n    text-align: center;\n    margin-left: 8em;\n    margin-right: 8em;\n}\n.DirectionDot {\n    stroke: black;\n    fill: black;\n}\n\n      \n.couple1swatch {\n    color: rgb(255 0 0);\n}\n.couple1 {\n    stroke: black;\n    fill: rgb(255 0 0)\n}\n\n.couple2swatch {\n    color: rgb(255 255 0);\n}\n.couple2 {\n    stroke: black;\n    fill: rgb(255 255 0)\n}\n\n.couple3swatch {\n    color: rgb(0 255 255);\n}\n.couple3 {\n    stroke: black;\n    fill: rgb(0 255 255)\n}\n\n.couple4swatch {\n    color: rgb(255 0 255);\n}\n.couple4 {\n    stroke: black;\n    fill: rgb(255 0 255)\n}\n      \n\n    </style>\n  </head>\n  <body>\n    <h1>SquaredSet</h1>\n    <div>\n      <h2>Dancer Location and Facing Direction</h2>\n      <div class=\"DancerState-table\">\n        <table>\n          <thead>\n            <tr>\n              <th>id</th>\n              <th>dancer</th>\n              <th>time</th>\n              <th>direction</th>\n              <th>down</th>\n              <th>left</th>\n              <th>symbol</th>\n            </tr>\n            <tbody>\n              <tr>\n                <td onclick=\"select_dancers([&quot;1m&quot;])\">1m</td>\n                <td onclick=\"formation_onclick\">Dancer(1, Guy())</td>\n                <td>0</td>\n                <td>0//1</td>\n                <td>-1.5</td>\n                <td>0.5</td>\n                <td>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0.000 -40.000 20.000 20.000\" width=\"20.0\" height=\"20.0\">\n                    <g>\n                      <use href=\"../dancer_symbols.svg#Guy\" transform=\"rotate( 90 10.00 -30.00)\" x=\"10.0\" y=\"-30.0\" width=\"20\" height=\"20\" class=\"dancer couple1\"/>\n                    </g>\n                  </svg>\n                </td>\n              </tr>\n              <tr>\n                <td onclick=\"select_dancers([&quot;1f&quot;])\">1f</td>\n                <td onclick=\"formation_onclick\">Dancer(1, Gal())</td>\n                <td>0</td>\n                <td>0//1</td>\n                <td>-1.5</td>\n                <td>-0.5</td>\n                <td>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"-20.000 -40.000 20.000 20.000\" width=\"20.0\" height=\"20.0\">\n                    <g>\n                      <use href=\"../dancer_symbols.svg#Gal\" transform=\"rotate( 90 -10.00 -30.00)\" x=\"-10.0\" y=\"-30.0\" width=\"20\" height=\"20\" class=\"dancer couple1\"/>\n                    </g>\n                  </svg>\n                </td>\n              </tr>\n              <tr>\n                <td onclick=\"select_dancers([&quot;2m&quot;])\">2m</td>\n                <td onclick=\"formation_onclick\">Dancer(2, Guy())</td>\n                <td>0</td>\n                <td>1//4</td>\n                <td>-0.5</td>\n                <td>-1.5</td>\n                <td>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"-40.000 -20.000 20.000 20.000\" width=\"20.0\" height=\"20.0\">\n                    <g>\n                      <use href=\"../dancer_symbols.svg#Guy\" transform=\"rotate(  0 -30.00 -10.00)\" x=\"-30.0\" y=\"-10.0\" width=\"20\" height=\"20\" class=\"dancer couple2\"/>\n                    </g>\n                  </svg>\n                </td>\n              </tr>\n              <tr>\n                <td onclick=\"select_dancers([&quot;2f&quot;])\">2f</td>\n                <td onclick=\"formation_onclick\">Dancer(2, Gal())</td>\n                <td>0</td>\n                <td>1//4</td>\n                <td>0.5</td>\n                <td>-1.5</td>\n                <td>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"-40.000 0.000 20.000 20.000\" width=\"20.0\" height=\"20.0\">\n                    <g>\n                      <use href=\"../dancer_symbols.svg#Gal\" transform=\"rotate(  0 -30.00 10.00)\" x=\"-30.0\" y=\"10.0\" width=\"20\" height=\"20\" class=\"dancer couple2\"/>\n                    </g>\n                  </svg>\n                </td>\n              </tr>\n              <tr>\n                <td onclick=\"select_dancers([&quot;3m&quot;])\">3m</td>\n                <td onclick=\"formation_onclick\">Dancer(3, Guy())</td>\n                <td>0</td>\n                <td>1//2</td>\n                <td>1.5</td>\n                <td>-0.5</td>\n                <td>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"-20.000 20.000 20.000 20.000\" width=\"20.0\" height=\"20.0\">\n                    <g>\n                      <use href=\"../dancer_symbols.svg#Guy\" transform=\"rotate(-90 -10.00 30.00)\" x=\"-10.0\" y=\"30.0\" width=\"20\" height=\"20\" class=\"dancer couple3\"/>\n                    </g>\n                  </svg>\n                </td>\n              </tr>\n              <tr>\n                <td onclick=\"select_dancers([&quot;3f&quot;])\">3f</td>\n                <td onclick=\"formation_onclick\">Dancer(3, Gal())</td>\n                <td>0</td>\n                <td>1//2</td>\n                <td>1.5</td>\n                <td>0.5</td>\n                <td>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0.000 20.000 20.000 20.000\" width=\"20.0\" height=\"20.0\">\n                    <g>\n                      <use href=\"../dancer_symbols.svg#Gal\" transform=\"rotate(-90 10.00 30.00)\" x=\"10.0\" y=\"30.0\" width=\"20\" height=\"20\" class=\"dancer couple3\"/>\n                    </g>\n                  </svg>\n                </td>\n              </tr>\n              <tr>\n                <td onclick=\"select_dancers([&quot;4m&quot;])\">4m</td>\n                <td onclick=\"formation_onclick\">Dancer(4, Guy())</td>\n                <td>0</td>\n                <td>3//4</td>\n                <td>0.5</td>\n                <td>1.5</td>\n                <td>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"20.000 0.000 20.000 20.000\" width=\"20.0\" height=\"20.0\">\n                    <g>\n                      <use href=\"../dancer_symbols.svg#Guy\" transform=\"rotate(-180 30.00 10.00)\" x=\"30.0\" y=\"10.0\" width=\"20\" height=\"20\" class=\"dancer couple4\"/>\n                    </g>\n                  </svg>\n                </td>\n              </tr>\n              <tr>\n                <td onclick=\"select_dancers([&quot;4f&quot;])\">4f</td>\n                <td onclick=\"formation_onclick\">Dancer(4, Gal())</td>\n                <td>0</td>\n                <td>3//4</td>\n                <td>-0.5</td>\n                <td>1.5</td>\n                <td>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"20.000 -20.000 20.000 20.000\" width=\"20.0\" height=\"20.0\">\n                    <g>\n                      <use href=\"../dancer_symbols.svg#Gal\" transform=\"rotate(-180 30.00 -10.00)\" x=\"30.0\" y=\"-10.0\" width=\"20\" height=\"20\" class=\"dancer couple4\"/>\n                    </g>\n                  </svg>\n                </td>\n              </tr>\n            </tbody>\n          </thead>\n        </table>\n      </div>\n    </div>\n    <div>\n      <svg id=\"floor\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"-40.000 -40.000 80.000 80.000\" width=\"80.0\" height=\"80.0\">\n        <g>\n          <use id=\"1m\" href=\"../dancer_symbols.svg#Guy\" transform=\"rotate( 90 10.00 -30.00)\" x=\"10.0\" y=\"-30.0\" width=\"20\" height=\"20\" class=\"dancer couple1\"/>\n          <use id=\"1f\" href=\"../dancer_symbols.svg#Gal\" transform=\"rotate( 90 -10.00 -30.00)\" x=\"-10.0\" y=\"-30.0\" width=\"20\" height=\"20\" class=\"dancer couple1\"/>\n          <use id=\"3m\" href=\"../dancer_symbols.svg#Guy\" transform=\"rotate(-90 -10.00 30.00)\" x=\"-10.0\" y=\"30.0\" width=\"20\" height=\"20\" class=\"dancer couple3\"/>\n          <use id=\"3f\" href=\"../dancer_symbols.svg#Gal\" transform=\"rotate(-90 10.00 30.00)\" x=\"10.0\" y=\"30.0\" width=\"20\" height=\"20\" class=\"dancer couple3\"/>\n          <use id=\"2m\" href=\"../dancer_symbols.svg#Guy\" transform=\"rotate(  0 -30.00 -10.00)\" x=\"-30.0\" y=\"-10.0\" width=\"20\" height=\"20\" class=\"dancer couple2\"/>\n          <use id=\"2f\" href=\"../dancer_symbols.svg#Gal\" transform=\"rotate(  0 -30.00 10.00)\" x=\"-30.0\" y=\"10.0\" width=\"20\" height=\"20\" class=\"dancer couple2\"/>\n          <use id=\"4m\" href=\"../dancer_symbols.svg#Guy\" transform=\"rotate(-180 30.00 10.00)\" x=\"30.0\" y=\"10.0\" width=\"20\" height=\"20\" class=\"dancer couple4\"/>\n          <use id=\"4f\" href=\"../dancer_symbols.svg#Gal\" transform=\"rotate(-180 30.00 -10.00)\" x=\"30.0\" y=\"-10.0\" width=\"20\" height=\"20\" class=\"dancer couple4\"/>\n        </g>\n      </svg>\n    </div>\n    <div>\n      <h2>Inferred Formations</h2>\n      <ul>\n        <li>\n          CircleOfEight\n          <ul>\n            <li onclick=\"select_dancers([&quot;3f&quot;, &quot;4m&quot;, &quot;4f&quot;, &quot;1m&quot;, &quot;1f&quot;, &quot;2m&quot;, &quot;2f&quot;, &quot;3m&quot;])\">CircleOfEight-3f-4m-4f-1m-1f-2m-2f-3m</li>\n          </ul>\n        </li>\n        <li>\n          Couple\n          <ul>\n            <li onclick=\"select_dancers([&quot;1m&quot;, &quot;1f&quot;])\">Couple-1m-1f</li>\n            <li onclick=\"select_dancers([&quot;2m&quot;, &quot;2f&quot;])\">Couple-2m-2f</li>\n            <li onclick=\"select_dancers([&quot;3m&quot;, &quot;3f&quot;])\">Couple-3m-3f</li>\n            <li onclick=\"select_dancers([&quot;4m&quot;, &quot;4f&quot;])\">Couple-4m-4f</li>\n          </ul>\n        </li>\n        <li>\n          DancerState\n          <ul>\n            <li onclick=\"select_dancers([&quot;1f&quot;])\">1f</li>\n            <li onclick=\"select_dancers([&quot;1m&quot;])\">1m</li>\n            <li onclick=\"select_dancers([&quot;2f&quot;])\">2f</li>\n            <li onclick=\"select_dancers([&quot;2m&quot;])\">2m</li>\n            <li onclick=\"select_dancers([&quot;3f&quot;])\">3f</li>\n            <li onclick=\"select_dancers([&quot;3m&quot;])\">3m</li>\n            <li onclick=\"select_dancers([&quot;4f&quot;])\">4f</li>\n            <li onclick=\"select_dancers([&quot;4m&quot;])\">4m</li>\n          </ul>\n        </li>\n        <li>\n          FaceToFace\n          <ul>\n            <li onclick=\"select_dancers([&quot;1f&quot;, &quot;3m&quot;])\">FaceToFace-1f-3m</li>\n            <li onclick=\"select_dancers([&quot;1m&quot;, &quot;3f&quot;])\">FaceToFace-1m-3f</li>\n            <li onclick=\"select_dancers([&quot;2f&quot;, &quot;4m&quot;])\">FaceToFace-2f-4m</li>\n            <li onclick=\"select_dancers([&quot;2m&quot;, &quot;4f&quot;])\">FaceToFace-2m-4f</li>\n          </ul>\n        </li>\n        <li>\n          FacingCouples\n          <ul>\n            <li onclick=\"select_dancers([&quot;1m&quot;, &quot;1f&quot;, &quot;3m&quot;, &quot;3f&quot;])\">FacingCouples-1m-1f-3m-3f</li>\n            <li onclick=\"select_dancers([&quot;2m&quot;, &quot;2f&quot;, &quot;4m&quot;, &quot;4f&quot;])\">FacingCouples-2m-2f-4m-4f</li>\n          </ul>\n        </li>\n        <li>\n          SquaredSet\n          <ul>\n            <li onclick=\"select_dancers([&quot;1m&quot;, &quot;1f&quot;, &quot;3m&quot;, &quot;3f&quot;, &quot;2m&quot;, &quot;2f&quot;, &quot;4m&quot;, &quot;4f&quot;])\">SquaredSet-1m-1f-3m-3f-2m-2f-4m-4f</li>\n          </ul>\n        </li>\n      </ul>\n    </div>\n  </body>\n</html>","category":"page"},{"location":"formation_drawings/AfterEightChainOne.html","page":"-","title":"-","text":"<html>\n  <head>\n    <meta charset=\"utf-8\"/>\n    <title>AfterEightChainOne</title>\n    <script type=\"text/javascript\" src=\"../dancer_selection.js\"></script>\n    <style>\n      \n\n      svg {\n    background-color: \"gray\";\n}\ntable {\n    empty-cells: show;\n}\n.DancerState-table th {\n    text-align: center;\n    margin-left: 8em;\n    margin-right: 8em;\n}\n.DancerState-table td {\n    text-align: center;\n    margin-left: 8em;\n    margin-right: 8em;\n}\n.DirectionDot {\n    stroke: black;\n    fill: black;\n}\n\n      \n.couple1swatch {\n    color: rgb(255 0 0);\n}\n.couple1 {\n    stroke: black;\n    fill: rgb(255 0 0)\n}\n\n.couple2swatch {\n    color: rgb(255 255 0);\n}\n.couple2 {\n    stroke: black;\n    fill: rgb(255 255 0)\n}\n\n.couple3swatch {\n    color: rgb(0 255 255);\n}\n.couple3 {\n    stroke: black;\n    fill: rgb(0 255 255)\n}\n\n.couple4swatch {\n    color: rgb(255 0 255);\n}\n.couple4 {\n    stroke: black;\n    fill: rgb(255 0 255)\n}\n      \n\n    </style>\n  </head>\n  <body>\n    <h1>AfterEightChainOne</h1>\n    <div>\n      <h2>Dancer Location and Facing Direction</h2>\n      <div class=\"DancerState-table\">\n        <table>\n          <thead>\n            <tr>\n              <th>id</th>\n              <th>dancer</th>\n              <th>time</th>\n              <th>direction</th>\n              <th>down</th>\n              <th>left</th>\n              <th>symbol</th>\n            </tr>\n            <tbody>\n              <tr>\n                <td onclick=\"select_dancers([&quot;1m&quot;])\">1m</td>\n                <td onclick=\"formation_onclick\">Dancer(1, Guy())</td>\n                <td>0</td>\n                <td>3//4</td>\n                <td>2.0</td>\n                <td>1.0</td>\n                <td>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"10.000 30.000 20.000 20.000\" width=\"20.0\" height=\"20.0\">\n                    <g>\n                      <use href=\"../dancer_symbols.svg#Guy\" transform=\"rotate(-180 20.00 40.00)\" x=\"20.0\" y=\"40.0\" width=\"20\" height=\"20\" class=\"dancer couple1\"/>\n                    </g>\n                  </svg>\n                </td>\n              </tr>\n              <tr>\n                <td onclick=\"select_dancers([&quot;1f&quot;])\">1f</td>\n                <td onclick=\"formation_onclick\">Dancer(1, Gal())</td>\n                <td>0</td>\n                <td>3//4</td>\n                <td>1.0</td>\n                <td>1.0</td>\n                <td>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"10.000 10.000 20.000 20.000\" width=\"20.0\" height=\"20.0\">\n                    <g>\n                      <use href=\"../dancer_symbols.svg#Gal\" transform=\"rotate(-180 20.00 20.00)\" x=\"20.0\" y=\"20.0\" width=\"20\" height=\"20\" class=\"dancer couple1\"/>\n                    </g>\n                  </svg>\n                </td>\n              </tr>\n              <tr>\n                <td onclick=\"select_dancers([&quot;2m&quot;])\">2m</td>\n                <td onclick=\"formation_onclick\">Dancer(2, Guy())</td>\n                <td>0</td>\n                <td>1//4</td>\n                <td>1.0</td>\n                <td>2.0</td>\n                <td>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"30.000 10.000 20.000 20.000\" width=\"20.0\" height=\"20.0\">\n                    <g>\n                      <use href=\"../dancer_symbols.svg#Guy\" transform=\"rotate(  0 40.00 20.00)\" x=\"40.0\" y=\"20.0\" width=\"20\" height=\"20\" class=\"dancer couple2\"/>\n                    </g>\n                  </svg>\n                </td>\n              </tr>\n              <tr>\n                <td onclick=\"select_dancers([&quot;2f&quot;])\">2f</td>\n                <td onclick=\"formation_onclick\">Dancer(2, Gal())</td>\n                <td>0</td>\n                <td>1//4</td>\n                <td>2.0</td>\n                <td>2.0</td>\n                <td>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"30.000 30.000 20.000 20.000\" width=\"20.0\" height=\"20.0\">\n                    <g>\n                      <use href=\"../dancer_symbols.svg#Gal\" transform=\"rotate(  0 40.00 40.00)\" x=\"40.0\" y=\"40.0\" width=\"20\" height=\"20\" class=\"dancer couple2\"/>\n                    </g>\n                  </svg>\n                </td>\n              </tr>\n              <tr>\n                <td onclick=\"select_dancers([&quot;3m&quot;])\">3m</td>\n                <td onclick=\"formation_onclick\">Dancer(3, Guy())</td>\n                <td>0</td>\n                <td>3//4</td>\n                <td>2.0</td>\n                <td>3.0</td>\n                <td>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"50.000 30.000 20.000 20.000\" width=\"20.0\" height=\"20.0\">\n                    <g>\n                      <use href=\"../dancer_symbols.svg#Guy\" transform=\"rotate(-180 60.00 40.00)\" x=\"60.0\" y=\"40.0\" width=\"20\" height=\"20\" class=\"dancer couple3\"/>\n                    </g>\n                  </svg>\n                </td>\n              </tr>\n              <tr>\n                <td onclick=\"select_dancers([&quot;3f&quot;])\">3f</td>\n                <td onclick=\"formation_onclick\">Dancer(3, Gal())</td>\n                <td>0</td>\n                <td>3//4</td>\n                <td>1.0</td>\n                <td>3.0</td>\n                <td>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"50.000 10.000 20.000 20.000\" width=\"20.0\" height=\"20.0\">\n                    <g>\n                      <use href=\"../dancer_symbols.svg#Gal\" transform=\"rotate(-180 60.00 20.00)\" x=\"60.0\" y=\"20.0\" width=\"20\" height=\"20\" class=\"dancer couple3\"/>\n                    </g>\n                  </svg>\n                </td>\n              </tr>\n              <tr>\n                <td onclick=\"select_dancers([&quot;4m&quot;])\">4m</td>\n                <td onclick=\"formation_onclick\">Dancer(4, Guy())</td>\n                <td>0</td>\n                <td>1//4</td>\n                <td>1.0</td>\n                <td>4.0</td>\n                <td>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"70.000 10.000 20.000 20.000\" width=\"20.0\" height=\"20.0\">\n                    <g>\n                      <use href=\"../dancer_symbols.svg#Guy\" transform=\"rotate(  0 80.00 20.00)\" x=\"80.0\" y=\"20.0\" width=\"20\" height=\"20\" class=\"dancer couple4\"/>\n                    </g>\n                  </svg>\n                </td>\n              </tr>\n              <tr>\n                <td onclick=\"select_dancers([&quot;4f&quot;])\">4f</td>\n                <td onclick=\"formation_onclick\">Dancer(4, Gal())</td>\n                <td>0</td>\n                <td>1//4</td>\n                <td>2.0</td>\n                <td>4.0</td>\n                <td>\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"70.000 30.000 20.000 20.000\" width=\"20.0\" height=\"20.0\">\n                    <g>\n                      <use href=\"../dancer_symbols.svg#Gal\" transform=\"rotate(  0 80.00 40.00)\" x=\"80.0\" y=\"40.0\" width=\"20\" height=\"20\" class=\"dancer couple4\"/>\n                    </g>\n                  </svg>\n                </td>\n              </tr>\n            </tbody>\n          </thead>\n        </table>\n      </div>\n    </div>\n    <div>\n      <svg id=\"floor\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"10.000 10.000 80.000 40.000\" width=\"80.0\" height=\"40.0\">\n        <g>\n          <use id=\"2m\" href=\"../dancer_symbols.svg#Guy\" transform=\"rotate(  0 40.00 20.00)\" x=\"40.0\" y=\"20.0\" width=\"20\" height=\"20\" class=\"dancer couple2\"/>\n          <use id=\"2f\" href=\"../dancer_symbols.svg#Gal\" transform=\"rotate(  0 40.00 40.00)\" x=\"40.0\" y=\"40.0\" width=\"20\" height=\"20\" class=\"dancer couple2\"/>\n          <use id=\"1m\" href=\"../dancer_symbols.svg#Guy\" transform=\"rotate(-180 20.00 40.00)\" x=\"20.0\" y=\"40.0\" width=\"20\" height=\"20\" class=\"dancer couple1\"/>\n          <use id=\"1f\" href=\"../dancer_symbols.svg#Gal\" transform=\"rotate(-180 20.00 20.00)\" x=\"20.0\" y=\"20.0\" width=\"20\" height=\"20\" class=\"dancer couple1\"/>\n          <use id=\"4m\" href=\"../dancer_symbols.svg#Guy\" transform=\"rotate(  0 80.00 20.00)\" x=\"80.0\" y=\"20.0\" width=\"20\" height=\"20\" class=\"dancer couple4\"/>\n          <use id=\"4f\" href=\"../dancer_symbols.svg#Gal\" transform=\"rotate(  0 80.00 40.00)\" x=\"80.0\" y=\"40.0\" width=\"20\" height=\"20\" class=\"dancer couple4\"/>\n          <use id=\"3m\" href=\"../dancer_symbols.svg#Guy\" transform=\"rotate(-180 60.00 40.00)\" x=\"60.0\" y=\"40.0\" width=\"20\" height=\"20\" class=\"dancer couple3\"/>\n          <use id=\"3f\" href=\"../dancer_symbols.svg#Gal\" transform=\"rotate(-180 60.00 20.00)\" x=\"60.0\" y=\"20.0\" width=\"20\" height=\"20\" class=\"dancer couple3\"/>\n        </g>\n      </svg>\n    </div>\n    <div>\n      <h2>Inferred Formations</h2>\n      <ul>\n        <li>\n          AfterEightChainOne\n          <ul>\n            <li onclick=\"select_dancers([&quot;2m&quot;, &quot;2f&quot;, &quot;1m&quot;, &quot;1f&quot;, &quot;4m&quot;, &quot;4f&quot;, &quot;3m&quot;, &quot;3f&quot;])\">AfterEightChainOne-2m-2f-1m-1f-4m-4f-3m-3f</li>\n          </ul>\n        </li>\n        <li>\n          BackToBack\n          <ul>\n            <li onclick=\"select_dancers([&quot;2f&quot;, &quot;1m&quot;])\">BackToBack-2f-1m</li>\n            <li onclick=\"select_dancers([&quot;2m&quot;, &quot;1f&quot;])\">BackToBack-2m-1f</li>\n            <li onclick=\"select_dancers([&quot;4f&quot;, &quot;3m&quot;])\">BackToBack-4f-3m</li>\n            <li onclick=\"select_dancers([&quot;4m&quot;, &quot;3f&quot;])\">BackToBack-4m-3f</li>\n          </ul>\n        </li>\n        <li>\n          BackToBackCouples\n          <ul>\n            <li onclick=\"select_dancers([&quot;2m&quot;, &quot;2f&quot;, &quot;1m&quot;, &quot;1f&quot;])\">BackToBackCouples-2m-2f-1m-1f</li>\n            <li onclick=\"select_dancers([&quot;4m&quot;, &quot;4f&quot;, &quot;3m&quot;, &quot;3f&quot;])\">BackToBackCouples-4m-4f-3m-3f</li>\n          </ul>\n        </li>\n        <li>\n          Couple\n          <ul>\n            <li onclick=\"select_dancers([&quot;1m&quot;, &quot;1f&quot;])\">Couple-1m-1f</li>\n            <li onclick=\"select_dancers([&quot;2m&quot;, &quot;2f&quot;])\">Couple-2m-2f</li>\n            <li onclick=\"select_dancers([&quot;3m&quot;, &quot;3f&quot;])\">Couple-3m-3f</li>\n            <li onclick=\"select_dancers([&quot;4m&quot;, &quot;4f&quot;])\">Couple-4m-4f</li>\n          </ul>\n        </li>\n        <li>\n          DancerState\n          <ul>\n            <li onclick=\"select_dancers([&quot;1f&quot;])\">1f</li>\n            <li onclick=\"select_dancers([&quot;1m&quot;])\">1m</li>\n            <li onclick=\"select_dancers([&quot;2f&quot;])\">2f</li>\n            <li onclick=\"select_dancers([&quot;2m&quot;])\">2m</li>\n            <li onclick=\"select_dancers([&quot;3f&quot;])\">3f</li>\n            <li onclick=\"select_dancers([&quot;3m&quot;])\">3m</li>\n            <li onclick=\"select_dancers([&quot;4f&quot;])\">4f</li>\n            <li onclick=\"select_dancers([&quot;4m&quot;])\">4m</li>\n          </ul>\n        </li>\n        <li>\n          FaceToFace\n          <ul>\n            <li onclick=\"select_dancers([&quot;2f&quot;, &quot;3m&quot;])\">FaceToFace-2f-3m</li>\n            <li onclick=\"select_dancers([&quot;2m&quot;, &quot;3f&quot;])\">FaceToFace-2m-3f</li>\n          </ul>\n        </li>\n        <li>\n          FacingCouples\n          <ul>\n            <li onclick=\"select_dancers([&quot;2m&quot;, &quot;2f&quot;, &quot;3m&quot;, &quot;3f&quot;])\">FacingCouples-2m-2f-3m-3f</li>\n          </ul>\n        </li>\n      </ul>\n    </div>\n  </body>\n</html>","category":"page"},{"location":"coordinate_system.html#Coordinate-System","page":"Coordinate System","title":"Coordinate System","text":"","category":"section"},{"location":"coordinate_system.html","page":"Coordinate System","title":"Coordinate System","text":"Here we describe the coordinate system used to describe the location and facing direction of each dancer.","category":"page"},{"location":"coordinate_system.html","page":"Coordinate System","title":"Coordinate System","text":"The coordinate system provides a down coordinate and a left coordinate.  Down and left are with respect to the caller's point of view.  Down is a dancer's distance down the floor – away from the caller.  Left is the dancer's position from the right hand side of the set (from the caller's point of view) toward the caller's left.","category":"page"},{"location":"coordinate_system.html","page":"Coordinate System","title":"Coordinate System","text":"If one pictures the caller as being at the left hand edge of one's field of view, then direction, down and left form the angle, X axis and Y axis of a normal right handed cartesean coordinate system.","category":"page"},{"location":"coordinate_system.html","page":"Coordinate System","title":"Coordinate System","text":"Direction is how angles are measured in our coordinate system.  It might describe a direction of motion, the facing direction of a dancer, the direction of a dancer from another dancer's point of view, etc. Direction can be absolute or relative.","category":"page"},{"location":"coordinate_system.html","page":"Coordinate System","title":"Coordinate System","text":"Directions are expressed as fractions of a full circle, so a change in direction of 180 degrees is expressed as a change in Direction of 1/2.  Direction increases in promenade direction – counter clockwise.  An attempt is made to store directions as rational numbers to avoid excessive floating point digits.","category":"page"},{"location":"coordinate_system.html","page":"Coordinate System","title":"Coordinate System","text":"Direction 0 is the direction that the caller is facing and the facing direction of couple number one in a squared set.  In a squared set, the facing direction of couple number two would be 1/4, that of couple number three: 1/2, and that of couple number four: 3/4.","category":"page"},{"location":"coordinate_system.html#Definitions-Relating-to-the-Coordinate-system","page":"Coordinate System","title":"Definitions Relating to the Coordinate system","text":"","category":"section"},{"location":"coordinate_system.html","page":"Coordinate System","title":"Coordinate System","text":"FULL_CIRCLE\ncanonicalize\nopposite\nquarter_left\nquarter_right\nCOUPLE_DISTANCE\ndistance","category":"page"},{"location":"index.html","page":"Home","title":"Home","text":"CurrentModule = SquareDanceReasoning","category":"page"},{"location":"index.html#SquareDanceReasoning","page":"Home","title":"SquareDanceReasoning","text":"","category":"section"},{"location":"index.html","page":"Home","title":"Home","text":"Documentation for SquareDanceReasoning.","category":"page"},{"location":"index.html","page":"Home","title":"Home","text":"This document is intended as a guide to programmers and theory of operation.  Once it is working well enough and made sufficiently usable, I might write a users' guide for square dance choreographers.","category":"page"},{"location":"index.html#Overview","page":"Home","title":"Overview","text":"","category":"section"},{"location":"index.html","page":"Home","title":"Home","text":"Dancer represents a dancer.  A dancer is identified by its couple_number and its gender.","category":"page"},{"location":"index.html","page":"Home","title":"Home","text":"The location and facing direction of a Dancer at a given time is represented by DancerState.  See Coordinate System to learn how dancer location and facing direction are described.","category":"page"},{"location":"index.html","page":"Home","title":"Home","text":"See Motion Primitives for the simplest of operations for moving dancers around.","category":"page"},{"location":"index.html","page":"Home","title":"Home","text":"One of the goals of SquareDanceReasoning is to identify what formation the dancers are in. See Hierarchy of Supported Square Dance Formations for a list of the formations that SquareDanceReasoning can currently recognize.","category":"page"},{"location":"index.html","page":"Home","title":"Home","text":"Some of the reasoning, including formation recognition, is performed using a rule based expert system. See Hierarchy of Knowledge Base Rules for a list of the rules that are implemented.","category":"page"},{"location":"index.html","page":"Home","title":"Home","text":"To facilitate recognizing formations, the relative position predicates in_front_of, behind, left_of, and right_of are provided.","category":"page"}]
}
